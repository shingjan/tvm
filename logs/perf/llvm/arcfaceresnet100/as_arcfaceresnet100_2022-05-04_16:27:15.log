Get devices for measurement successfully!
https://storage.cloud.google.com/octoml-aquarium-models/onnx_model_zoo/vision_body_analysis_arcfaceresnet100.onnx
file existed. Skipping downloading.
/home/ubuntu/cache-workloads/arcfaceresnet100.onnx
Workload: arcfaceresnet100
  input_name: data
  input_shape: [1, 3, 112, 112]
  input_dtype: float32
==== Task 0: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_8 (weight 1 key: ["09927c5eb63e6fce3434b27aeae8184f", [1, 2, 28, 28, 64], [16, 2, 1, 1, 64, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 28, 28, 64]
placeholder = PLACEHOLDER [16, 2, 1, 1, 64, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 64), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 64)]*placeholder[oc_chunk, floordiv(ic, 64), kh, kw, floormod(ic, 64), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 1: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_6 (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 32, 14, 14, 16], [32, 32, 3, 3, 16, 16], [1, 32, 1, 1, 16], [1, 32, 7, 7, 16], [1, 32, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 32, 14, 14, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [32, 32, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 32, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 32, 7, 7, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 2: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_5 (weight 29 key: ["7fdb288a7abcc5486b29e05ffd83ed49", [1, 2, 14, 14, 128], [16, 2, 3, 3, 128, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 14, 14, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 2, 3, 3, 128, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 14, 14, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 3: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 4, 112, 112, 16], [4, 4, 3, 3, 16, 16], [1, 4, 1, 1, 16], [1, 4, 56, 56, 16], [1, 4, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 112, 112, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 4, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 4, 56, 56, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 4: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_4 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 4, 56, 56, 16], [8, 4, 3, 3, 16, 16], [1, 8, 1, 1, 16], [1, 8, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 56, 56, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [8, 4, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 8, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 5: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_5 (weight 1 key: ["370e028deaef8d754954ca49417c56c8", [1, 8, 56, 56, 8], [4, 8, 1, 1, 8, 32], [1, 4, 1, 1, 32], [1, 4, 28, 28, 32]]) =====
placeholder = PLACEHOLDER [1, 8, 56, 56, 8]
placeholder = PLACEHOLDER [4, 8, 1, 1, 8, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 8), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 8)]*placeholder[oc_chunk, floordiv(ic, 8), kh, kw, floormod(ic, 8), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 6: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_7 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 8, 28, 28, 16], [16, 8, 3, 3, 16, 16], [1, 16, 1, 1, 16], [1, 16, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 8, 28, 28, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 8, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 7: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_2 (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 8, 56, 56, 16], [8, 8, 3, 3, 16, 16], [1, 8, 1, 1, 16], [1, 8, 28, 28, 16], [1, 8, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 8, 56, 56, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [8, 8, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 8, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 8, 28, 28, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 8: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_4 (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 16, 28, 28, 16], [16, 16, 3, 3, 16, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 16, 28, 28, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 16, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 14, 14, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 9: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_6 (weight 12 key: ["ebcfabdea1e272d9e71864aa40034c6c", [1, 1, 28, 28, 128], [4, 1, 3, 3, 128, 32], [1, 4, 1, 1, 32], [1, 4, 28, 28, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 28, 28, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 1, 3, 3, 128, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 10: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_10 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 16, 14, 14, 16], [32, 16, 3, 3, 16, 16], [1, 32, 1, 1, 16], [1, 32, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 16, 14, 14, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [32, 16, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 32, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 11: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_1 (weight 2 key: ["081494a7a02432ad3b36e203c3f627a5", [1, 1, 56, 56, 64], [2, 1, 3, 3, 64, 32], [1, 2, 1, 1, 32], [1, 2, 56, 56, 32], [1, 2, 56, 56, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 56, 56, 64]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 64, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 64), (oh + kh), (ow + kw), floormod(ic, 64)]*placeholder[oc_chunk, floordiv(ic, 64), kh, kw, floormod(ic, 64), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 2, 56, 56, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 12: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_1 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 4, 112, 112, 16], [4, 4, 3, 3, 16, 16], [1, 4, 1, 1, 16], [1, 4, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 112, 112, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 4, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 13: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_3 (weight 12 key: ["7fdb288a7abcc5486b29e05ffd83ed49", [1, 1, 28, 28, 128], [4, 1, 3, 3, 128, 32], [1, 4, 1, 1, 32], [1, 4, 28, 28, 32], [1, 4, 28, 28, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 28, 28, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 1, 3, 3, 128, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 4, 28, 28, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 14: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_multiply_add (weight 1 key: ["6f6bf93d34c3200fd08fbf37a9c7eb3f", [1, 1, 7, 7, 512], [16, 1, 3, 3, 512, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32], [1, 16, 1, 1, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 7, 7, 512]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 1, 3, 3, 512, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 512), (oh + kh), (ow + kw), floormod(ic, 512)]*placeholder[oc_chunk, floordiv(ic, 512), kh, kw, floormod(ic, 512), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 7, 7, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_multiply(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4]*placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_multiply[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 15: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_9 (weight 29 key: ["ebcfabdea1e272d9e71864aa40034c6c", [1, 2, 14, 14, 128], [16, 2, 3, 3, 128, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 14, 14, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 2, 3, 3, 128, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 16: vm_mod_fused_nn_contrib_conv2d_NCHWc_add (weight 1 key: ["1953b61638ee4fe45fc00b30d2cb05f0", [1, 1, 112, 112, 3], [4, 1, 3, 3, 3, 16], [1, 4, 1, 1, 16], [1, 4, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 1, 112, 112, 3]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 1, 3, 3, 3, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 3), (oh + kh), (ow + kw), floormod(ic, 3)]*placeholder[oc_chunk, floordiv(ic, 3), kh, kw, floormod(ic, 3), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 17: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_7 (weight 1 key: ["1f841d7d69840d3527fec3b966858d88", [1, 1, 7, 7, 512], [16, 1, 3, 3, 512, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 7, 7, 512]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 1, 3, 3, 512, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 512), (oh + kh), (ow + kw), floormod(ic, 512)]*placeholder[oc_chunk, floordiv(ic, 512), kh, kw, floormod(ic, 512), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 7, 7, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1997	fail_ct: 1	Time elapsed: 1.62
GA Iter: 0	Max score: 0.9999	Min score: 0.9341	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9876	#Pop: 128	#M+: 1375	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 3.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
/home/ubuntu/anaconda3/lib/python3.9/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
  warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
Time elapsed for training: 9.78 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1718	fail_ct: 0	Time elapsed: 2.21
GA Iter: 0	Max score: 0.9995	Min score: 0.9245	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9864	#Pop: 128	#M+: 1390	#M-: 33
EvolutionarySearch		#s: 128	Time elapsed: 5.79
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................************************************************Time elapsed for measurement: 16.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 1.24
GA Iter: 0	Max score: 0.9995	Min score: 0.9260	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9872	#Pop: 128	#M+: 1382	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 5.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
==== Task 18: vm_mod_fused_nn_dense_add (weight 1 key: ["7d44c6e3c81cd80f61ff2265b2bae89a", [1, 25088], [512, 25088], [1, 512], [1, 512]]) =====
placeholder = PLACEHOLDER [1, 25088]
placeholder = PLACEHOLDER [512, 25088]
T_matmul_NT(i, j) += (placeholder[i, k]*placeholder[j, k])
placeholder = PLACEHOLDER [1, 512]
T_add(ax0, ax1) = (T_matmul_NT[ax0, ax1] + placeholder[ax0, ax1])

==== Task 19: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_11 (weight 1 key: ["773c41006e47e5d7f5dcf5a882434619", [1, 2, 14, 14, 128], [16, 2, 1, 1, 128, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 2, 14, 14, 128]
placeholder = PLACEHOLDER [16, 2, 1, 1, 128, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 128), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 20: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_12 (weight 2 key: ["f21a06ddd41805defd5a52dec67bfcd5", [1, 1, 7, 7, 512], [16, 1, 3, 3, 512, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 7, 7, 512]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 1, 3, 3, 512, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 512), (oh + kh), (ow + kw), floormod(ic, 512)]*placeholder[oc_chunk, floordiv(ic, 512), kh, kw, floormod(ic, 512), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 21: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_3 (weight 2 key: ["0bbd45a21c1a307f29fded9c948826f7", [1, 1, 56, 56, 64], [2, 1, 3, 3, 64, 32], [1, 2, 1, 1, 32], [1, 2, 56, 56, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 56, 56, 64]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 64, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 64), (oh + kh), (ow + kw), floormod(ic, 64)]*placeholder[oc_chunk, floordiv(ic, 64), kh, kw, floormod(ic, 64), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 22: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_2 (weight 1 key: ["2e98eb88a2ec87d3ad99c76bdbb0fbed", [1, 4, 112, 112, 16], [4, 4, 1, 1, 16, 16], [1, 4, 1, 1, 16], [1, 4, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 112, 112, 16]
placeholder = PLACEHOLDER [4, 4, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |            - |              - |      0 |
|    1 |            - |              - |      0 |
|    2 |            - |              - |      0 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 0	Used time : 0 s	Next ID: 0	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |            - |              - |      0 |
|    2 |            - |              - |      0 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 64	Used time : 40 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |            - |              - |      0 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 128	Used time : 71 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1753	fail_ct: 0	Time elapsed: 0.98
GA Iter: 0	Max score: 0.9998	Min score: 0.9324	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9867	#Pop: 128	#M+: 1385	#M-: 32
EvolutionarySearch		#s: 128	Time elapsed: 4.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 192	Used time : 113 s	Next ID: 3	
.T.T**************************************************************Time elapsed for measurement: 29.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.28 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1826	fail_ct: 0	Time elapsed: 2.67
GA Iter: 0	Max score: 0.9992	Min score: 0.9255	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9884	#Pop: 128	#M+: 1386	#M-: 32
EvolutionarySearch		#s: 128	Time elapsed: 9.77
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 33.71 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2022	fail_ct: 0	Time elapsed: 2.07
GA Iter: 0	Max score: 0.9997	Min score: 0.9347	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9873	#Pop: 128	#M+: 1389	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 6.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 256	Used time : 154 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 320	Used time : 208 s	Next ID: 5	
.T***************************************************************Time elapsed for measurement: 25.01 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1797	fail_ct: 0	Time elapsed: 2.26
GA Iter: 0	Max score: 0.9999	Min score: 0.9331	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9870	#Pop: 128	#M+: 1393	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 10.25
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.50 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.20 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1753	fail_ct: 0	Time elapsed: 1.72
GA Iter: 0	Max score: 0.9998	Min score: 0.9254	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9853	#Pop: 128	#M+: 1382	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 9.92
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 384	Used time : 251 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 448	Used time : 292 s	Next ID: 7	
.T***************************************************************Time elapsed for measurement: 30.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.42 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1749	fail_ct: 0	Time elapsed: 1.16
GA Iter: 0	Max score: 0.9999	Min score: 0.9269	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9875	#Pop: 128	#M+: 1386	#M-: 30
EvolutionarySearch		#s: 128	Time elapsed: 6.82
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 512	Used time : 341 s	Next ID: 8	
.T.T**************************************************************Time elapsed for measurement: 27.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.17 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1743	fail_ct: 0	Time elapsed: 2.21
GA Iter: 0	Max score: 0.9999	Min score: 0.9288	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9869	#Pop: 128	#M+: 1391	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 8.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
.............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 576	Used time : 389 s	Next ID: 9	
.T.T.**************************************************************Time elapsed for measurement: 28.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.49 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1785	fail_ct: 0	Time elapsed: 1.38
GA Iter: 0	Max score: 0.9998	Min score: 0.9222	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9874	#Pop: 128	#M+: 1393	#M-: 33
EvolutionarySearch		#s: 128	Time elapsed: 7.63
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 34.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.30 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1735	fail_ct: 0	Time elapsed: 1.79
GA Iter: 0	Max score: 0.9993	Min score: 0.9305	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9872	#Pop: 128	#M+: 1397	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 8.05
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 640	Used time : 437 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 704	Used time : 490 s	Next ID: 11	
.T.T**************************************************************Time elapsed for measurement: 26.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1813	fail_ct: 0	Time elapsed: 1.86
GA Iter: 0	Max score: 0.9997	Min score: 0.9242	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9860	#Pop: 128	#M+: 1385	#M-: 32
EvolutionarySearch		#s: 128	Time elapsed: 10.28
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..........................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 768	Used time : 539 s	Next ID: 12	
.T.....T**************************************************************Time elapsed for measurement: 28.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1782	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.9998	Min score: 0.9236	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9893	#Pop: 128	#M+: 1391	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 4.47
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 832	Used time : 582 s	Next ID: 13	
.T.T**************************************************************Time elapsed for measurement: 25.69 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.95 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1742	fail_ct: 0	Time elapsed: 1.86
GA Iter: 0	Max score: 0.9996	Min score: 0.9294	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9996	Min score: 0.9868	#Pop: 128	#M+: 1394	#M-: 30
EvolutionarySearch		#s: 128	Time elapsed: 5.42
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 896	Used time : 633 s	Next ID: 14	
.T...T**************************************************************Time elapsed for measurement: 28.01 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.29 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1770	fail_ct: 0	Time elapsed: 1.17
GA Iter: 0	Max score: 0.9994	Min score: 0.9242	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9862	#Pop: 128	#M+: 1397	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 4.79
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 960	Used time : 680 s	Next ID: 15	
.T.T**************************************************************Time elapsed for measurement: 24.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 24.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 1.76
GA Iter: 0	Max score: 0.9998	Min score: 0.9347	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9898	#Pop: 128	#M+: 1382	#M-: 37
EvolutionarySearch		#s: 128	Time elapsed: 7.04
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 28.20 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 23.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1712	fail_ct: 0	Time elapsed: 1.68
GA Iter: 0	Max score: 1.0000	Min score: 0.9213	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9869	#Pop: 128	#M+: 1384	#M-: 32
EvolutionarySearch		#s: 128	Time elapsed: 7.25
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1024	Used time : 735 s	Next ID: 16	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1088	Used time : 795 s	Next ID: 17	
.T.***************************************************************Time elapsed for measurement: 27.61 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1632	fail_ct: 236	Time elapsed: 0.72
GA Iter: 0	Max score: 0.9999	Min score: 0.9230	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9857	#Pop: 128	#M+: 1381	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 2.93
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.24 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.06 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1962	fail_ct: 6	Time elapsed: 0.65
GA Iter: 0	Max score: 0.9997	Min score: 0.9383	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9873	#Pop: 128	#M+: 1380	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 2.79
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1152	Used time : 852 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1216	Used time : 877 s	Next ID: 19	
.T***************************************************************Time elapsed for measurement: 23.52 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.20 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1695	fail_ct: 0	Time elapsed: 1.27
GA Iter: 0	Max score: 0.9996	Min score: 0.9182	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9864	#Pop: 128	#M+: 1398	#M-: 30
EvolutionarySearch		#s: 128	Time elapsed: 6.54
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1280	Used time : 919 s	Next ID: 20	
.T***************************************************************Time elapsed for measurement: 25.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.00 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1734	fail_ct: 0	Time elapsed: 1.15
GA Iter: 0	Max score: 0.9985	Min score: 0.9265	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9870	#Pop: 128	#M+: 1375	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 7.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1344	Used time : 965 s	Next ID: 21	
.T.T**************************************************************Time elapsed for measurement: 31.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 1.11
GA Iter: 0	Max score: 0.9993	Min score: 0.9378	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9996	Min score: 0.9887	#Pop: 128	#M+: 1388	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1408	Used time : 1019 s	Next ID: 22	
.T***************************************************************Time elapsed for measurement: 27.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.93 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1764	fail_ct: 0	Time elapsed: 0.91
GA Iter: 0	Max score: 0.9999	Min score: 0.9264	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9866	#Pop: 128	#M+: 1408	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 5.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
.........................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |     64 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 21.477 ms	Trials: 1472	Used time : 1055 s	Next ID: 2	
.T.T.T.T..T.T**********************************************************Time elapsed for measurement: 26.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 24.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 2.42
GA Iter: 0	Max score: 0.9804	Min score: 0.3357	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0126	Min score: 0.7516	#Pop: 128	#M+: 1387	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 7.74
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 26.24 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.43 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1759	fail_ct: 0	Time elapsed: 1.69
GA Iter: 0	Max score: 0.9260	Min score: 0.4862	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9980	Min score: 0.7921	#Pop: 128	#M+: 1387	#M-: 40
EvolutionarySearch		#s: 128	Time elapsed: 10.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 27.06 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 1.98
GA Iter: 0	Max score: 0.7391	Min score: 0.3514	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8990	Min score: 0.6837	#Pop: 128	#M+: 1381	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 11.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.26 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.41 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1749	fail_ct: 0	Time elapsed: 1.61
GA Iter: 0	Max score: 0.7542	Min score: 0.3462	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9811	Min score: 0.7574	#Pop: 128	#M+: 1392	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 12.13
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
.......................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |    128 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.147 |        1573.32 |     64 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 21.477 ms	Trials: 1536	Used time : 1113 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |    128 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.256 |         903.79 |     64 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.117 |        1968.87 |    128 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 20.621 ms	Trials: 1600	Used time : 1158 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.208 |        1112.86 |    128 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.117 |        1968.87 |    128 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 18.689 ms	Trials: 1664	Used time : 1210 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.102 |        2270.89 |    192 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.168 |        1377.61 |     64 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.117 |        1968.87 |    128 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 15.615 ms	Trials: 1728	Used time : 1263 s	Next ID: 13	
.T..T.T....T.T***********************************************************Time elapsed for measurement: 24.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.40 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1779	fail_ct: 0	Time elapsed: 1.53
GA Iter: 0	Max score: 0.6965	Min score: 0.3013	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9583	Min score: 0.7446	#Pop: 128	#M+: 1396	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 6.82
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.40 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.27 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1777	fail_ct: 0	Time elapsed: 1.52
GA Iter: 0	Max score: 0.7651	Min score: 0.3309	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0646	Min score: 0.8259	#Pop: 128	#M+: 1378	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 11.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 27.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 2.43
GA Iter: 0	Max score: 0.6679	Min score: 0.2745	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0013	Min score: 0.7373	#Pop: 128	#M+: 1381	#M-: 36
EvolutionarySearch		#s: 128	Time elapsed: 8.94
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 31.59 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 22.26 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 1.71
GA Iter: 0	Max score: 0.7192	Min score: 0.2781	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9760	Min score: 0.8222	#Pop: 128	#M+: 1389	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 9.42
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.102 |        2270.89 |    192 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.117 |        1968.87 |    128 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 14.911 ms	Trials: 1792	Used time : 1318 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.102 |        2270.89 |    192 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.105 |        2201.72 |    192 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 14.551 ms	Trials: 1856	Used time : 1370 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.102 |        2270.89 |    192 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.096 |        2421.54 |    256 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 14.274 ms	Trials: 1920	Used time : 1425 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.093 |        2496.87 |    256 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.096 |        2421.54 |    256 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 14.007 ms	Trials: 1984	Used time : 1491 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 27.30 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1705	fail_ct: 0	Time elapsed: 2.45
GA Iter: 0	Max score: 0.8865	Min score: 0.4796	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0719	Min score: 0.8377	#Pop: 128	#M+: 1386	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 11.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.090 |        2579.07 |    320 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.096 |        2421.54 |    256 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.450 |         514.15 |     64 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 13.921 ms	Trials: 2048	Used time : 1551 s	Next ID: 20	
.T***************************************************************Time elapsed for measurement: 31.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1780	fail_ct: 0	Time elapsed: 1.64
GA Iter: 0	Max score: 0.9036	Min score: 0.4146	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9880	Min score: 0.8099	#Pop: 128	#M+: 1385	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 11.04
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.11 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 1.73
GA Iter: 0	Max score: 0.5498	Min score: 0.2738	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0042	Min score: 0.8548	#Pop: 128	#M+: 1391	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 13.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 31.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1780	fail_ct: 0	Time elapsed: 1.82
GA Iter: 0	Max score: 0.6559	Min score: 0.2668	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0043	Min score: 0.8987	#Pop: 128	#M+: 1391	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 11.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.31 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 1.78
GA Iter: 0	Max score: 0.6183	Min score: 0.3141	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0290	Min score: 0.8289	#Pop: 128	#M+: 1380	#M-: 38
EvolutionarySearch		#s: 128	Time elapsed: 10.07
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
.............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.090 |        2579.07 |    320 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.894 |        1035.43 |     64 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.096 |        2421.54 |    256 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 13.306 ms	Trials: 2112	Used time : 1617 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.090 |        2579.07 |    320 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.096 |        2421.54 |    256 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 12.805 ms	Trials: 2176	Used time : 1651 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.090 |        2579.07 |    320 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.092 |        2515.74 |    320 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 12.701 ms	Trials: 2240	Used time : 1718 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.109 |        2117.60 |    128 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.092 |        2515.74 |    320 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 12.680 ms	Trials: 2304	Used time : 1771 s	Next ID: 13	
.T.T.T*************************************************************Time elapsed for measurement: 29.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 30.15 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1765	fail_ct: 0	Time elapsed: 1.73
GA Iter: 0	Max score: 0.7430	Min score: 0.4548	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0110	Min score: 0.7139	#Pop: 128	#M+: 1387	#M-: 37
EvolutionarySearch		#s: 128	Time elapsed: 10.41
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.318 |         729.18 |     64 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.092 |        2515.74 |    320 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 12.458 ms	Trials: 2368	Used time : 1843 s	Next ID: 11	
.T***************************************************************Time elapsed for measurement: 29.11 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1759	fail_ct: 0	Time elapsed: 2.22
GA Iter: 0	Max score: 0.7232	Min score: 0.2628	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9973	Min score: 0.8805	#Pop: 128	#M+: 1394	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 12.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 34.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 30.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 1.19
GA Iter: 0	Max score: 0.8457	Min score: 0.4202	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0043	Min score: 0.7425	#Pop: 128	#M+: 1395	#M-: 36
EvolutionarySearch		#s: 128	Time elapsed: 5.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 23.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1794	fail_ct: 0	Time elapsed: 2.27
GA Iter: 0	Max score: 0.7637	Min score: 0.3785	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9856	Min score: 0.7298	#Pop: 128	#M+: 1390	#M-: 33
EvolutionarySearch		#s: 128	Time elapsed: 11.58
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.59 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 49.45 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1756	fail_ct: 0	Time elapsed: 0.92
GA Iter: 0	Max score: 0.6907	Min score: 0.2760	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0427	Min score: 0.8169	#Pop: 128	#M+: 1390	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 10.25
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.59 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 35.69 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 0	Time elapsed: 1.38
GA Iter: 0	Max score: 0.5554	Min score: 0.2675	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9723	Min score: 0.8687	#Pop: 128	#M+: 1393	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 8.80
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 33.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.092 |        2515.74 |    320 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 12.036 ms	Trials: 2432	Used time : 1905 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.581 |         398.12 |     64 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.090 |        2555.72 |    384 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 11.994 ms	Trials: 2496	Used time : 1985 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.579 |         799.38 |     64 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.090 |        2555.72 |    384 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 11.551 ms	Trials: 2560	Used time : 2030 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.095 |        2436.28 |    128 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.090 |        2555.72 |    384 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 11.158 ms	Trials: 2624	Used time : 2115 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.090 |        2555.72 |    384 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 11.046 ms	Trials: 2688	Used time : 2185 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    384 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.089 |        2593.61 |    448 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1777	fail_ct: 0	Time elapsed: 2.63
GA Iter: 0	Max score: 0.6727	Min score: 0.2697	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9986	Min score: 0.9023	#Pop: 128	#M+: 1403	#M-: 8
EvolutionarySearch		#s: 128	Time elapsed: 12.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................*************************************************Time elapsed for measurement: 18.96 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 26.63 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 1.66
GA Iter: 0	Max score: 0.8193	Min score: 0.2425	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9752	Min score: 0.8689	#Pop: 128	#M+: 1398	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 9.19
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 41.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1787	fail_ct: 0	Time elapsed: 1.51
GA Iter: 0	Max score: 0.6705	Min score: 0.2623	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9913	Min score: 0.9215	#Pop: 128	#M+: 1398	#M-: 8
EvolutionarySearch		#s: 128	Time elapsed: 9.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.91 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.91 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1790	fail_ct: 0	Time elapsed: 1.79
GA Iter: 0	Max score: 0.6918	Min score: 0.3082	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0004	Min score: 0.7844	#Pop: 128	#M+: 1387	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 11.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
.............................................................-------------------------------------------------
Estimated total latency: 11.007 ms	Trials: 2752	Used time : 2244 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    448 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.089 |        2593.61 |    448 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 11.007 ms	Trials: 2816	Used time : 2305 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    448 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 11.007 ms	Trials: 2880	Used time : 2383 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.091 |        2548.88 |    192 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 11.007 ms	Trials: 2944	Used time : 2429 s	Next ID: 13	
.T..T**************************************************************Time elapsed for measurement: 29.27 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.28 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1757	fail_ct: 0	Time elapsed: 2.51
GA Iter: 0	Max score: 0.8529	Min score: 0.4053	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9767	Min score: 0.7458	#Pop: 128	#M+: 1377	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 13.47
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 26.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 44.68 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1771	fail_ct: 0	Time elapsed: 1.34
GA Iter: 0	Max score: 0.8284	Min score: 0.3432	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0146	Min score: 0.8882	#Pop: 128	#M+: 1398	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 8.40
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.95 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 39.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1758	fail_ct: 0	Time elapsed: 2.51
GA Iter: 0	Max score: 0.6436	Min score: 0.2986	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9809	Min score: 0.8785	#Pop: 128	#M+: 1398	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 11.99
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 25.06 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1762	fail_ct: 0	Time elapsed: 2.47
GA Iter: 0	Max score: 0.6552	Min score: 0.2998	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9992	Min score: 0.9052	#Pop: 128	#M+: 1395	#M-: 8
EvolutionarySearch		#s: 128	Time elapsed: 10.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.99 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1801	fail_ct: 0	Time elapsed: 2.15
GA Iter: 0	Max score: 0.8495	Min score: 0.3285	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0034	Min score: 0.7617	#Pop: 128	#M+: 1391	#M-: 33
EvolutionarySearch		#s: 128	Time elapsed: 9.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.11 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.56 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.088 |        2638.65 |    256 |
|   14 |        0.362 |         639.29 |     64 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.970 ms	Trials: 3008	Used time : 2492 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.088 |        2638.65 |    256 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.727 ms	Trials: 3072	Used time : 2579 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.086 |        2702.70 |    192 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.724 ms	Trials: 3136	Used time : 2644 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.083 |        2795.97 |    256 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.689 ms	Trials: 3200	Used time : 2698 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.332 |        1394.82 |     64 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.679 ms	Trials: 3264	Used time : 2754 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2593.61 |    512 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1783	fail_ct: 0	Time elapsed: 1.82
GA Iter: 0	Max score: 0.6284	Min score: 0.2394	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9850	Min score: 0.8806	#Pop: 128	#M+: 1384	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 9.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................-------------------------------------------------
Estimated total latency: 10.529 ms	Trials: 3328	Used time : 2791 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 29.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1746	fail_ct: 0	Time elapsed: 1.44
GA Iter: 0	Max score: 0.6032	Min score: 0.2543	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9761	Min score: 0.9204	#Pop: 128	#M+: 1395	#M-: 4
EvolutionarySearch		#s: 128	Time elapsed: 8.76
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 29.09 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 2.11
GA Iter: 0	Max score: 0.6823	Min score: 0.3103	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9982	Min score: 0.6613	#Pop: 128	#M+: 1382	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 10.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.34 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 29.48 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1743	fail_ct: 0	Time elapsed: 1.96
GA Iter: 0	Max score: 0.8198	Min score: 0.4116	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0131	Min score: 0.7763	#Pop: 128	#M+: 1398	#M-: 37
EvolutionarySearch		#s: 128	Time elapsed: 9.04
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    512 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2612.29 |    576 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.510 ms	Trials: 3392	Used time : 2884 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    576 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.306 |         754.75 |     64 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2612.29 |    576 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.510 ms	Trials: 3456	Used time : 2941 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    576 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2612.29 |    576 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.151 |        1531.12 |     64 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.348 ms	Trials: 3520	Used time : 3000 s	Next ID: 21	
.T***************************************************************Time elapsed for measurement: 27.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 36.38 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1767	fail_ct: 0	Time elapsed: 2.11
GA Iter: 0	Max score: 0.6110	Min score: 0.2303	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9855	Min score: 0.8821	#Pop: 128	#M+: 1402	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 9.44
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.61 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 0.89
GA Iter: 0	Max score: 0.5885	Min score: 0.2791	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0032	Min score: 0.9253	#Pop: 128	#M+: 1374	#M-: 6
EvolutionarySearch		#s: 128	Time elapsed: 5.61
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.44 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 59.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1609	fail_ct: 239	Time elapsed: 0.85
GA Iter: 0	Max score: 1.0405	Min score: 0.9401	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0810	Min score: 1.0078	#Pop: 128	#M+: 1380	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.84
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 27.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1771	fail_ct: 0	Time elapsed: 1.80
GA Iter: 0	Max score: 0.7807	Min score: 0.2217	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0079	Min score: 0.8849	#Pop: 128	#M+: 1382	#M-: 10
EvolutionarySearch		#s: 128	Time elapsed: 9.75
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.91 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 34.58 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 1.84
GA Iter: 0	Max score: 0.7401	Min score: 0.2567	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9868	Min score: 0.9282	#Pop: 128	#M+: 1391	#M-: 6
EvolutionarySearch		#s: 128	Time elapsed: 10.00
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.30 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 45.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    576 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2612.29 |    576 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.231 ms	Trials: 3584	Used time : 3075 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    576 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2612.29 |    640 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.231 ms	Trials: 3648	Used time : 3105 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    640 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2612.29 |    640 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.286 |          89.79 |     64 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.231 ms	Trials: 3712	Used time : 3187 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    640 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.089 |        2612.29 |    640 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.228 ms	Trials: 3776	Used time : 3240 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    640 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    704 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.220 ms	Trials: 3840	Used time : 3307 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    704 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    704 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.249 |         929.63 |     64 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1732	fail_ct: 0	Time elapsed: 2.40
GA Iter: 0	Max score: 0.8245	Min score: 0.2861	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0538	Min score: 0.7142	#Pop: 128	#M+: 1399	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 11.55
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.39 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 46.29 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1765	fail_ct: 0	Time elapsed: 2.37
GA Iter: 0	Max score: 0.7127	Min score: 0.3702	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9949	Min score: 0.7451	#Pop: 128	#M+: 1395	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 11.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.64 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.83 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1763	fail_ct: 0	Time elapsed: 1.44
GA Iter: 0	Max score: 0.6323	Min score: 0.2215	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9827	Min score: 0.9039	#Pop: 128	#M+: 1406	#M-: 11
EvolutionarySearch		#s: 128	Time elapsed: 12.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 38.24 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1782	fail_ct: 0	Time elapsed: 2.19
GA Iter: 0	Max score: 0.5859	Min score: 0.2577	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9828	Min score: 0.9278	#Pop: 128	#M+: 1394	#M-: 5
EvolutionarySearch		#s: 128	Time elapsed: 11.44
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.65 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1792	fail_ct: 0	Time elapsed: 1.31
GA Iter: 0	Max score: 0.7211	Min score: 0.3092	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9969	Min score: 0.9225	#Pop: 128	#M+: 1385	#M-: 10
EvolutionarySearch		#s: 128	Time elapsed: 7.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 53.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 1.80
GA Iter: 0	Max score: 0.6576	Min score: 0.2567	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9859	Min score: 0.9403	#Pop: 128	#M+: 1385	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 8.68
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.41 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 36.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 10.220 ms	Trials: 3904	Used time : 3382 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    704 |
|    3 |        0.235 |         985.59 |     64 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    704 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 10.083 ms	Trials: 3968	Used time : 3464 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    704 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    704 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.959 ms	Trials: 4032	Used time : 3513 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    704 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    768 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.959 ms	Trials: 4096	Used time : 3586 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    768 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2647.78 |    320 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    768 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.959 ms	Trials: 4160	Used time : 3635 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    768 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    768 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.956 ms	Trials: 4224	Used time : 3719 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    832 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    768 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 2.62
GA Iter: 0	Max score: 0.7710	Min score: 0.2282	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9852	Min score: 0.9180	#Pop: 128	#M+: 1388	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 12.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 25.45 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1747	fail_ct: 0	Time elapsed: 1.45
GA Iter: 0	Max score: 0.7967	Min score: 0.2673	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9855	Min score: 0.8985	#Pop: 128	#M+: 1391	#M-: 8
EvolutionarySearch		#s: 128	Time elapsed: 11.69
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 51.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1760	fail_ct: 0	Time elapsed: 1.90
GA Iter: 0	Max score: 0.6856	Min score: 0.2648	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9843	Min score: 0.9387	#Pop: 128	#M+: 1394	#M-: 6
EvolutionarySearch		#s: 128	Time elapsed: 7.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.34 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 23.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1774	fail_ct: 0	Time elapsed: 2.64
GA Iter: 0	Max score: 0.6701	Min score: 0.2302	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9844	Min score: 0.9195	#Pop: 128	#M+: 1399	#M-: 8
EvolutionarySearch		#s: 128	Time elapsed: 12.96
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.956 ms	Trials: 4288	Used time : 3788 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    832 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2826.21 |    320 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    832 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.956 ms	Trials: 4352	Used time : 3851 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.29 |    832 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    832 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.954 ms	Trials: 4416	Used time : 3935 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |    896 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    832 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.954 ms	Trials: 4480	Used time : 3985 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 33.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 26.05 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1799	fail_ct: 0	Time elapsed: 2.57
GA Iter: 0	Max score: 0.7801	Min score: 0.3224	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0076	Min score: 0.8105	#Pop: 128	#M+: 1391	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 10.94
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.41 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 36.99 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1783	fail_ct: 0	Time elapsed: 2.32
GA Iter: 0	Max score: 0.7072	Min score: 0.2529	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9888	Min score: 0.7786	#Pop: 128	#M+: 1395	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 8.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.71 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 35.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1764	fail_ct: 0	Time elapsed: 1.79
GA Iter: 0	Max score: 0.7457	Min score: 0.2568	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9820	Min score: 0.9408	#Pop: 128	#M+: 1399	#M-: 10
EvolutionarySearch		#s: 128	Time elapsed: 12.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |    896 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.392 |        2359.50 |    128 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    896 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.954 ms	Trials: 4544	Used time : 4061 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |    896 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.186 |        2490.26 |     64 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    896 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.918 ms	Trials: 4608	Used time : 4136 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |    896 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    896 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.906 ms	Trials: 4672	Used time : 4197 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 28.99 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.80 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1742	fail_ct: 0	Time elapsed: 0.88
GA Iter: 0	Max score: 0.6349	Min score: 0.2478	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9840	Min score: 0.9316	#Pop: 128	#M+: 1388	#M-: 12
EvolutionarySearch		#s: 128	Time elapsed: 9.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.39 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 35.16 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1749	fail_ct: 0	Time elapsed: 0.95
GA Iter: 0	Max score: 0.7499	Min score: 0.3128	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0045	Min score: 0.9189	#Pop: 128	#M+: 1379	#M-: 11
EvolutionarySearch		#s: 128	Time elapsed: 7.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.92 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1761	fail_ct: 0	Time elapsed: 2.41
GA Iter: 0	Max score: 0.8271	Min score: 0.2812	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9869	Min score: 0.9395	#Pop: 128	#M+: 1386	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 13.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.04 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.55 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1757	fail_ct: 0	Time elapsed: 1.82
GA Iter: 0	Max score: 0.6984	Min score: 0.2243	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9861	Min score: 0.9352	#Pop: 128	#M+: 1392	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 9.35
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 58.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1753	fail_ct: 0	Time elapsed: 2.32
GA Iter: 0	Max score: 0.9290	Min score: 0.3084	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9849	Min score: 0.9191	#Pop: 128	#M+: 1402	#M-: 6
EvolutionarySearch		#s: 128	Time elapsed: 13.74
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |    960 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    896 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.906 ms	Trials: 4736	Used time : 4259 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |    960 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    384 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    960 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.906 ms	Trials: 4800	Used time : 4325 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |    960 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    960 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.906 ms	Trials: 4864	Used time : 4398 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |   1024 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2620.84 |    960 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.906 ms	Trials: 4928	Used time : 4476 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |   1024 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2829.62 |    384 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2621.77 |   1024 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.905 ms	Trials: 4992	Used time : 4564 s	Next ID: 9	
.T***************************************************************Time elapsed for measurement: 29.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 30.47 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 2.38
GA Iter: 0	Max score: 0.6425	Min score: 0.2622	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9837	Min score: 0.9416	#Pop: 128	#M+: 1383	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 13.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 33.86 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1785	fail_ct: 0	Time elapsed: 2.17
GA Iter: 0	Max score: 0.8263	Min score: 0.2224	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9856	Min score: 0.9398	#Pop: 128	#M+: 1385	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 10.71
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2600.79 |   1024 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2621.77 |   1024 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.903 ms	Trials: 5056	Used time : 4641 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1088 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2621.77 |   1024 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.900 ms	Trials: 5120	Used time : 4708 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 27.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 45.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1769	fail_ct: 0	Time elapsed: 2.61
GA Iter: 0	Max score: 0.6531	Min score: 0.2505	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9895	Min score: 0.9407	#Pop: 128	#M+: 1393	#M-: 14
EvolutionarySearch		#s: 128	Time elapsed: 11.82
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 42.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1761	fail_ct: 0	Time elapsed: 1.97
GA Iter: 0	Max score: 0.5986	Min score: 0.2216	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9836	Min score: 0.9372	#Pop: 128	#M+: 1391	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 9.41
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.21 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 26.59 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1736	fail_ct: 0	Time elapsed: 1.77
GA Iter: 0	Max score: 0.6992	Min score: 0.3109	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0512	Min score: 0.9344	#Pop: 128	#M+: 1395	#M-: 10
EvolutionarySearch		#s: 128	Time elapsed: 11.98
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.61 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 36.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1774	fail_ct: 0	Time elapsed: 1.57
GA Iter: 0	Max score: 0.6535	Min score: 0.2938	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9897	Min score: 0.6768	#Pop: 128	#M+: 1394	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 8.11
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 47.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 1.66
GA Iter: 0	Max score: 0.6965	Min score: 0.2436	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9886	Min score: 0.9419	#Pop: 128	#M+: 1394	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 11.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.62 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 32.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1088 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1088 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.900 ms	Trials: 5184	Used time : 4793 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1152 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1088 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.900 ms	Trials: 5248	Used time : 4875 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1152 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2657.47 |    448 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1152 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.900 ms	Trials: 5312	Used time : 4933 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1152 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.148 |        1564.96 |     64 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1152 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.899 ms	Trials: 5376	Used time : 5004 s	Next ID: 7	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1152 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1152 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.863 ms	Trials: 5440	Used time : 5079 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1216 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1152 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.142 |        1624.90 |    128 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1677	fail_ct: 0	Time elapsed: 2.48
GA Iter: 0	Max score: 0.7047	Min score: 0.2595	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0167	Min score: 0.7920	#Pop: 128	#M+: 1386	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 13.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.21 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 41.38 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1746	fail_ct: 0	Time elapsed: 2.78
GA Iter: 0	Max score: 0.5874	Min score: 0.2287	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9836	Min score: 0.9417	#Pop: 128	#M+: 1382	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 10.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 50.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1618	fail_ct: 235	Time elapsed: 0.75
GA Iter: 0	Max score: 0.9894	Min score: 0.9307	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9990	Min score: 0.9849	#Pop: 128	#M+: 1388	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.92 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 46.27 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1767	fail_ct: 0	Time elapsed: 1.43
GA Iter: 0	Max score: 0.8486	Min score: 0.2926	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9845	Min score: 0.9241	#Pop: 128	#M+: 1396	#M-: 8
EvolutionarySearch		#s: 128	Time elapsed: 10.29
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.00 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 43.67 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1780	fail_ct: 0	Time elapsed: 2.51
GA Iter: 0	Max score: 0.7534	Min score: 0.2429	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9878	Min score: 0.9405	#Pop: 128	#M+: 1386	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 13.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.83 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 34.78 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1784	fail_ct: 0	Time elapsed: 2.48
GA Iter: 0	Max score: 0.6452	Min score: 0.2175	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9805	Min score: 0.9367	#Pop: 128	#M+: 1384	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 12.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 25.38 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.863 ms	Trials: 5504	Used time : 5147 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1216 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1152 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.768 ms	Trials: 5568	Used time : 5228 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1216 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1216 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    128 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.768 ms	Trials: 5632	Used time : 5310 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1216 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    448 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1216 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.768 ms	Trials: 5696	Used time : 5379 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1216 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    512 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1216 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.768 ms	Trials: 5760	Used time : 5454 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1280 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    512 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1216 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.768 ms	Trials: 5824	Used time : 5524 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1280 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    512 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    512 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1280 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1734	fail_ct: 0	Time elapsed: 1.29
GA Iter: 0	Max score: 0.7540	Min score: 0.3459	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9978	Min score: 0.9547	#Pop: 128	#M+: 1411	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 7.05
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 26.79 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1774	fail_ct: 0	Time elapsed: 2.71
GA Iter: 0	Max score: 0.6879	Min score: 0.2470	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9852	Min score: 0.9422	#Pop: 128	#M+: 1407	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 14.02
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.67 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 50.40 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1780	fail_ct: 0	Time elapsed: 2.78
GA Iter: 0	Max score: 0.7133	Min score: 0.2293	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9864	Min score: 0.9385	#Pop: 128	#M+: 1394	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 10.87
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 33.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1789	fail_ct: 0	Time elapsed: 2.93
GA Iter: 0	Max score: 0.6947	Min score: 0.2586	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9811	Min score: 0.9359	#Pop: 128	#M+: 1389	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 11.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.65 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 37.60 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1770	fail_ct: 0	Time elapsed: 2.30
GA Iter: 0	Max score: 0.8738	Min score: 0.2987	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9797	Min score: 0.9316	#Pop: 128	#M+: 1382	#M-: 7
EvolutionarySearch		#s: 128	Time elapsed: 12.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 25.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1804	fail_ct: 0	Time elapsed: 1.32
GA Iter: 0	Max score: 0.6456	Min score: 0.2086	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9869	Min score: 0.9368	#Pop: 128	#M+: 1379	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 10.63
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.47 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 35.68 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.768 ms	Trials: 5888	Used time : 5583 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.089 |        2604.10 |   1280 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    512 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1280 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.768 ms	Trials: 5952	Used time : 5635 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1344 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    512 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1280 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.746 ms	Trials: 6016	Used time : 5723 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1344 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    512 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1344 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.746 ms	Trials: 6080	Used time : 5788 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1408 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.082 |        2834.52 |    512 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1344 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.746 ms	Trials: 6144	Used time : 5859 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1408 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1344 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.730 ms	Trials: 6208	Used time : 5919 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1408 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.356 |        2596.83 |    192 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1408 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1782	fail_ct: 0	Time elapsed: 2.99
GA Iter: 0	Max score: 0.7415	Min score: 0.2900	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0252	Min score: 0.8523	#Pop: 128	#M+: 1387	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 11.75
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.26 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1825	fail_ct: 0	Time elapsed: 1.18
GA Iter: 0	Max score: 0.8235	Min score: 0.3040	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0133	Min score: 0.8877	#Pop: 128	#M+: 1389	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 8.39
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.730 ms	Trials: 6272	Used time : 5987 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1408 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.328 |        2824.80 |    256 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1408 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.701 ms	Trials: 6336	Used time : 6070 s	Next ID: 12	
.T***************************************************************Time elapsed for measurement: 28.67 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 30.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1786	fail_ct: 0	Time elapsed: 2.26
GA Iter: 0	Max score: 0.7466	Min score: 0.2786	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9923	Min score: 0.9329	#Pop: 128	#M+: 1392	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 11.98
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.41 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 2.56
GA Iter: 0	Max score: 0.7239	Min score: 0.2290	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9814	Min score: 0.9357	#Pop: 128	#M+: 1387	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 13.51
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1408 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1408 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.694 ms	Trials: 6400	Used time : 6140 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1472 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1408 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.694 ms	Trials: 6464	Used time : 6189 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 29.22 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 51.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1738	fail_ct: 0	Time elapsed: 1.96
GA Iter: 0	Max score: 0.8498	Min score: 0.3270	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9945	Min score: 0.9534	#Pop: 128	#M+: 1389	#M-: 7
EvolutionarySearch		#s: 128	Time elapsed: 9.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 33.41 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1779	fail_ct: 0	Time elapsed: 3.30
GA Iter: 0	Max score: 0.5892	Min score: 0.2677	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9832	Min score: 0.9346	#Pop: 128	#M+: 1385	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 14.27
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 47.60 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1782	fail_ct: 0	Time elapsed: 1.40
GA Iter: 0	Max score: 0.7011	Min score: 0.2267	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9799	Min score: 0.9368	#Pop: 128	#M+: 1386	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 6.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.40 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1742	fail_ct: 0	Time elapsed: 3.13
GA Iter: 0	Max score: 0.8165	Min score: 0.2938	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9930	Min score: 0.9265	#Pop: 128	#M+: 1395	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 15.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 51.32 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 1.93
GA Iter: 0	Max score: 0.8177	Min score: 0.3657	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9796	Min score: 0.7906	#Pop: 128	#M+: 1387	#M-: 41
EvolutionarySearch		#s: 128	Time elapsed: 9.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1472 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    576 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1472 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.694 ms	Trials: 6528	Used time : 6286 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1472 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    640 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1472 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.694 ms	Trials: 6592	Used time : 6356 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1536 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    640 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1472 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.694 ms	Trials: 6656	Used time : 6445 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1536 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    576 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    640 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1536 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.694 ms	Trials: 6720	Used time : 6476 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1536 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.107 |        2172.38 |    128 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    640 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1536 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.694 ms	Trials: 6784	Used time : 6567 s	Next ID: 11	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1536 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    640 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1536 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1790	fail_ct: 0	Time elapsed: 2.01
GA Iter: 0	Max score: 0.6240	Min score: 0.2350	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9828	Min score: 0.9369	#Pop: 128	#M+: 1385	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 12.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 30.93 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 2.02
GA Iter: 0	Max score: 0.9103	Min score: 0.2648	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9858	Min score: 0.9374	#Pop: 128	#M+: 1396	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 9.13
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 61.45 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1746	fail_ct: 0	Time elapsed: 1.74
GA Iter: 0	Max score: 0.8050	Min score: 0.3618	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9949	Min score: 0.9652	#Pop: 128	#M+: 1391	#M-: 7
EvolutionarySearch		#s: 128	Time elapsed: 10.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 38.13 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1766	fail_ct: 0	Time elapsed: 2.18
GA Iter: 0	Max score: 0.7900	Min score: 0.2382	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9851	Min score: 0.9382	#Pop: 128	#M+: 1393	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 12.98
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.71 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 54.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1761	fail_ct: 0	Time elapsed: 2.11
GA Iter: 0	Max score: 0.7667	Min score: 0.2661	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9807	Min score: 0.9360	#Pop: 128	#M+: 1385	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 13.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.97 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.43 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1768	fail_ct: 0	Time elapsed: 2.24
GA Iter: 0	Max score: 0.7296	Min score: 0.2261	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9810	Min score: 0.9364	#Pop: 128	#M+: 1381	#M-: 17
EvolutionarySearch		#s: 128	Time elapsed: 12.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 46.60 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.668 ms	Trials: 6848	Used time : 6617 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1536 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    640 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1600 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.668 ms	Trials: 6912	Used time : 6682 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1600 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.087 |        2660.26 |    640 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1600 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.668 ms	Trials: 6976	Used time : 6777 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1600 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    704 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1600 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7040	Used time : 6846 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1600 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    704 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1664 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7104	Used time : 6935 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1664 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    704 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1664 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7168	Used time : 7012 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1664 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    704 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1728 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1771	fail_ct: 0	Time elapsed: 1.96
GA Iter: 0	Max score: 0.6820	Min score: 0.2529	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9903	Min score: 0.9353	#Pop: 128	#M+: 1397	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 13.43
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7232	Used time : 7092 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 36.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.07 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1737	fail_ct: 0	Time elapsed: 1.78
GA Iter: 0	Max score: 0.7986	Min score: 0.3077	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9818	Min score: 0.9280	#Pop: 128	#M+: 1389	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 9.73
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 44.69 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1771	fail_ct: 0	Time elapsed: 2.00
GA Iter: 0	Max score: 0.8181	Min score: 0.3426	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0175	Min score: 0.9623	#Pop: 128	#M+: 1398	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 10.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 43.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1793	fail_ct: 0	Time elapsed: 2.61
GA Iter: 0	Max score: 0.6078	Min score: 0.2318	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9833	Min score: 0.9362	#Pop: 128	#M+: 1384	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 11.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.15 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 2.78
GA Iter: 0	Max score: 0.7187	Min score: 0.2650	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9796	Min score: 0.9371	#Pop: 128	#M+: 1388	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 14.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1728 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    640 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    704 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1728 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7296	Used time : 7214 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1728 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    704 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1728 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7360	Used time : 7286 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1728 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1728 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7424	Used time : 7359 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1728 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1792 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7488	Used time : 7428 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 30.27 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.12 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1607	fail_ct: 251	Time elapsed: 1.42
GA Iter: 0	Max score: 0.9889	Min score: 0.9385	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9973	Min score: 0.9818	#Pop: 128	#M+: 1385	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 3.47
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.12 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.46 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1777	fail_ct: 0	Time elapsed: 1.82
GA Iter: 0	Max score: 0.7475	Min score: 0.2450	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9886	Min score: 0.7615	#Pop: 128	#M+: 1386	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 12.47
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.65 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.63 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 2.47
GA Iter: 0	Max score: 0.8443	Min score: 0.3584	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9927	Min score: 0.8679	#Pop: 128	#M+: 1388	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 11.27
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.65 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 35.27 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1760	fail_ct: 0	Time elapsed: 1.10
GA Iter: 0	Max score: 0.6201	Min score: 0.2271	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9901	Min score: 0.9347	#Pop: 128	#M+: 1380	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 6.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 32.01 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1777	fail_ct: 0	Time elapsed: 2.61
GA Iter: 0	Max score: 0.6782	Min score: 0.2642	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9862	Min score: 0.9408	#Pop: 128	#M+: 1379	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 13.17
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 58.77 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1792 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1792 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    192 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7552	Used time : 7545 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1792 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    128 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1792 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7616	Used time : 7606 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1792 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1792 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.093 |        2496.31 |    128 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.662 ms	Trials: 7680	Used time : 7695 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1792 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1792 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.654 ms	Trials: 7744	Used time : 7763 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1792 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1856 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.654 ms	Trials: 7808	Used time : 7829 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1856 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.181 |        2550.11 |    128 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1856 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1798	fail_ct: 0	Time elapsed: 1.88
GA Iter: 0	Max score: 0.7211	Min score: 0.3060	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9875	Min score: 0.7651	#Pop: 128	#M+: 1384	#M-: 37
EvolutionarySearch		#s: 128	Time elapsed: 9.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 29.85 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 30.98 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 2.75
GA Iter: 0	Max score: 0.7543	Min score: 0.2890	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9818	Min score: 0.9356	#Pop: 128	#M+: 1393	#M-: 12
EvolutionarySearch		#s: 128	Time elapsed: 13.11
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 25.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1793	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.6358	Min score: 0.2294	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9784	Min score: 0.9380	#Pop: 128	#M+: 1395	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 12.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 59.66 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 2.22
GA Iter: 0	Max score: 0.7309	Min score: 0.2676	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9851	Min score: 0.9392	#Pop: 128	#M+: 1395	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 10.58
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.80 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 41.41 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1758	fail_ct: 0	Time elapsed: 2.60
GA Iter: 0	Max score: 0.7814	Min score: 0.3266	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9853	Min score: 0.9636	#Pop: 128	#M+: 1395	#M-: 12
EvolutionarySearch		#s: 128	Time elapsed: 12.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 41.99 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 2.15
GA Iter: 0	Max score: 0.7875	Min score: 0.2792	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9673	Min score: 0.8368	#Pop: 128	#M+: 1396	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 13.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 72.03 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.654 ms	Trials: 7872	Used time : 7928 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1856 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    704 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1856 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.642 ms	Trials: 7936	Used time : 8000 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1856 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1856 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.642 ms	Trials: 8000	Used time : 8059 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1856 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1920 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.642 ms	Trials: 8064	Used time : 8151 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1920 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    768 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1920 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.642 ms	Trials: 8128	Used time : 8228 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1920 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.174 |        2667.37 |    128 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    832 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1920 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.642 ms	Trials: 8192	Used time : 8306 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1920 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    832 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1920 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1770	fail_ct: 0	Time elapsed: 1.79
GA Iter: 0	Max score: 0.7914	Min score: 0.2197	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9819	Min score: 0.9342	#Pop: 128	#M+: 1389	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 11.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 37.30 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 2.12
GA Iter: 0	Max score: 0.7874	Min score: 0.2446	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9831	Min score: 0.9394	#Pop: 128	#M+: 1398	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 14.27
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8256	Used time : 8414 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1920 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    832 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1984 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8320	Used time : 8487 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 29.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 49.76 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 1.67
GA Iter: 0	Max score: 0.6695	Min score: 0.2386	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9770	Min score: 0.9348	#Pop: 128	#M+: 1391	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 8.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.50 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 53.87 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1788	fail_ct: 0	Time elapsed: 1.94
GA Iter: 0	Max score: 0.7248	Min score: 0.2630	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9919	Min score: 0.9373	#Pop: 128	#M+: 1387	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 10.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.20 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 44.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1768	fail_ct: 0	Time elapsed: 1.90
GA Iter: 0	Max score: 0.7771	Min score: 0.3537	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9924	Min score: 0.9649	#Pop: 128	#M+: 1386	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 11.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 39.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1769	fail_ct: 0	Time elapsed: 2.38
GA Iter: 0	Max score: 0.8446	Min score: 0.3030	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9822	Min score: 0.9373	#Pop: 128	#M+: 1383	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 13.99
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.46 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 26.37 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1793	fail_ct: 0	Time elapsed: 1.96
GA Iter: 0	Max score: 0.7600	Min score: 0.2431	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9815	Min score: 0.9338	#Pop: 128	#M+: 1384	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 10.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.77 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 63.55 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1984 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    832 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   1984 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8384	Used time : 8584 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   1984 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    832 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   2048 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8448	Used time : 8664 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2048 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    832 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   2048 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8512	Used time : 8738 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2048 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    768 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   2048 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8576	Used time : 8814 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2048 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   2048 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8640	Used time : 8873 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2048 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   2112 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 1.78
GA Iter: 0	Max score: 0.7456	Min score: 0.2622	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9948	Min score: 0.9384	#Pop: 128	#M+: 1389	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 11.84
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 57.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 2.84
GA Iter: 0	Max score: 0.6177	Min score: 0.2080	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9859	Min score: 0.9347	#Pop: 128	#M+: 1385	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 13.71
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 43.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 2.71
GA Iter: 0	Max score: 0.7431	Min score: 0.2534	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9836	Min score: 0.9402	#Pop: 128	#M+: 1396	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 15.39
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8704	Used time : 8966 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2112 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2622.00 |   2112 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.634 ms	Trials: 8768	Used time : 9054 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2112 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2176 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 8832	Used time : 9132 s	Next ID: 2	
.T***********************************************Time elapsed for measurement: 29.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 61.57 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.6642	Min score: 0.2345	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9788	Min score: 0.9266	#Pop: 128	#M+: 1397	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 6.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.98 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 53.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1750	fail_ct: 0	Time elapsed: 2.49
GA Iter: 0	Max score: 0.7409	Min score: 0.2609	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9832	Min score: 0.9357	#Pop: 128	#M+: 1381	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 12.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.76 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.58 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1743	fail_ct: 0	Time elapsed: 2.60
GA Iter: 0	Max score: 0.7791	Min score: 0.3475	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9881	Min score: 0.9645	#Pop: 128	#M+: 1390	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 11.47
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.37 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 0	Time elapsed: 2.24
GA Iter: 0	Max score: 0.8725	Min score: 0.2865	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9817	Min score: 0.9416	#Pop: 128	#M+: 1392	#M-: 17
EvolutionarySearch		#s: 128	Time elapsed: 13.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.39 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.00 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1750	fail_ct: 0	Time elapsed: 1.89
GA Iter: 0	Max score: 0.6066	Min score: 0.2133	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9840	Min score: 0.9303	#Pop: 128	#M+: 1385	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 11.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.96 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 61.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2176 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2176 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 8896	Used time : 9242 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2176 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2240 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 8960	Used time : 9319 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2240 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    896 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2240 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 9024	Used time : 9408 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2240 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    832 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2240 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 9088	Used time : 9485 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2240 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2240 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 9152	Used time : 9588 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2240 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2304 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 2.47
GA Iter: 0	Max score: 0.7242	Min score: 0.2357	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9887	Min score: 0.9364	#Pop: 128	#M+: 1389	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 12.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.64 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 49.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1765	fail_ct: 0	Time elapsed: 1.95
GA Iter: 0	Max score: 0.7766	Min score: 0.2825	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9833	Min score: 0.8063	#Pop: 128	#M+: 1385	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 8.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 41.86 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1780	fail_ct: 0	Time elapsed: 2.53
GA Iter: 0	Max score: 0.6037	Min score: 0.2310	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9884	Min score: 0.9305	#Pop: 128	#M+: 1394	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 11.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.19 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 56.09 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1620	fail_ct: 262	Time elapsed: 0.94
GA Iter: 0	Max score: 0.9839	Min score: 0.9512	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9984	Min score: 0.9814	#Pop: 128	#M+: 1390	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.29
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.46 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.20 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1753	fail_ct: 0	Time elapsed: 2.78
GA Iter: 0	Max score: 0.8212	Min score: 0.2530	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9861	Min score: 0.9365	#Pop: 128	#M+: 1376	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 14.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 9216	Used time : 9684 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2304 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.144 |        1607.49 |    128 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2304 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.623 ms	Trials: 9280	Used time : 9770 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2304 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2304 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.585 ms	Trials: 9344	Used time : 9841 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2304 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2368 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    256 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.585 ms	Trials: 9408	Used time : 9937 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2304 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2368 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.585 ms	Trials: 9472	Used time : 10012 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 31.04 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 54.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1760	fail_ct: 0	Time elapsed: 2.96
GA Iter: 0	Max score: 0.6190	Min score: 0.2748	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9926	Min score: 0.9080	#Pop: 128	#M+: 1392	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 15.54
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1748	fail_ct: 0	Time elapsed: 1.77
GA Iter: 0	Max score: 0.7518	Min score: 0.3455	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9905	Min score: 0.9686	#Pop: 128	#M+: 1385	#M-: 11
EvolutionarySearch		#s: 128	Time elapsed: 8.29
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 44.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1750	fail_ct: 0	Time elapsed: 2.14
GA Iter: 0	Max score: 0.6969	Min score: 0.2334	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9601	Min score: 0.7704	#Pop: 128	#M+: 1385	#M-: 45
EvolutionarySearch		#s: 128	Time elapsed: 10.24
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.80 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 47.57 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1784	fail_ct: 0	Time elapsed: 2.35
GA Iter: 0	Max score: 0.6322	Min score: 0.2475	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9848	Min score: 0.9341	#Pop: 128	#M+: 1384	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 13.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 38.76 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1778	fail_ct: 0	Time elapsed: 1.70
GA Iter: 0	Max score: 0.8103	Min score: 0.2173	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9895	Min score: 0.9319	#Pop: 128	#M+: 1391	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 7.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.36 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 45.58 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2368 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.321 |        2885.99 |    320 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2368 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.585 ms	Trials: 9536	Used time : 10115 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2368 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2675.34 |    960 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2368 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.582 ms	Trials: 9600	Used time : 10225 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.138 |        1675.22 |    128 |
|    2 |        0.088 |        2626.80 |   2368 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2368 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.580 ms	Trials: 9664	Used time : 10297 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2368 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2368 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 9728	Used time : 10382 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2432 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2368 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 9792	Used time : 10459 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2432 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    896 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2432 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1749	fail_ct: 0	Time elapsed: 2.52
GA Iter: 0	Max score: 0.7797	Min score: 0.3170	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9861	Min score: 0.9567	#Pop: 128	#M+: 1401	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 13.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.17 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 72.64 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1785	fail_ct: 0	Time elapsed: 1.78
GA Iter: 0	Max score: 0.6972	Min score: 0.2432	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9829	Min score: 0.9341	#Pop: 128	#M+: 1391	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 10.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.11 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 48.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 0	Time elapsed: 2.23
GA Iter: 0	Max score: 0.6726	Min score: 0.1913	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9888	Min score: 0.9326	#Pop: 128	#M+: 1397	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 10.56
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.63 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1771	fail_ct: 0	Time elapsed: 2.71
GA Iter: 0	Max score: 0.8125	Min score: 0.2406	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9838	Min score: 0.9325	#Pop: 128	#M+: 1394	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 10.84
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 63.09 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1755	fail_ct: 0	Time elapsed: 1.74
GA Iter: 0	Max score: 0.6961	Min score: 0.2267	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9881	Min score: 0.9322	#Pop: 128	#M+: 1388	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 8.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 9856	Used time : 10532 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2432 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    960 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2432 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 9920	Used time : 10642 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2496 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    960 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2432 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 9984	Used time : 10718 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2496 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    960 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2496 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10048	Used time : 10809 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2560 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    960 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2496 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10112	Used time : 10903 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 27.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 60.99 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1738	fail_ct: 0	Time elapsed: 1.70
GA Iter: 0	Max score: 0.8853	Min score: 0.3387	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9877	Min score: 0.9626	#Pop: 128	#M+: 1388	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 11.51
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2560 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    960 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1024 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2560 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10176	Used time : 11002 s	Next ID: 13	
.T***************************************************************Time elapsed for measurement: 31.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 53.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1743	fail_ct: 0	Time elapsed: 1.76
GA Iter: 0	Max score: 0.8141	Min score: 0.2825	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9870	Min score: 0.9534	#Pop: 128	#M+: 1387	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 9.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.95 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 27.96 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1747	fail_ct: 0	Time elapsed: 2.67
GA Iter: 0	Max score: 0.6653	Min score: 0.2526	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9867	Min score: 0.9306	#Pop: 128	#M+: 1402	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 14.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.80 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 72.95 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1782	fail_ct: 0	Time elapsed: 1.30
GA Iter: 0	Max score: 0.5865	Min score: 0.2374	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9879	Min score: 0.9376	#Pop: 128	#M+: 1370	#M-: 17
EvolutionarySearch		#s: 128	Time elapsed: 8.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 48.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1724	fail_ct: 0	Time elapsed: 2.50
GA Iter: 0	Max score: 0.5984	Min score: 0.2210	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9678	Min score: 0.7096	#Pop: 128	#M+: 1392	#M-: 10
EvolutionarySearch		#s: 128	Time elapsed: 13.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.65 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 65.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1703	fail_ct: 0	Time elapsed: 1.94
GA Iter: 0	Max score: 0.5633	Min score: 0.2118	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9090	Min score: 0.7467	#Pop: 128	#M+: 1391	#M-: 9
EvolutionarySearch		#s: 128	Time elapsed: 8.77
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 63.94 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2560 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |    960 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2560 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10240	Used time : 11101 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2560 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2560 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10304	Used time : 11151 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2624 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2560 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10368	Used time : 11265 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2624 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2624 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    192 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10432	Used time : 11349 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2624 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2624 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.095 |        2428.39 |    256 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.561 ms	Trials: 10496	Used time : 11449 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2624 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.094 |        2476.25 |    192 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2624 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1740	fail_ct: 0	Time elapsed: 1.83
GA Iter: 0	Max score: 0.8035	Min score: 0.3079	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9802	Min score: 0.8394	#Pop: 128	#M+: 1387	#M-: 36
EvolutionarySearch		#s: 128	Time elapsed: 8.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 83.32 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1729	fail_ct: 0	Time elapsed: 2.40
GA Iter: 0	Max score: 0.7063	Min score: 0.2989	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9829	Min score: 0.8525	#Pop: 128	#M+: 1392	#M-: 30
EvolutionarySearch		#s: 128	Time elapsed: 11.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.49 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.15 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1752	fail_ct: 0	Time elapsed: 2.67
GA Iter: 0	Max score: 0.8527	Min score: 0.2438	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9829	Min score: 0.9342	#Pop: 128	#M+: 1386	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 14.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.98 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 64.29 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1751	fail_ct: 0	Time elapsed: 2.32
GA Iter: 0	Max score: 0.7865	Min score: 0.2256	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9962	Min score: 0.9328	#Pop: 128	#M+: 1379	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 13.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.38 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 49.53 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1808	fail_ct: 0	Time elapsed: 2.92
GA Iter: 0	Max score: 0.7483	Min score: 0.2496	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9820	Min score: 0.8768	#Pop: 128	#M+: 1400	#M-: 14
EvolutionarySearch		#s: 128	Time elapsed: 14.74
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................-------------------------------------------------
Estimated total latency: 9.548 ms	Trials: 10560	Used time : 11548 s	Next ID: 11	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2624 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.087 |        2650.85 |    256 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2624 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.536 ms	Trials: 10624	Used time : 11665 s	Next ID: 11	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2624 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2624 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.532 ms	Trials: 10688	Used time : 11752 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2688 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2624 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.532 ms	Trials: 10752	Used time : 11854 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2688 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.185 |        2494.11 |    192 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2688 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.532 ms	Trials: 10816	Used time : 11943 s	Next ID: 10	
.T***************************************************************Time elapsed for measurement: 29.29 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 66.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1817	fail_ct: 0	Time elapsed: 0.92
GA Iter: 0	Max score: 0.7636	Min score: 0.2455	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9188	Min score: 0.8006	#Pop: 128	#M+: 1400	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 5.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.32 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 42.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 2.04
GA Iter: 0	Max score: 0.7747	Min score: 0.3279	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9862	Min score: 0.9625	#Pop: 128	#M+: 1398	#M-: 11
EvolutionarySearch		#s: 128	Time elapsed: 12.80
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 62.34 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1748	fail_ct: 0	Time elapsed: 1.92
GA Iter: 0	Max score: 0.6584	Min score: 0.2440	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9974	Min score: 0.9335	#Pop: 128	#M+: 1395	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 13.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 48.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1792	fail_ct: 0	Time elapsed: 2.14
GA Iter: 0	Max score: 0.6439	Min score: 0.2103	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9893	Min score: 0.9363	#Pop: 128	#M+: 1392	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 12.52
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.55 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 47.76 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1773	fail_ct: 0	Time elapsed: 2.76
GA Iter: 0	Max score: 0.7961	Min score: 0.2801	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9895	Min score: 0.9611	#Pop: 128	#M+: 1385	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 15.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 64.07 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2688 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.162 |        2848.69 |    256 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2688 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.509 ms	Trials: 10880	Used time : 12057 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2688 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1088 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2688 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.508 ms	Trials: 10944	Used time : 12115 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2688 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2688 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.508 ms	Trials: 11008	Used time : 12218 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2752 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2688 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.508 ms	Trials: 11072	Used time : 12301 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2752 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1024 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2752 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.508 ms	Trials: 11136	Used time : 12378 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2752 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.119 |        1945.29 |    128 |
|   15 |        0.088 |        2633.30 |   2752 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1731	fail_ct: 0	Time elapsed: 2.70
GA Iter: 0	Max score: 0.6797	Min score: 0.2830	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0095	Min score: 0.7683	#Pop: 128	#M+: 1390	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 10.69
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 28.30 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 56.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1765	fail_ct: 0	Time elapsed: 2.74
GA Iter: 0	Max score: 0.8212	Min score: 0.2435	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9850	Min score: 0.9287	#Pop: 128	#M+: 1397	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 10.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 60.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1766	fail_ct: 0	Time elapsed: 2.50
GA Iter: 0	Max score: 0.7858	Min score: 0.2332	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9906	Min score: 0.9364	#Pop: 128	#M+: 1385	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 13.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 44.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1721	fail_ct: 0	Time elapsed: 1.94
GA Iter: 0	Max score: 0.7023	Min score: 0.3167	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9593	Min score: 0.8834	#Pop: 128	#M+: 1392	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 11.69
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.38 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.99 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1767	fail_ct: 0	Time elapsed: 2.15
GA Iter: 0	Max score: 0.6974	Min score: 0.2412	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9864	Min score: 0.9255	#Pop: 128	#M+: 1392	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 11.87
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.38 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 41.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1771	fail_ct: 1	Time elapsed: 2.73
GA Iter: 0	Max score: 0.8010	Min score: 0.2191	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9931	Min score: 0.9379	#Pop: 128	#M+: 1395	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 14.98
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.50 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 65.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.508 ms	Trials: 11200	Used time : 12477 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2752 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2752 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.481 ms	Trials: 11264	Used time : 12575 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2816 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2752 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.481 ms	Trials: 11328	Used time : 12666 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2816 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2816 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.089 |        2605.72 |    192 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.481 ms	Trials: 11392	Used time : 12745 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2816 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2816 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.478 ms	Trials: 11456	Used time : 12820 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2880 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2816 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.478 ms	Trials: 11520	Used time : 12895 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2880 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2681.67 |   1152 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2880 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1728	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.9609	Min score: 0.3292	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9839	Min score: 0.9638	#Pop: 128	#M+: 1388	#M-: 10
EvolutionarySearch		#s: 128	Time elapsed: 9.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................*************************************************Time elapsed for measurement: 17.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 50.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1774	fail_ct: 0	Time elapsed: 2.01
GA Iter: 0	Max score: 0.7039	Min score: 0.2557	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9861	Min score: 0.9256	#Pop: 128	#M+: 1383	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 12.37
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 67.12 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1631	fail_ct: 243	Time elapsed: 0.92
GA Iter: 0	Max score: 0.9824	Min score: 0.9516	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0049	Min score: 0.9804	#Pop: 128	#M+: 1366	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 5.05
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.77 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 49.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1753	fail_ct: 0	Time elapsed: 1.77
GA Iter: 0	Max score: 0.6970	Min score: 0.2958	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9875	Min score: 0.9618	#Pop: 128	#M+: 1378	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 9.17
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.61 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 53.12 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1767	fail_ct: 0	Time elapsed: 2.34
GA Iter: 0	Max score: 0.6827	Min score: 0.2098	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9946	Min score: 0.9413	#Pop: 128	#M+: 1390	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 12.91
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.96 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 66.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1808	fail_ct: 0	Time elapsed: 1.77
GA Iter: 0	Max score: 0.6561	Min score: 0.2587	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9593	Min score: 0.7973	#Pop: 128	#M+: 1382	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 12.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 27.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 71.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.478 ms	Trials: 11584	Used time : 13003 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2880 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2880 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.476 ms	Trials: 11648	Used time : 13082 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2880 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    320 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.476 ms	Trials: 11712	Used time : 13185 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2882.97 |   1088 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2880 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.476 ms	Trials: 11776	Used time : 13259 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2880 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.473 ms	Trials: 11840	Used time : 13338 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    192 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.473 ms	Trials: 11904	Used time : 13444 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    256 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.318 |        2914.35 |    384 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1820	fail_ct: 0	Time elapsed: 2.72
GA Iter: 0	Max score: 0.7452	Min score: 0.2657	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9881	Min score: 0.9233	#Pop: 128	#M+: 1392	#M-: 12
EvolutionarySearch		#s: 128	Time elapsed: 12.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 56.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1778	fail_ct: 0	Time elapsed: 1.97
GA Iter: 0	Max score: 0.7494	Min score: 0.2804	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9719	Min score: 0.7928	#Pop: 128	#M+: 1382	#M-: 14
EvolutionarySearch		#s: 128	Time elapsed: 9.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.473 ms	Trials: 11968	Used time : 13558 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    256 |
|    7 |        0.112 |        2066.22 |    128 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.465 ms	Trials: 12032	Used time : 13649 s	Next ID: 7	
.T***************************************************************Time elapsed for measurement: 29.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 45.14 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 1.70
GA Iter: 0	Max score: 0.6940	Min score: 0.2930	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0241	Min score: 0.7549	#Pop: 128	#M+: 1392	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 10.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 81.08 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1800	fail_ct: 0	Time elapsed: 2.23
GA Iter: 0	Max score: 0.8348	Min score: 0.2728	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9782	Min score: 0.8631	#Pop: 128	#M+: 1391	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 10.57
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.38 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 57.43 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1736	fail_ct: 0	Time elapsed: 2.69
GA Iter: 0	Max score: 0.6278	Min score: 0.2344	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0986	Min score: 0.8536	#Pop: 128	#M+: 1396	#M-: 11
EvolutionarySearch		#s: 128	Time elapsed: 12.98
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 65.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1740	fail_ct: 0	Time elapsed: 1.13
GA Iter: 0	Max score: 0.6452	Min score: 0.2548	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9867	Min score: 0.9278	#Pop: 128	#M+: 1384	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 6.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 56.11 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1790	fail_ct: 0	Time elapsed: 2.04
GA Iter: 0	Max score: 0.7063	Min score: 0.2209	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9887	Min score: 0.9390	#Pop: 128	#M+: 1386	#M-: 17
EvolutionarySearch		#s: 128	Time elapsed: 11.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 73.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.112 |        2071.18 |    128 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    256 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.446 ms	Trials: 12096	Used time : 13736 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.169 |        2729.89 |    256 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.436 ms	Trials: 12160	Used time : 13846 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.112 |        2069.39 |    128 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.432 ms	Trials: 12224	Used time : 13933 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   2944 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.409 ms	Trials: 12288	Used time : 14040 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3008 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   2944 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.409 ms	Trials: 12352	Used time : 14125 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3008 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.166 |        2796.27 |    192 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3008 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1806	fail_ct: 0	Time elapsed: 2.54
GA Iter: 0	Max score: 0.7914	Min score: 0.2409	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9907	Min score: 0.8902	#Pop: 128	#M+: 1385	#M-: 14
EvolutionarySearch		#s: 128	Time elapsed: 15.11
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 63.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1755	fail_ct: 0	Time elapsed: 1.49
GA Iter: 0	Max score: 0.7007	Min score: 0.3199	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9872	Min score: 0.9583	#Pop: 128	#M+: 1387	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 8.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 26.42 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 70.78 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1784	fail_ct: 0	Time elapsed: 1.23
GA Iter: 0	Max score: 0.7376	Min score: 0.2424	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9860	Min score: 0.9275	#Pop: 128	#M+: 1398	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 6.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................-------------------------------------------------
Estimated total latency: 9.409 ms	Trials: 12416	Used time : 14226 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3008 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1216 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3008 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12480	Used time : 14329 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3008 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3008 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12544	Used time : 14437 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 26.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.42 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1749	fail_ct: 0	Time elapsed: 2.55
GA Iter: 0	Max score: 0.8094	Min score: 0.3236	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9889	Min score: 0.8955	#Pop: 128	#M+: 1384	#M-: 17
EvolutionarySearch		#s: 128	Time elapsed: 11.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.41 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 50.04 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1774	fail_ct: 0	Time elapsed: 1.95
GA Iter: 0	Max score: 0.6859	Min score: 0.2250	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9873	Min score: 0.9398	#Pop: 128	#M+: 1402	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 12.92
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 61.66 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1749	fail_ct: 0	Time elapsed: 3.15
GA Iter: 0	Max score: 0.7063	Min score: 0.2797	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9864	Min score: 0.9661	#Pop: 128	#M+: 1377	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 15.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.04 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 68.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 1.94
GA Iter: 0	Max score: 0.8211	Min score: 0.2700	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9822	Min score: 0.9265	#Pop: 128	#M+: 1397	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 9.01
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 47.34 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1758	fail_ct: 0	Time elapsed: 2.67
GA Iter: 0	Max score: 0.6103	Min score: 0.2153	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9943	Min score: 0.9395	#Pop: 128	#M+: 1389	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 13.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 64.55 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3072 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3008 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2654.86 |    256 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12608	Used time : 14523 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3072 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3008 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12672	Used time : 14606 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3072 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.86 |   1152 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3072 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12736	Used time : 14702 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3072 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3072 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12800	Used time : 14814 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3136 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3072 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12864	Used time : 14887 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3136 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3136 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1796	fail_ct: 0	Time elapsed: 2.00
GA Iter: 0	Max score: 0.6684	Min score: 0.2664	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9796	Min score: 0.9277	#Pop: 128	#M+: 1395	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 7.96
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 62.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1797	fail_ct: 0	Time elapsed: 2.66
GA Iter: 0	Max score: 0.7329	Min score: 0.2199	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9908	Min score: 0.9389	#Pop: 128	#M+: 1379	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 14.87
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.24 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 59.17 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 1.85
GA Iter: 0	Max score: 0.8554	Min score: 0.3271	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9868	Min score: 0.9609	#Pop: 128	#M+: 1386	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 12.25
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 27.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 79.42 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 1.83
GA Iter: 0	Max score: 0.7263	Min score: 0.2480	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9829	Min score: 0.9258	#Pop: 128	#M+: 1391	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 10.24
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.97 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 61.98 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1783	fail_ct: 0	Time elapsed: 2.26
GA Iter: 0	Max score: 0.7102	Min score: 0.2300	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9901	Min score: 0.9380	#Pop: 128	#M+: 1395	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 9.63
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 26.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 80.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1752	fail_ct: 0	Time elapsed: 2.32
GA Iter: 0	Max score: 0.9224	Min score: 0.2864	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9882	Min score: 0.9652	#Pop: 128	#M+: 1384	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 10.42
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.59 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 43.11 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12928	Used time : 14988 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3200 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3136 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 12992	Used time : 15076 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3200 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1280 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3200 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13056	Used time : 15178 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3200 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1344 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3200 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13120	Used time : 15300 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3264 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1344 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3200 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13184	Used time : 15395 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3264 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1216 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1344 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3264 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13248	Used time : 15514 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3264 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1280 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1344 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3264 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1785	fail_ct: 0	Time elapsed: 2.76
GA Iter: 0	Max score: 0.6845	Min score: 0.2658	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9883	Min score: 0.9255	#Pop: 128	#M+: 1376	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 14.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 86.11 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1778	fail_ct: 0	Time elapsed: 2.69
GA Iter: 0	Max score: 0.7082	Min score: 0.2253	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9930	Min score: 0.9402	#Pop: 128	#M+: 1400	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 14.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.64 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 63.67 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1763	fail_ct: 0	Time elapsed: 1.60
GA Iter: 0	Max score: 0.7922	Min score: 0.3300	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9862	Min score: 0.9617	#Pop: 128	#M+: 1383	#M-: 12
EvolutionarySearch		#s: 128	Time elapsed: 9.41
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 77.76 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 1.74
GA Iter: 0	Max score: 0.6674	Min score: 0.2467	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9830	Min score: 0.9248	#Pop: 128	#M+: 1384	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 7.17
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 27.99 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 66.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 2.28
GA Iter: 0	Max score: 0.5856	Min score: 0.2169	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9943	Min score: 0.9361	#Pop: 128	#M+: 1393	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 12.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 80.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1768	fail_ct: 0	Time elapsed: 2.55
GA Iter: 0	Max score: 0.8305	Min score: 0.2965	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9913	Min score: 0.9697	#Pop: 128	#M+: 1394	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 13.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.55 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13312	Used time : 15583 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3328 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1280 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1344 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3264 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13376	Used time : 15709 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3328 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1280 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1344 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3328 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13440	Used time : 15811 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3328 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1280 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3328 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13504	Used time : 15921 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3392 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1280 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3328 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13568	Used time : 16025 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3392 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1280 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3392 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13632	Used time : 16137 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3392 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3392 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1798	fail_ct: 0	Time elapsed: 2.75
GA Iter: 0	Max score: 0.5971	Min score: 0.2691	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9767	Min score: 0.9228	#Pop: 128	#M+: 1389	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 15.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.44 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 67.16 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1777	fail_ct: 0	Time elapsed: 1.68
GA Iter: 0	Max score: 0.6331	Min score: 0.2260	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9887	Min score: 0.9382	#Pop: 128	#M+: 1385	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 9.45
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 57.54 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 1.82
GA Iter: 0	Max score: 0.7914	Min score: 0.2538	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9845	Min score: 0.9240	#Pop: 128	#M+: 1382	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 10.35
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 72.23 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1610	fail_ct: 237	Time elapsed: 1.04
GA Iter: 0	Max score: 0.9796	Min score: 0.9519	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9943	Min score: 0.9796	#Pop: 128	#M+: 1384	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.43
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 68.13 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 2.37
GA Iter: 0	Max score: 0.6322	Min score: 0.2246	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9885	Min score: 0.9333	#Pop: 128	#M+: 1396	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 14.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.55 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 106.93 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1779	fail_ct: 0	Time elapsed: 1.43
GA Iter: 0	Max score: 0.6942	Min score: 0.3206	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9842	Min score: 0.9596	#Pop: 128	#M+: 1385	#M-: 11
EvolutionarySearch		#s: 128	Time elapsed: 8.37
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.19 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 56.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13696	Used time : 16220 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3456 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3392 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13760	Used time : 16330 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3456 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3456 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13824	Used time : 16414 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3520 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3456 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    384 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13888	Used time : 16517 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3520 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3456 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 13952	Used time : 16613 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3520 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1408 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3520 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 14016	Used time : 16759 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3520 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3520 |
|   16 |        0.046 |         965.44 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1785	fail_ct: 0	Time elapsed: 2.32
GA Iter: 0	Max score: 0.6188	Min score: 0.2380	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9860	Min score: 0.9230	#Pop: 128	#M+: 1389	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 10.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1763	fail_ct: 0	Time elapsed: 2.09
GA Iter: 0	Max score: 0.9289	Min score: 0.2302	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9901	Min score: 0.9386	#Pop: 128	#M+: 1385	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 12.01
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1778	fail_ct: 0	Time elapsed: 2.34
GA Iter: 0	Max score: 0.7121	Min score: 0.4334	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8661	Min score: 0.6819	#Pop: 128	#M+: 1398	#M-: 37
EvolutionarySearch		#s: 128	Time elapsed: 10.44
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 14080	Used time : 16839 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3584 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3520 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 14144	Used time : 16930 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3584 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3584 |
|   16 |        0.046 |         965.44 |     64 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.401 ms	Trials: 14208	Used time : 17033 s	Next ID: 16	
.T***************************************************************Time elapsed for measurement: 27.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 78.87 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1801	fail_ct: 0	Time elapsed: 2.21
GA Iter: 0	Max score: 0.6973	Min score: 0.2781	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9680	Min score: 0.9101	#Pop: 128	#M+: 1378	#M-: 12
EvolutionarySearch		#s: 128	Time elapsed: 11.42
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.55 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 48.83 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1755	fail_ct: 0	Time elapsed: 2.09
GA Iter: 0	Max score: 0.8112	Min score: 0.2872	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9933	Min score: 0.9661	#Pop: 128	#M+: 1400	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 13.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.18 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 66.13 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 0	Time elapsed: 2.60
GA Iter: 0	Max score: 0.6798	Min score: 0.2610	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9836	Min score: 0.9208	#Pop: 128	#M+: 1388	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 13.51
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.44 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 57.57 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1752	fail_ct: 0	Time elapsed: 2.64
GA Iter: 0	Max score: 0.8305	Min score: 0.2236	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9921	Min score: 0.9323	#Pop: 128	#M+: 1383	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 12.82
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.42 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 52.49 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1747	fail_ct: 0	Time elapsed: 2.43
GA Iter: 0	Max score: 0.6764	Min score: 0.2956	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9827	Min score: 0.9575	#Pop: 128	#M+: 1395	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 13.44
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3584 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    448 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3584 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.389 ms	Trials: 14272	Used time : 17153 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3584 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.080 |        2891.96 |   1344 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3584 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.389 ms	Trials: 14336	Used time : 17239 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3584 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1408 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3584 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14400	Used time : 17341 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3648 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1408 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3584 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14464	Used time : 17433 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3648 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1408 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1472 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3648 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14528	Used time : 17518 s	Next ID: 13	
.T***************************************************************Time elapsed for measurement: 31.63 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 76.76 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1771	fail_ct: 0	Time elapsed: 1.77
GA Iter: 0	Max score: 0.6764	Min score: 0.2793	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9864	Min score: 0.9224	#Pop: 128	#M+: 1370	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 10.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3648 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1408 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3648 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14592	Used time : 17643 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 30.27 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 84.04 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1757	fail_ct: 0	Time elapsed: 1.76
GA Iter: 0	Max score: 0.8411	Min score: 0.2083	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9891	Min score: 0.9307	#Pop: 128	#M+: 1393	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 7.99
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 26.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 58.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1747	fail_ct: 0	Time elapsed: 2.42
GA Iter: 0	Max score: 0.5007	Min score: 0.1827	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0019	Min score: 0.7718	#Pop: 128	#M+: 1391	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 10.75
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 62.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1741	fail_ct: 0	Time elapsed: 2.90
GA Iter: 0	Max score: 0.7172	Min score: 0.2896	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9814	Min score: 0.9604	#Pop: 128	#M+: 1387	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 14.93
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.83 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1753	fail_ct: 0	Time elapsed: 1.34
GA Iter: 0	Max score: 0.6934	Min score: 0.2649	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9782	Min score: 0.9223	#Pop: 128	#M+: 1384	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 6.41
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.71 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 2.83
GA Iter: 0	Max score: 0.6450	Min score: 0.2102	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9852	Min score: 0.9328	#Pop: 128	#M+: 1398	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 14.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3712 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1408 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3648 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14656	Used time : 17769 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3712 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1408 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3712 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    320 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14720	Used time : 17865 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3712 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1408 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3712 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14784	Used time : 17961 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3712 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3712 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14848	Used time : 18068 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3776 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3712 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14912	Used time : 18109 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 32.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 89.56 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 0	Time elapsed: 2.23
GA Iter: 0	Max score: 0.7699	Min score: 0.2470	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9825	Min score: 0.9218	#Pop: 128	#M+: 1389	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 12.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.43 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.40 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1789	fail_ct: 0	Time elapsed: 2.49
GA Iter: 0	Max score: 0.6423	Min score: 0.2154	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9853	Min score: 0.9307	#Pop: 128	#M+: 1385	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 12.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.96 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1757	fail_ct: 0	Time elapsed: 2.50
GA Iter: 0	Max score: 0.8078	Min score: 0.3179	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9849	Min score: 0.9582	#Pop: 128	#M+: 1404	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 13.01
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 62.40 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1768	fail_ct: 0	Time elapsed: 2.62
GA Iter: 0	Max score: 0.7322	Min score: 0.2560	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9826	Min score: 0.9176	#Pop: 128	#M+: 1392	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 9.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.97 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 71.53 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1751	fail_ct: 0	Time elapsed: 1.83
GA Iter: 0	Max score: 0.7027	Min score: 0.2097	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9845	Min score: 0.9307	#Pop: 128	#M+: 1393	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 7.77
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 57.05 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3776 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3776 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 14976	Used time : 18250 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3840 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3776 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 15040	Used time : 18350 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3840 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1536 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3840 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 15104	Used time : 18459 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3840 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1600 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3840 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 15168	Used time : 18561 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3904 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1600 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3840 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 15232	Used time : 18662 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3904 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2927.91 |   1472 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1600 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3904 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1742	fail_ct: 0	Time elapsed: 2.65
GA Iter: 0	Max score: 0.8155	Min score: 0.2849	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9824	Min score: 0.9567	#Pop: 128	#M+: 1382	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 13.76
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.19 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 62.06 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1763	fail_ct: 0	Time elapsed: 2.26
GA Iter: 0	Max score: 0.8061	Min score: 0.2521	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9813	Min score: 0.9200	#Pop: 128	#M+: 1401	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 12.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.38 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 77.94 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1790	fail_ct: 0	Time elapsed: 2.05
GA Iter: 0	Max score: 0.7537	Min score: 0.2532	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9822	Min score: 0.8670	#Pop: 128	#M+: 1394	#M-: 11
EvolutionarySearch		#s: 128	Time elapsed: 8.96
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.92 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 67.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1768	fail_ct: 0	Time elapsed: 2.36
GA Iter: 0	Max score: 0.7838	Min score: 0.2176	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9872	Min score: 0.9309	#Pop: 128	#M+: 1381	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 12.94
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.26 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 83.13 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 2.41
GA Iter: 0	Max score: 0.8087	Min score: 0.3179	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9862	Min score: 0.9556	#Pop: 128	#M+: 1388	#M-: 12
EvolutionarySearch		#s: 128	Time elapsed: 11.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.47 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 68.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 1.95
GA Iter: 0	Max score: 0.6584	Min score: 0.2503	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9821	Min score: 0.9182	#Pop: 128	#M+: 1381	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 10.55
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 81.78 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.377 ms	Trials: 15296	Used time : 18745 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3904 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1536 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1600 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3904 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.374 ms	Trials: 15360	Used time : 18841 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3968 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.158 |        2930.76 |    256 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1536 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1600 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3904 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.374 ms	Trials: 15424	Used time : 18953 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3968 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1536 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1600 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3904 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15488	Used time : 19047 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3968 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1536 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1600 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3968 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15552	Used time : 19169 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   3968 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1536 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3968 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15616	Used time : 19274 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4032 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1536 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   3968 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1751	fail_ct: 0	Time elapsed: 1.61
GA Iter: 0	Max score: 0.8244	Min score: 0.2117	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9844	Min score: 0.9284	#Pop: 128	#M+: 1385	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 8.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1763	fail_ct: 0	Time elapsed: 2.51
GA Iter: 0	Max score: 0.8061	Min score: 0.2863	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9847	Min score: 0.9572	#Pop: 128	#M+: 1386	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 13.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15680	Used time : 19388 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4032 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1536 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4032 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15744	Used time : 19486 s	Next ID: 9	
.T***************************************************************Time elapsed for measurement: 28.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 60.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1805	fail_ct: 0	Time elapsed: 2.02
GA Iter: 0	Max score: 0.6551	Min score: 0.2503	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9820	Min score: 0.9188	#Pop: 128	#M+: 1384	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 11.02
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.52 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 48.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1656	fail_ct: 230	Time elapsed: 0.91
GA Iter: 0	Max score: 0.9802	Min score: 0.9499	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9925	Min score: 0.9801	#Pop: 128	#M+: 1363	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 84.20 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1773	fail_ct: 0	Time elapsed: 1.63
GA Iter: 0	Max score: 0.7737	Min score: 0.2223	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9910	Min score: 0.9245	#Pop: 128	#M+: 1380	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 8.29
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 81.00 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1746	fail_ct: 0	Time elapsed: 2.96
GA Iter: 0	Max score: 0.6651	Min score: 0.2294	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9743	Min score: 0.9164	#Pop: 128	#M+: 1390	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 15.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4032 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4032 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15808	Used time : 19592 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4096 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4032 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    448 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15872	Used time : 19668 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4096 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4032 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 15936	Used time : 19778 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4096 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4096 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 16000	Used time : 19891 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 33.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 72.32 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1780	fail_ct: 0	Time elapsed: 1.72
GA Iter: 0	Max score: 0.8160	Min score: 0.2304	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9835	Min score: 0.9229	#Pop: 128	#M+: 1390	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 10.73
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 60.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1796	fail_ct: 0	Time elapsed: 2.81
GA Iter: 0	Max score: 0.8078	Min score: 0.3159	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9876	Min score: 0.9569	#Pop: 128	#M+: 1389	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 14.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 28.52 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 82.86 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 2.53
GA Iter: 0	Max score: 0.5526	Min score: 0.2643	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9650	Min score: 0.7164	#Pop: 128	#M+: 1383	#M-: 58
EvolutionarySearch		#s: 128	Time elapsed: 11.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 84.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1766	fail_ct: 0	Time elapsed: 1.88
GA Iter: 0	Max score: 0.5467	Min score: 0.2245	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0088	Min score: 0.7004	#Pop: 128	#M+: 1385	#M-: 55
EvolutionarySearch		#s: 128	Time elapsed: 9.82
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4160 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4096 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 16064	Used time : 20015 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4160 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1664 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4160 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 16128	Used time : 20103 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.119 |        1938.54 |    192 |
|    2 |        0.088 |        2626.80 |   4160 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4160 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.371 ms	Trials: 16192	Used time : 20233 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.106 |        2178.87 |    256 |
|    2 |        0.088 |        2626.80 |   4160 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4160 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.358 ms	Trials: 16256	Used time : 20357 s	Next ID: 1	
.T***************************************************************Time elapsed for measurement: 32.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 71.59 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1796	fail_ct: 0	Time elapsed: 2.98
GA Iter: 0	Max score: 0.7454	Min score: 0.2698	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9672	Min score: 0.9179	#Pop: 128	#M+: 1396	#M-: 7
EvolutionarySearch		#s: 128	Time elapsed: 12.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 33.78 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.7346	Min score: 0.2490	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9819	Min score: 0.9165	#Pop: 128	#M+: 1390	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 6.15
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4160 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    512 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4160 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16320	Used time : 20472 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4160 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4160 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16384	Used time : 20542 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 30.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 74.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1786	fail_ct: 0	Time elapsed: 2.64
GA Iter: 0	Max score: 0.7860	Min score: 0.2291	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9877	Min score: 0.9232	#Pop: 128	#M+: 1387	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 12.41
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.85 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 89.65 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1761	fail_ct: 0	Time elapsed: 2.78
GA Iter: 0	Max score: 0.8236	Min score: 0.2468	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9820	Min score: 0.9136	#Pop: 128	#M+: 1395	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 13.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 60.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 2.82
GA Iter: 0	Max score: 0.8444	Min score: 0.2229	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9843	Min score: 0.9207	#Pop: 128	#M+: 1386	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 15.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.47 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 100.65 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1759	fail_ct: 0	Time elapsed: 2.15
GA Iter: 0	Max score: 0.6987	Min score: 0.3142	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9803	Min score: 0.9569	#Pop: 128	#M+: 1395	#M-: 13
EvolutionarySearch		#s: 128	Time elapsed: 11.56
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.93 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 1.83
GA Iter: 0	Max score: 0.6784	Min score: 0.2483	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9771	Min score: 0.9127	#Pop: 128	#M+: 1396	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 9.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.31 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 85.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4224 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4160 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16448	Used time : 20654 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4224 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4224 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16512	Used time : 20779 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4288 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4224 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16576	Used time : 20878 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4288 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1728 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4288 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16640	Used time : 21019 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4288 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4288 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16704	Used time : 21123 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4352 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1600 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4288 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1740	fail_ct: 0	Time elapsed: 1.98
GA Iter: 0	Max score: 0.7809	Min score: 0.2973	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9797	Min score: 0.9563	#Pop: 128	#M+: 1385	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 13.68
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 75.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 2.02
GA Iter: 0	Max score: 0.6660	Min score: 0.2270	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9884	Min score: 0.9234	#Pop: 128	#M+: 1385	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 11.40
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 26.30 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 68.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1714	fail_ct: 0	Time elapsed: 2.03
GA Iter: 0	Max score: 0.6834	Min score: 0.3095	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0014	Min score: 0.9058	#Pop: 128	#M+: 1382	#M-: 30
EvolutionarySearch		#s: 128	Time elapsed: 13.40
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.36 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 65.49 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1772	fail_ct: 0	Time elapsed: 2.33
GA Iter: 0	Max score: 0.6934	Min score: 0.2213	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9781	Min score: 0.9148	#Pop: 128	#M+: 1395	#M-: 24
EvolutionarySearch		#s: 128	Time elapsed: 12.46
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.17 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 66.09 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1751	fail_ct: 0	Time elapsed: 2.84
GA Iter: 0	Max score: 0.5328	Min score: 0.2214	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9862	Min score: 0.9194	#Pop: 128	#M+: 1394	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 14.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 90.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 1.93
GA Iter: 0	Max score: 0.7874	Min score: 0.2447	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9806	Min score: 0.9145	#Pop: 128	#M+: 1398	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 11.13
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 25.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 73.23 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16768	Used time : 21244 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4352 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4288 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16832	Used time : 21356 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4352 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    320 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4352 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16896	Used time : 21465 s	Next ID: 11	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4352 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4352 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 16960	Used time : 21572 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4416 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4352 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 17024	Used time : 21678 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4416 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4416 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 17088	Used time : 21806 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4480 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1792 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4416 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1746	fail_ct: 0	Time elapsed: 1.24
GA Iter: 0	Max score: 0.6576	Min score: 0.3040	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9851	Min score: 0.9580	#Pop: 128	#M+: 1397	#M-: 17
EvolutionarySearch		#s: 128	Time elapsed: 8.84
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 28.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 86.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1781	fail_ct: 0	Time elapsed: 1.63
GA Iter: 0	Max score: 0.7158	Min score: 0.2264	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9822	Min score: 0.9196	#Pop: 128	#M+: 1390	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 8.25
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.42 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 73.45 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1773	fail_ct: 0	Time elapsed: 2.81
GA Iter: 0	Max score: 0.8800	Min score: 0.2925	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9784	Min score: 0.9602	#Pop: 128	#M+: 1390	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 15.28
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 86.49 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1770	fail_ct: 0	Time elapsed: 2.79
GA Iter: 0	Max score: 0.6860	Min score: 0.2483	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9733	Min score: 0.9154	#Pop: 128	#M+: 1388	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 15.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 27.50 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 71.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1768	fail_ct: 0	Time elapsed: 1.87
GA Iter: 0	Max score: 0.6741	Min score: 0.2066	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9796	Min score: 0.9137	#Pop: 128	#M+: 1395	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 10.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.46 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 70.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1782	fail_ct: 0	Time elapsed: 1.65
GA Iter: 0	Max score: 0.6284	Min score: 0.2445	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9777	Min score: 0.9102	#Pop: 128	#M+: 1385	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 9.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 60.19 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 17152	Used time : 21918 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4480 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4416 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 17216	Used time : 22043 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4480 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2935.95 |   1664 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4480 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.354 ms	Trials: 17280	Used time : 22139 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4480 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4480 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.352 ms	Trials: 17344	Used time : 22261 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4544 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4480 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.352 ms	Trials: 17408	Used time : 22379 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4544 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4544 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.352 ms	Trials: 17472	Used time : 22475 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4608 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4544 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1777	fail_ct: 0	Time elapsed: 1.95
GA Iter: 0	Max score: 0.6029	Min score: 0.2096	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9817	Min score: 0.9115	#Pop: 128	#M+: 1385	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 10.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 71.23 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1725	fail_ct: 0	Time elapsed: 1.42
GA Iter: 0	Max score: 0.7036	Min score: 0.3391	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9939	Min score: 0.9183	#Pop: 128	#M+: 1387	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 6.11
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.85 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 63.40 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 0	Time elapsed: 1.80
GA Iter: 0	Max score: 0.6965	Min score: 0.3309	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9922	Min score: 0.9585	#Pop: 128	#M+: 1384	#M-: 14
EvolutionarySearch		#s: 128	Time elapsed: 9.60
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 55.53 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 2.36
GA Iter: 0	Max score: 0.6543	Min score: 0.2399	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9774	Min score: 0.9131	#Pop: 128	#M+: 1404	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 11.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 40.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1613	fail_ct: 232	Time elapsed: 0.66
GA Iter: 0	Max score: 0.9791	Min score: 0.9477	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9876	Min score: 0.9790	#Pop: 128	#M+: 1392	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 3.42
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.91 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 45.07 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1760	fail_ct: 0	Time elapsed: 1.57
GA Iter: 0	Max score: 0.6467	Min score: 0.2052	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9773	Min score: 0.9092	#Pop: 128	#M+: 1389	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 10.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 92.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.352 ms	Trials: 17536	Used time : 22562 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4608 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4608 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.087 |        2663.47 |    320 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.352 ms	Trials: 17600	Used time : 22669 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4608 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1856 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4608 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.348 ms	Trials: 17664	Used time : 22753 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4608 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4608 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.348 ms	Trials: 17728	Used time : 22837 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4672 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4608 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    512 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.348 ms	Trials: 17792	Used time : 22916 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4672 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4608 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.348 ms	Trials: 17856	Used time : 22986 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4672 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.106 |        2185.46 |    192 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4672 |
|   16 |        0.034 |        1310.12 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1780	fail_ct: 0	Time elapsed: 1.98
GA Iter: 0	Max score: 0.7163	Min score: 0.2457	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9767	Min score: 0.7969	#Pop: 128	#M+: 1398	#M-: 16
EvolutionarySearch		#s: 128	Time elapsed: 8.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 53.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1773	fail_ct: 0	Time elapsed: 2.29
GA Iter: 0	Max score: 0.6332	Min score: 0.2377	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9651	Min score: 0.8274	#Pop: 128	#M+: 1389	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 11.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.73 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 55.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1776	fail_ct: 0	Time elapsed: 1.43
GA Iter: 0	Max score: 0.7076	Min score: 0.2636	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9892	Min score: 0.9625	#Pop: 128	#M+: 1390	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 9.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 58.75 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1777	fail_ct: 0	Time elapsed: 1.93
GA Iter: 0	Max score: 0.7135	Min score: 0.2551	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9816	Min score: 0.9258	#Pop: 128	#M+: 1393	#M-: 5
EvolutionarySearch		#s: 128	Time elapsed: 10.02
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.348 ms	Trials: 17920	Used time : 23107 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4672 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.101 |        2287.18 |    256 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4672 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.343 ms	Trials: 17984	Used time : 23191 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4672 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.079 |        2942.52 |   1728 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4672 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.333 ms	Trials: 18048	Used time : 23281 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4672 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    576 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4672 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.330 ms	Trials: 18112	Used time : 23364 s	Next ID: 12	
.T***************************************************************Time elapsed for measurement: 29.73 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 76.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1748	fail_ct: 0	Time elapsed: 2.27
GA Iter: 0	Max score: 0.9085	Min score: 0.2492	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9752	Min score: 0.9075	#Pop: 128	#M+: 1386	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 10.75
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 59.07 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2021	fail_ct: 0	Time elapsed: 1.14
GA Iter: 0	Max score: 0.8060	Min score: 0.4423	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9436	Min score: 0.6710	#Pop: 128	#M+: 1377	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...........................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4672 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4672 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.330 ms	Trials: 18176	Used time : 23483 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4736 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4672 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.035 |         741.90 |     64 |
-------------------------------------------------
Estimated total latency: 9.330 ms	Trials: 18240	Used time : 23574 s	Next ID: 22	
.T..T.T.T************************************************************Time elapsed for measurement: 25.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 59.63 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1778	fail_ct: 0	Time elapsed: 1.88
GA Iter: 0	Max score: 0.6937	Min score: 0.2135	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9786	Min score: 0.9106	#Pop: 128	#M+: 1373	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 9.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.51 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 38.77 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1770	fail_ct: 0	Time elapsed: 1.69
GA Iter: 0	Max score: 0.7356	Min score: 0.2416	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9742	Min score: 0.9109	#Pop: 128	#M+: 1392	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 10.40
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 62.65 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 1.44
GA Iter: 0	Max score: 0.7371	Min score: 0.3118	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9822	Min score: 0.9546	#Pop: 128	#M+: 1391	#M-: 14
EvolutionarySearch		#s: 128	Time elapsed: 6.57
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 70.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1798	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.5602	Min score: 0.2165	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9814	Min score: 0.9072	#Pop: 128	#M+: 1388	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 8.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4736 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4672 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.318 ms	Trials: 18304	Used time : 23665 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4736 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4736 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.318 ms	Trials: 18368	Used time : 23736 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4800 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1920 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4736 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.318 ms	Trials: 18432	Used time : 23833 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4800 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4736 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.318 ms	Trials: 18496	Used time : 23923 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 27.24 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 61.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1803	fail_ct: 0	Time elapsed: 2.32
GA Iter: 0	Max score: 0.6991	Min score: 0.2757	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9927	Min score: 0.8698	#Pop: 128	#M+: 1381	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 12.52
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.76 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 36.78 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1802	fail_ct: 0	Time elapsed: 0.89
GA Iter: 0	Max score: 0.6330	Min score: 0.2243	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9338	Min score: 0.8172	#Pop: 128	#M+: 1390	#M-: 18
EvolutionarySearch		#s: 128	Time elapsed: 5.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 70.87 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1787	fail_ct: 0	Time elapsed: 2.10
GA Iter: 0	Max score: 0.6427	Min score: 0.3081	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0093	Min score: 0.8386	#Pop: 128	#M+: 1389	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 10.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.75 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 70.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1794	fail_ct: 0	Time elapsed: 1.98
GA Iter: 0	Max score: 0.7976	Min score: 0.2929	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9870	Min score: 0.8444	#Pop: 128	#M+: 1380	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 8.11
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 29.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 67.32 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1795	fail_ct: 0	Time elapsed: 1.77
GA Iter: 0	Max score: 0.7113	Min score: 0.2425	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9779	Min score: 0.9010	#Pop: 128	#M+: 1387	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 10.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 75.69 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4800 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.165 |        2801.94 |    320 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4800 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.318 ms	Trials: 18560	Used time : 24023 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4800 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.162 |        2857.80 |    320 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4800 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.312 ms	Trials: 18624	Used time : 24093 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4800 |
|    3 |        0.102 |        2264.11 |    192 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4800 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.306 ms	Trials: 18688	Used time : 24183 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4800 |
|    3 |        0.094 |        2453.85 |    256 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4800 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.298 ms	Trials: 18752	Used time : 24286 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4800 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4800 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 18816	Used time : 24393 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4864 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1792 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4800 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 2.17
GA Iter: 0	Max score: 0.8619	Min score: 0.2900	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9867	Min score: 0.9608	#Pop: 128	#M+: 1387	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 9.50
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 60.46 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1767	fail_ct: 0	Time elapsed: 1.58
GA Iter: 0	Max score: 0.5421	Min score: 0.2143	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9799	Min score: 0.9083	#Pop: 128	#M+: 1385	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 7.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.61 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 68.13 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1769	fail_ct: 0	Time elapsed: 1.52
GA Iter: 0	Max score: 0.7137	Min score: 0.2257	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9816	Min score: 0.9088	#Pop: 128	#M+: 1386	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 7.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1768	fail_ct: 0	Time elapsed: 0.86
GA Iter: 0	Max score: 0.5613	Min score: 0.2022	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9782	Min score: 0.9043	#Pop: 128	#M+: 1389	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 5.27
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.64 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 57.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1755	fail_ct: 0	Time elapsed: 2.60
GA Iter: 0	Max score: 0.8190	Min score: 0.3469	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9824	Min score: 0.9546	#Pop: 128	#M+: 1396	#M-: 15
EvolutionarySearch		#s: 128	Time elapsed: 10.24
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 66.17 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1798	fail_ct: 0	Time elapsed: 1.95
GA Iter: 0	Max score: 0.6587	Min score: 0.2338	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9714	Min score: 0.9034	#Pop: 128	#M+: 1389	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 10.43
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.96 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 56.28 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 18880	Used time : 24501 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4864 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1856 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4800 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 18944	Used time : 24585 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4864 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1856 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4864 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19008	Used time : 24674 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4928 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1856 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4864 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19072	Used time : 24712 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4928 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1856 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   1984 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4928 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19136	Used time : 24789 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4928 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1856 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4928 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19200	Used time : 24883 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4992 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1856 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4928 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1756	fail_ct: 0	Time elapsed: 2.38
GA Iter: 0	Max score: 0.5928	Min score: 0.2190	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9816	Min score: 0.9058	#Pop: 128	#M+: 1392	#M-: 21
EvolutionarySearch		#s: 128	Time elapsed: 12.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.04 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 69.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1720	fail_ct: 0	Time elapsed: 0.88
GA Iter: 0	Max score: 0.7458	Min score: 0.2938	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9897	Min score: 0.9582	#Pop: 128	#M+: 1396	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 6.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.73 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 1.41
GA Iter: 0	Max score: 0.8197	Min score: 0.2320	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9609	Min score: 0.9052	#Pop: 128	#M+: 1393	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 7.61
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.58 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 85.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1789	fail_ct: 0	Time elapsed: 1.98
GA Iter: 0	Max score: 0.6617	Min score: 0.2098	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9809	Min score: 0.9087	#Pop: 128	#M+: 1390	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 10.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.40 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 59.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1797	fail_ct: 0	Time elapsed: 2.35
GA Iter: 0	Max score: 0.7420	Min score: 0.2372	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9724	Min score: 0.8640	#Pop: 128	#M+: 1395	#M-: 10
EvolutionarySearch		#s: 128	Time elapsed: 11.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.22 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 47.01 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1766	fail_ct: 0	Time elapsed: 1.31
GA Iter: 0	Max score: 0.6712	Min score: 0.2482	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9811	Min score: 0.9067	#Pop: 128	#M+: 1390	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 9.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.29 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 66.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19264	Used time : 24972 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4992 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1856 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4992 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19328	Used time : 25073 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   4992 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4992 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19392	Used time : 25112 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5056 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   4992 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19456	Used time : 25226 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5056 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.155 |        2994.00 |    320 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5056 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.296 ms	Trials: 19520	Used time : 25315 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5056 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.154 |        3004.57 |    384 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5056 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.295 ms	Trials: 19584	Used time : 25393 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5120 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.154 |        3004.57 |    384 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2048 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5056 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1773	fail_ct: 0	Time elapsed: 1.12
GA Iter: 0	Max score: 0.8719	Min score: 0.3232	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9838	Min score: 0.9566	#Pop: 128	#M+: 1389	#M-: 14
EvolutionarySearch		#s: 128	Time elapsed: 9.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.43 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 64.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1791	fail_ct: 0	Time elapsed: 2.38
GA Iter: 0	Max score: 0.6817	Min score: 0.2049	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9804	Min score: 0.9016	#Pop: 128	#M+: 1382	#M-: 20
EvolutionarySearch		#s: 128	Time elapsed: 12.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 56.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1766	fail_ct: 0	Time elapsed: 1.48
GA Iter: 0	Max score: 0.7824	Min score: 0.2586	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9779	Min score: 0.9052	#Pop: 128	#M+: 1388	#M-: 22
EvolutionarySearch		#s: 128	Time elapsed: 6.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.44 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 62.77 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1760	fail_ct: 0	Time elapsed: 2.11
GA Iter: 0	Max score: 0.5848	Min score: 0.2162	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9810	Min score: 0.9003	#Pop: 128	#M+: 1401	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 9.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.295 ms	Trials: 19648	Used time : 25492 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5120 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.154 |        3004.57 |    384 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2112 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5056 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.295 ms	Trials: 19712	Used time : 25589 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5120 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.154 |        3004.57 |    384 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2112 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5120 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.295 ms	Trials: 19776	Used time : 25682 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5184 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.154 |        3004.57 |    384 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2112 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5120 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.295 ms	Trials: 19840	Used time : 25764 s	Next ID: 15	
.T***************************************************************Time elapsed for measurement: 27.59 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 71.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1751	fail_ct: 0	Time elapsed: 1.79
GA Iter: 0	Max score: 0.7886	Min score: 0.2818	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9841	Min score: 0.9571	#Pop: 128	#M+: 1389	#M-: 25
EvolutionarySearch		#s: 128	Time elapsed: 11.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 58.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1790	fail_ct: 0	Time elapsed: 2.25
GA Iter: 0	Max score: 0.7201	Min score: 0.2467	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9525	Min score: 0.8982	#Pop: 128	#M+: 1379	#M-: 23
EvolutionarySearch		#s: 128	Time elapsed: 11.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.12 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 33.03 s

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5184 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.154 |        3004.57 |    384 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1920 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2112 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5184 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.295 ms	Trials: 19904	Used time : 25875 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.009 |        1404.60 |     64 |
|    1 |        0.103 |        2249.67 |    320 |
|    2 |        0.088 |        2626.80 |   5184 |
|    3 |        0.092 |        2519.28 |    320 |
|    4 |        0.154 |        3004.57 |    384 |
|    5 |        0.008 |        1542.54 |     64 |
|    6 |        0.159 |        2907.81 |    384 |
|    7 |        0.093 |        2498.50 |    192 |
|    8 |        0.091 |        2529.24 |    320 |
|    9 |        0.078 |        2952.47 |   1984 |
|   10 |        0.156 |        2969.24 |    384 |
|   11 |        0.085 |        2718.29 |    384 |
|   12 |        0.310 |        2990.52 |    640 |
|   13 |        0.086 |        2685.15 |   2112 |
|   14 |        0.092 |        2519.65 |    192 |
|   15 |        0.088 |        2633.30 |   5184 |
|   16 |        0.034 |        1310.12 |    128 |
|   17 |        0.089 |        2613.09 |    192 |
|   18 |        0.283 |          90.65 |    576 |
|   19 |        0.008 |        1690.36 |     64 |
|   20 |        0.089 |        2599.08 |    384 |
|   21 |        0.085 |        2735.84 |    384 |
|   22 |        0.023 |        1128.18 |    128 |
-------------------------------------------------
Estimated total latency: 9.295 ms	Trials: 19968	Used time : 25961 s	Next ID: 2	

==== Task 0: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_8 (weight 1 key: ["09927c5eb63e6fce3434b27aeae8184f", [1, 2, 28, 28, 64], [16, 2, 1, 1, 64, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 28, 28, 64]
placeholder = PLACEHOLDER [16, 2, 1, 1, 64, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 64), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 64)]*placeholder[oc_chunk, floordiv(ic, 64), kh, kw, floormod(ic, 64), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=4)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=7)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=2)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=14)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=4)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=14)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=14)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [100352], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [32768], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [256], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [50176], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 28, 28, 64], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [16, 2, 1, 1, 64, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 16, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 14, 14, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 16) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [196]), storage_scope = global {
      for (oh.outer.inner.init: int32, 0, 2) {
        for (ow.outer.inner.init: int32, 0, 14) {
          let cse_var_1: int32 = ((oh.outer.inner.init*98) + ow.outer.inner.init)
           {
            conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [196], [])[cse_var_1] = broadcast(0f32, 16)
            conv2d_NCHWc_1[(cse_var_1 + 14)] = broadcast(0f32, 16)
            conv2d_NCHWc_1[(cse_var_1 + 28)] = broadcast(0f32, 16)
            conv2d_NCHWc_1[(cse_var_1 + 42)] = broadcast(0f32, 16)
            conv2d_NCHWc_1[(cse_var_1 + 56)] = broadcast(0f32, 16)
            conv2d_NCHWc_1[(cse_var_1 + 70)] = broadcast(0f32, 16)
            conv2d_NCHWc_1[(cse_var_1 + 84)] = broadcast(0f32, 16)
          }
        }
      }
      for (ic.outer: int32, 0, 2) {
        for (oh.outer.inner: int32, 0, 2) {
          for (ow.outer.inner: int32, 0, 14) {
            for (ic.inner: int32, 0, 64) {
              let cse_var_10: int32 = ((oh.outer.inner*98) + ow.outer.inner)
              let cse_var_9: int32 = (cse_var_10 + 84)
              let cse_var_8: int32 = (cse_var_10 + 70)
              let cse_var_7: int32 = (cse_var_10 + 56)
              let cse_var_6: int32 = (cse_var_10 + 42)
              let cse_var_5: int32 = (cse_var_10 + 28)
              let cse_var_4: int32 = (cse_var_10 + 14)
              let cse_var_3: int32 = (((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*2048) + (ic.outer*1024)) + (ic.inner*16))
              let cse_var_2: int32 = ((((ic.outer*50176) + (oh.outer.inner*25088)) + (ow.outer.inner*128)) + ic.inner)
               {
                conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
                conv2d_NCHWc_1[cse_var_4] = (conv2d_NCHWc_1[cse_var_4] + (broadcast(placeholder[(cse_var_2 + 3584)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
                conv2d_NCHWc_1[cse_var_5] = (conv2d_NCHWc_1[cse_var_5] + (broadcast(placeholder[(cse_var_2 + 7168)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
                conv2d_NCHWc_1[cse_var_6] = (conv2d_NCHWc_1[cse_var_6] + (broadcast(placeholder[(cse_var_2 + 10752)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
                conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(placeholder[(cse_var_2 + 14336)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
                conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(placeholder[(cse_var_2 + 17920)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
                conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(placeholder[(cse_var_2 + 21504)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
              }
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 14) {
        for (ax3.inner: int32, 0, 14) {
          T_add[ramp((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*3136) + (ax2.inner*224)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax2.inner*14) + ax3.inner)] + placeholder_2[ramp((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*16), 1, 16)])
        }
      }
    }
  }
}


==== Task 1: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_6 (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 32, 14, 14, 16], [32, 32, 3, 3, 16, 16], [1, 32, 1, 1, 16], [1, 32, 7, 7, 16], [1, 32, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 32, 14, 14, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [32, 32, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 32, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 32, 7, 7, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=7)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [100352], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [2359296], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [512], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [25088], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [25088], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_6: placeholder_12: Buffer(placeholder_10, float32, [1, 32, 1, 1, 16], []), placeholder_4: placeholder_13: Buffer(placeholder_8, float32, [1, 32, 14, 14, 16], []), placeholder_7: placeholder_14: Buffer(placeholder_11, float32, [1, 32, 7, 7, 16], []), placeholder_5: placeholder_15: Buffer(placeholder_9, float32, [32, 32, 3, 3, 16, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 32, 7, 7, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 16) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [98]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [3600]), storage_scope = global {
      for (oh.outer.inner.init: int32, 0, 7) {
        let cse_var_1: int32 = (oh.outer.inner.init*7)
         {
          conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [98], [])[cse_var_1] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 1)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 2)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 3)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 4)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 5)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 6)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 49)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 50)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 51)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 52)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 53)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 54)] = broadcast(0f32, 16)
          conv2d_NCHWc_1[(cse_var_1 + 55)] = broadcast(0f32, 16)
        }
      }
      for (ic.outer: int32, 0, 32) {
        for (i2: int32, 0, 15) {
          let cse_var_4: int32 = (i2*240)
          let cse_var_3: bool = (1 <= i2)
          let cse_var_2: int32 = ((ic.outer*3136) + (i2*224))
           {
            data_pad_1: Buffer(data_pad, float32, [3600], [])[ramp(cse_var_4, 1, 16)] = broadcast(0f32, 16)
            data_pad_1[ramp((cse_var_4 + 16), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 224), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 32), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 208), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 48), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 192), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 64), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 176), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 80), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 160), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 96), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 144), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 112), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 128), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 128), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 112), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 144), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 96), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 160), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 80), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 176), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 64), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 192), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 48), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 208), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 32), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_4 + 224), 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_2 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          }
        }
        for (oh.outer.inner: int32, 0, 7) {
          for (ic.inner: int32, 0, 16) {
            for (kh.inner: int32, 0, 3) {
              let cse_var_39: int32 = (oh.outer.inner*7)
              let cse_var_38: int32 = (cse_var_39 + 1)
              let cse_var_37: int32 = (cse_var_39 + 2)
              let cse_var_36: int32 = (cse_var_39 + 3)
              let cse_var_35: int32 = (cse_var_39 + 49)
              let cse_var_34: int32 = (cse_var_39 + 5)
              let cse_var_33: int32 = (cse_var_39 + 50)
              let cse_var_32: int32 = (cse_var_39 + 51)
              let cse_var_31: int32 = (cse_var_39 + 52)
              let cse_var_30: int32 = (cse_var_39 + 53)
              let cse_var_29: int32 = (cse_var_39 + 54)
              let cse_var_28: int32 = (cse_var_39 + 55)
              let cse_var_27: int32 = (cse_var_39 + 6)
              let cse_var_26: int32 = (cse_var_39 + 4)
              let cse_var_25: int32 = (((oh.outer.inner*480) + (kh.inner*240)) + ic.inner)
              let cse_var_24: int32 = (cse_var_25 + 192)
              let cse_var_23: int32 = (cse_var_25 + 112)
              let cse_var_22: int32 = (cse_var_25 + 128)
              let cse_var_21: int32 = (cse_var_25 + 144)
              let cse_var_20: int32 = (cse_var_25 + 16)
              let cse_var_19: int32 = (cse_var_25 + 160)
              let cse_var_18: int32 = (cse_var_25 + 176)
              let cse_var_17: int32 = (cse_var_25 + 208)
              let cse_var_16: int32 = (cse_var_25 + 224)
              let cse_var_15: int32 = (cse_var_25 + 32)
              let cse_var_14: int32 = (cse_var_25 + 48)
              let cse_var_13: int32 = (cse_var_25 + 80)
              let cse_var_12: int32 = (cse_var_25 + 96)
              let cse_var_11: int32 = (cse_var_25 + 64)
              let cse_var_10: int32 = ((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused*147456) + (ic.outer*2304)) + (kh.inner*768)) + (ic.inner*16))
              let cse_var_9: int32 = (cse_var_10 + 256)
              let cse_var_8: int32 = (cse_var_10 + 74240)
              let cse_var_7: int32 = (cse_var_10 + 73984)
              let cse_var_6: int32 = (cse_var_10 + 73728)
              let cse_var_5: int32 = (cse_var_10 + 512)
               {
                conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_26] = (conv2d_NCHWc_1[cse_var_26] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_27] = (conv2d_NCHWc_1[cse_var_27] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[cse_var_26] = (conv2d_NCHWc_1[cse_var_26] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[cse_var_27] = (conv2d_NCHWc_1[cse_var_27] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                conv2d_NCHWc_1[cse_var_26] = (conv2d_NCHWc_1[cse_var_26] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                conv2d_NCHWc_1[cse_var_27] = (conv2d_NCHWc_1[cse_var_27] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 7) {
          for (ax3.inner: int32, 0, 7) {
            let cse_var_40: int32 = ((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused*1568) + (ax1.inner*784)) + (ax2.inner*112)) + (ax3.inner*16))
            T_add[ramp(cse_var_40, 1, 16)] = ((conv2d_NCHWc_1[(((ax1.inner*49) + (ax2.inner*7)) + ax3.inner)] + placeholder_2[ramp(((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused*32) + (ax1.inner*16)), 1, 16)]) + placeholder_3[ramp(cse_var_40, 1, 16)])
          }
        }
      }
    }
  }
}


==== Task 2: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_5 (weight 29 key: ["7fdb288a7abcc5486b29e05ffd83ed49", [1, 2, 14, 14, 128], [16, 2, 3, 3, 128, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 14, 14, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 2, 3, 3, 128, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 14, 14, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=2)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=7)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=7)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=2)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=1)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=7)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[T_add], T_add_ax4_o_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [50176], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [589824], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [256], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [50176], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [50176], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 14, 14, 16], []), placeholder_5: placeholder_12: Buffer(placeholder_9, float32, [16, 2, 3, 3, 128, 16], []), placeholder_4: placeholder_13: Buffer(placeholder_8, float32, [1, 2, 14, 14, 128], []), placeholder_7: placeholder_14: Buffer(placeholder_11, float32, [1, 16, 14, 14, 16], []), placeholder_6: placeholder_15: Buffer(placeholder_10, float32, [1, 16, 1, 1, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused: int32, 0, 16) "parallel" {
    allocate(data_pad: Pointer(global float32), float32, [20736]), storage_scope = global;
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      for (i1: int32, 0, 2) {
        for (i2: int32, 0, 9) {
          for (i3: int32, 0, 9) {
            for (i4: int32, 0, 128) {
              let cse_var_5: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 2)
              let cse_var_4: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 4), 2)
              let cse_var_3: int32 = (i3*128)
              let cse_var_2: int32 = ((cse_var_5*7) + i3)
              let cse_var_1: int32 = ((cse_var_4*7) + i2)
              data_pad_1: Buffer(data_pad, float32, [20736], [])[((((i1*10368) + (i2*1152)) + cse_var_3) + i4)] = @tir.if_then_else(((((1 <= cse_var_1) && (cse_var_1 < 15)) && (1 <= cse_var_2)) && (cse_var_2 < 15)), placeholder[(((((((i1*25088) + (cse_var_4*12544)) + (i2*1792)) + (cse_var_5*896)) + cse_var_3) + i4) - 1920)], 0f32, dtype=float32)
            }
          }
        }
      }
      for (ax1.outer.inner: int32, 0, 2) {
        for (ax3.outer.inner: int32, 0, 7) {
          conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
          conv2d_NCHWc_1[1] = broadcast(0f32, 16)
          conv2d_NCHWc_1[2] = broadcast(0f32, 16)
          conv2d_NCHWc_1[3] = broadcast(0f32, 16)
          conv2d_NCHWc_1[4] = broadcast(0f32, 16)
          conv2d_NCHWc_1[5] = broadcast(0f32, 16)
          conv2d_NCHWc_1[6] = broadcast(0f32, 16)
          conv2d_NCHWc_1[7] = broadcast(0f32, 16)
          conv2d_NCHWc_1[8] = broadcast(0f32, 16)
          conv2d_NCHWc_1[9] = broadcast(0f32, 16)
          conv2d_NCHWc_1[10] = broadcast(0f32, 16)
          conv2d_NCHWc_1[11] = broadcast(0f32, 16)
          conv2d_NCHWc_1[12] = broadcast(0f32, 16)
          conv2d_NCHWc_1[13] = broadcast(0f32, 16)
          for (ic.outer: int32, 0, 4) {
            for (kw.outer: int32, 0, 3) {
              for (ic.inner: int32, 0, 64) {
                let cse_var_22: int32 = floordiv(ic.outer, 2)
                let cse_var_21: int32 = floormod(ic.outer, 2)
                let cse_var_20: int32 = (((((cse_var_22*10368) + (ax3.outer.inner*128)) + (kw.outer*128)) + (cse_var_21*64)) + ic.inner)
                let cse_var_19: int32 = (cse_var_20 + 9216)
                let cse_var_18: int32 = (cse_var_20 + 8064)
                let cse_var_17: int32 = (cse_var_20 + 6912)
                let cse_var_16: int32 = (cse_var_20 + 5760)
                let cse_var_15: int32 = (cse_var_20 + 4608)
                let cse_var_14: int32 = (cse_var_20 + 3456)
                let cse_var_13: int32 = (cse_var_20 + 2304)
                let cse_var_12: int32 = (cse_var_20 + 1152)
                let cse_var_11: int32 = ((((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 4)*147456) + (ax1.outer.inner*73728)) + (cse_var_22*18432)) + (kw.outer*2048)) + (cse_var_21*1024)) + (ic.inner*16))
                let cse_var_10: int32 = (cse_var_11 + 6144)
                let cse_var_9: int32 = (cse_var_11 + 49152)
                let cse_var_8: int32 = (cse_var_11 + 43008)
                let cse_var_7: int32 = (cse_var_11 + 36864)
                let cse_var_6: int32 = (cse_var_11 + 12288)
                 {
                  conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                }
              }
            }
          }
          for (ax1.inner: int32, 0, 2) {
            for (ax2.inner: int32, 0, 7) {
              let cse_var_24: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 4)
              let cse_var_23: int32 = (((((((cse_var_24*12544) + (ax1.outer.inner*6272)) + (ax1.inner*3136)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 4), 2)*1568)) + (ax2.inner*224)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 2)*112)) + (ax3.outer.inner*16))
              T_add[ramp(cse_var_23, 1, 16)] = ((conv2d_NCHWc_1[((ax1.inner*7) + ax2.inner)] + placeholder_2[ramp((((cse_var_24*64) + (ax1.outer.inner*32)) + (ax1.inner*16)), 1, 16)]) + placeholder_3[ramp(cse_var_23, 1, 16)])
            }
          }
        }
      }
    }
  }
}


==== Task 3: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 4, 112, 112, 16], [4, 4, 3, 3, 16, 16], [1, 4, 1, 1, 16], [1, 4, 56, 56, 16], [1, 4, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 112, 112, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 4, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 4, 56, 56, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=2)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=14)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=2)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=4)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=14)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=4)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [802816], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [36864], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [64], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [200704], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [200704], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_5: placeholder_12: Buffer(placeholder_9, float32, [4, 4, 3, 3, 16, 16], []), placeholder_6: placeholder_13: Buffer(placeholder_10, float32, [1, 4, 1, 1, 16], []), placeholder_7: placeholder_14: Buffer(placeholder_11, float32, [1, 4, 56, 56, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 56, 56, 16], []), placeholder_4: placeholder_15: Buffer(placeholder_8, float32, [1, 4, 112, 112, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 196) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [64]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [1296]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [64], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      conv2d_NCHWc_1[16] = broadcast(0f32, 16)
      conv2d_NCHWc_1[17] = broadcast(0f32, 16)
      conv2d_NCHWc_1[20] = broadcast(0f32, 16)
      conv2d_NCHWc_1[21] = broadcast(0f32, 16)
      conv2d_NCHWc_1[24] = broadcast(0f32, 16)
      conv2d_NCHWc_1[25] = broadcast(0f32, 16)
      conv2d_NCHWc_1[28] = broadcast(0f32, 16)
      conv2d_NCHWc_1[29] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[14] = broadcast(0f32, 16)
      conv2d_NCHWc_1[15] = broadcast(0f32, 16)
      conv2d_NCHWc_1[18] = broadcast(0f32, 16)
      conv2d_NCHWc_1[19] = broadcast(0f32, 16)
      conv2d_NCHWc_1[22] = broadcast(0f32, 16)
      conv2d_NCHWc_1[23] = broadcast(0f32, 16)
      conv2d_NCHWc_1[26] = broadcast(0f32, 16)
      conv2d_NCHWc_1[27] = broadcast(0f32, 16)
      conv2d_NCHWc_1[30] = broadcast(0f32, 16)
      conv2d_NCHWc_1[31] = broadcast(0f32, 16)
      conv2d_NCHWc_1[32] = broadcast(0f32, 16)
      conv2d_NCHWc_1[33] = broadcast(0f32, 16)
      conv2d_NCHWc_1[36] = broadcast(0f32, 16)
      conv2d_NCHWc_1[37] = broadcast(0f32, 16)
      conv2d_NCHWc_1[40] = broadcast(0f32, 16)
      conv2d_NCHWc_1[41] = broadcast(0f32, 16)
      conv2d_NCHWc_1[44] = broadcast(0f32, 16)
      conv2d_NCHWc_1[45] = broadcast(0f32, 16)
      conv2d_NCHWc_1[48] = broadcast(0f32, 16)
      conv2d_NCHWc_1[49] = broadcast(0f32, 16)
      conv2d_NCHWc_1[52] = broadcast(0f32, 16)
      conv2d_NCHWc_1[53] = broadcast(0f32, 16)
      conv2d_NCHWc_1[56] = broadcast(0f32, 16)
      conv2d_NCHWc_1[57] = broadcast(0f32, 16)
      conv2d_NCHWc_1[60] = broadcast(0f32, 16)
      conv2d_NCHWc_1[61] = broadcast(0f32, 16)
      conv2d_NCHWc_1[34] = broadcast(0f32, 16)
      conv2d_NCHWc_1[35] = broadcast(0f32, 16)
      conv2d_NCHWc_1[38] = broadcast(0f32, 16)
      conv2d_NCHWc_1[39] = broadcast(0f32, 16)
      conv2d_NCHWc_1[42] = broadcast(0f32, 16)
      conv2d_NCHWc_1[43] = broadcast(0f32, 16)
      conv2d_NCHWc_1[46] = broadcast(0f32, 16)
      conv2d_NCHWc_1[47] = broadcast(0f32, 16)
      conv2d_NCHWc_1[50] = broadcast(0f32, 16)
      conv2d_NCHWc_1[51] = broadcast(0f32, 16)
      conv2d_NCHWc_1[54] = broadcast(0f32, 16)
      conv2d_NCHWc_1[55] = broadcast(0f32, 16)
      conv2d_NCHWc_1[58] = broadcast(0f32, 16)
      conv2d_NCHWc_1[59] = broadcast(0f32, 16)
      conv2d_NCHWc_1[62] = broadcast(0f32, 16)
      conv2d_NCHWc_1[63] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 4) {
        for (i2: int32, 0, 9) {
          let cse_var_4: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
          let cse_var_3: int32 = (i2*144)
          let cse_var_2: bool = (1 <= ((cse_var_4*8) + i2))
          let cse_var_1: int32 = ((((ic.outer*200704) + (cse_var_4*14336)) + (i2*1792)) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*128))
           {
            data_pad_1: Buffer(data_pad, float32, [1296], [])[ramp(cse_var_3, 1, 16)] = @tir.if_then_else((cse_var_2 && (14 <= ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused)), placeholder[ramp((cse_var_1 - 1808), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 16), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1792), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 32), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 48), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1760), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 64), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1744), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 80), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1728), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 96), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1712), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 112), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1696), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
            data_pad_1[ramp((cse_var_3 + 128), 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 1680), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          }
        }
        for (oc_chunk.outer.inner: int32, 0, 2) {
          for (ow.outer.inner: int32, 0, 2) {
            for (ic.inner: int32, 0, 16) {
              for (kh.inner: int32, 0, 3) {
                let cse_var_46: int32 = ((oc_chunk.outer.inner*32) + (ow.outer.inner*2))
                let cse_var_45: int32 = (((kh.inner*144) + (ow.outer.inner*64)) + ic.inner)
                let cse_var_44: int32 = (cse_var_46 + 1)
                let cse_var_43: int32 = (cse_var_46 + 12)
                let cse_var_42: int32 = (cse_var_46 + 16)
                let cse_var_41: int32 = (cse_var_46 + 17)
                let cse_var_40: int32 = (cse_var_46 + 20)
                let cse_var_39: int32 = (cse_var_46 + 21)
                let cse_var_38: int32 = (cse_var_46 + 24)
                let cse_var_37: int32 = (cse_var_46 + 25)
                let cse_var_36: int32 = (cse_var_46 + 28)
                let cse_var_35: int32 = (cse_var_46 + 29)
                let cse_var_34: int32 = (cse_var_46 + 4)
                let cse_var_33: int32 = (cse_var_46 + 13)
                let cse_var_32: int32 = (cse_var_46 + 5)
                let cse_var_31: int32 = (cse_var_46 + 8)
                let cse_var_30: int32 = (cse_var_46 + 9)
                let cse_var_29: int32 = (cse_var_45 + 48)
                let cse_var_28: int32 = (cse_var_45 + 352)
                let cse_var_27: int32 = (cse_var_45 + 336)
                let cse_var_26: int32 = (cse_var_45 + 320)
                let cse_var_25: int32 = (cse_var_45 + 32)
                let cse_var_24: int32 = (cse_var_45 + 304)
                let cse_var_23: int32 = (cse_var_45 + 288)
                let cse_var_22: int32 = (cse_var_45 + 16)
                let cse_var_21: int32 = (cse_var_45 + 592)
                let cse_var_20: int32 = (cse_var_45 + 576)
                let cse_var_19: int32 = (cse_var_45 + 608)
                let cse_var_18: int32 = (cse_var_45 + 624)
                let cse_var_17: int32 = (cse_var_45 + 64)
                let cse_var_16: int32 = (cse_var_45 + 640)
                let cse_var_15: int32 = (cse_var_45 + 864)
                let cse_var_14: int32 = (cse_var_45 + 880)
                let cse_var_13: int32 = (cse_var_45 + 912)
                let cse_var_12: int32 = (cse_var_45 + 928)
                let cse_var_11: int32 = (cse_var_45 + 896)
                let cse_var_10: int32 = ((((oc_chunk.outer.inner*18432) + (ic.outer*2304)) + (kh.inner*768)) + (ic.inner*16))
                let cse_var_9: int32 = (cse_var_10 + 256)
                let cse_var_8: int32 = (cse_var_10 + 9728)
                let cse_var_7: int32 = (cse_var_10 + 9472)
                let cse_var_6: int32 = (cse_var_10 + 9216)
                let cse_var_5: int32 = (cse_var_10 + 512)
                 {
                  conv2d_NCHWc_1[cse_var_46] = (conv2d_NCHWc_1[cse_var_46] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_44] = (conv2d_NCHWc_1[cse_var_44] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_43] = (conv2d_NCHWc_1[cse_var_43] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_46] = (conv2d_NCHWc_1[cse_var_46] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_44] = (conv2d_NCHWc_1[cse_var_44] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_43] = (conv2d_NCHWc_1[cse_var_43] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_46] = (conv2d_NCHWc_1[cse_var_46] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_44] = (conv2d_NCHWc_1[cse_var_44] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_43] = (conv2d_NCHWc_1[cse_var_43] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                }
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 4) {
        for (ax2.inner: int32, 0, 4) {
          for (ax3.inner: int32, 0, 4) {
            let cse_var_48: int32 = (ax1.inner*16)
            let cse_var_47: int32 = (((((ax1.inner*50176) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*3584)) + (ax2.inner*896)) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*64)) + (ax3.inner*16))
            T_add[ramp(cse_var_47, 1, 16)] = ((conv2d_NCHWc_1[((cse_var_48 + (ax2.inner*4)) + ax3.inner)] + placeholder_2[ramp(cse_var_48, 1, 16)]) + placeholder_3[ramp(cse_var_47, 1, 16)])
          }
        }
      }
    }
  }
}


==== Task 4: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_4 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 4, 56, 56, 16], [8, 4, 3, 3, 16, 16], [1, 8, 1, 1, 16], [1, 8, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 56, 56, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [8, 4, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 8, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=2)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=2)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=2)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=4)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=7)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=4)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=2)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=2)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=8)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=7)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [200704], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [73728], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [128], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [401408], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 4, 56, 56, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [8, 4, 3, 3, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 8, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 8, 56, 56, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 196) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [128]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [960]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [128], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[16] = broadcast(0f32, 16)
      conv2d_NCHWc_1[17] = broadcast(0f32, 16)
      conv2d_NCHWc_1[24] = broadcast(0f32, 16)
      conv2d_NCHWc_1[25] = broadcast(0f32, 16)
      conv2d_NCHWc_1[32] = broadcast(0f32, 16)
      conv2d_NCHWc_1[33] = broadcast(0f32, 16)
      conv2d_NCHWc_1[40] = broadcast(0f32, 16)
      conv2d_NCHWc_1[41] = broadcast(0f32, 16)
      conv2d_NCHWc_1[48] = broadcast(0f32, 16)
      conv2d_NCHWc_1[49] = broadcast(0f32, 16)
      conv2d_NCHWc_1[56] = broadcast(0f32, 16)
      conv2d_NCHWc_1[57] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[18] = broadcast(0f32, 16)
      conv2d_NCHWc_1[19] = broadcast(0f32, 16)
      conv2d_NCHWc_1[26] = broadcast(0f32, 16)
      conv2d_NCHWc_1[27] = broadcast(0f32, 16)
      conv2d_NCHWc_1[34] = broadcast(0f32, 16)
      conv2d_NCHWc_1[35] = broadcast(0f32, 16)
      conv2d_NCHWc_1[42] = broadcast(0f32, 16)
      conv2d_NCHWc_1[43] = broadcast(0f32, 16)
      conv2d_NCHWc_1[50] = broadcast(0f32, 16)
      conv2d_NCHWc_1[51] = broadcast(0f32, 16)
      conv2d_NCHWc_1[58] = broadcast(0f32, 16)
      conv2d_NCHWc_1[59] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      conv2d_NCHWc_1[20] = broadcast(0f32, 16)
      conv2d_NCHWc_1[21] = broadcast(0f32, 16)
      conv2d_NCHWc_1[28] = broadcast(0f32, 16)
      conv2d_NCHWc_1[29] = broadcast(0f32, 16)
      conv2d_NCHWc_1[36] = broadcast(0f32, 16)
      conv2d_NCHWc_1[37] = broadcast(0f32, 16)
      conv2d_NCHWc_1[44] = broadcast(0f32, 16)
      conv2d_NCHWc_1[45] = broadcast(0f32, 16)
      conv2d_NCHWc_1[52] = broadcast(0f32, 16)
      conv2d_NCHWc_1[53] = broadcast(0f32, 16)
      conv2d_NCHWc_1[60] = broadcast(0f32, 16)
      conv2d_NCHWc_1[61] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[14] = broadcast(0f32, 16)
      conv2d_NCHWc_1[15] = broadcast(0f32, 16)
      conv2d_NCHWc_1[22] = broadcast(0f32, 16)
      conv2d_NCHWc_1[23] = broadcast(0f32, 16)
      conv2d_NCHWc_1[30] = broadcast(0f32, 16)
      conv2d_NCHWc_1[31] = broadcast(0f32, 16)
      conv2d_NCHWc_1[38] = broadcast(0f32, 16)
      conv2d_NCHWc_1[39] = broadcast(0f32, 16)
      conv2d_NCHWc_1[46] = broadcast(0f32, 16)
      conv2d_NCHWc_1[47] = broadcast(0f32, 16)
      conv2d_NCHWc_1[54] = broadcast(0f32, 16)
      conv2d_NCHWc_1[55] = broadcast(0f32, 16)
      conv2d_NCHWc_1[62] = broadcast(0f32, 16)
      conv2d_NCHWc_1[63] = broadcast(0f32, 16)
      conv2d_NCHWc_1[64] = broadcast(0f32, 16)
      conv2d_NCHWc_1[65] = broadcast(0f32, 16)
      conv2d_NCHWc_1[72] = broadcast(0f32, 16)
      conv2d_NCHWc_1[73] = broadcast(0f32, 16)
      conv2d_NCHWc_1[80] = broadcast(0f32, 16)
      conv2d_NCHWc_1[81] = broadcast(0f32, 16)
      conv2d_NCHWc_1[88] = broadcast(0f32, 16)
      conv2d_NCHWc_1[89] = broadcast(0f32, 16)
      conv2d_NCHWc_1[96] = broadcast(0f32, 16)
      conv2d_NCHWc_1[97] = broadcast(0f32, 16)
      conv2d_NCHWc_1[104] = broadcast(0f32, 16)
      conv2d_NCHWc_1[105] = broadcast(0f32, 16)
      conv2d_NCHWc_1[112] = broadcast(0f32, 16)
      conv2d_NCHWc_1[113] = broadcast(0f32, 16)
      conv2d_NCHWc_1[120] = broadcast(0f32, 16)
      conv2d_NCHWc_1[121] = broadcast(0f32, 16)
      conv2d_NCHWc_1[66] = broadcast(0f32, 16)
      conv2d_NCHWc_1[67] = broadcast(0f32, 16)
      conv2d_NCHWc_1[74] = broadcast(0f32, 16)
      conv2d_NCHWc_1[75] = broadcast(0f32, 16)
      conv2d_NCHWc_1[82] = broadcast(0f32, 16)
      conv2d_NCHWc_1[83] = broadcast(0f32, 16)
      conv2d_NCHWc_1[90] = broadcast(0f32, 16)
      conv2d_NCHWc_1[91] = broadcast(0f32, 16)
      conv2d_NCHWc_1[98] = broadcast(0f32, 16)
      conv2d_NCHWc_1[99] = broadcast(0f32, 16)
      conv2d_NCHWc_1[106] = broadcast(0f32, 16)
      conv2d_NCHWc_1[107] = broadcast(0f32, 16)
      conv2d_NCHWc_1[114] = broadcast(0f32, 16)
      conv2d_NCHWc_1[115] = broadcast(0f32, 16)
      conv2d_NCHWc_1[122] = broadcast(0f32, 16)
      conv2d_NCHWc_1[123] = broadcast(0f32, 16)
      conv2d_NCHWc_1[68] = broadcast(0f32, 16)
      conv2d_NCHWc_1[69] = broadcast(0f32, 16)
      conv2d_NCHWc_1[76] = broadcast(0f32, 16)
      conv2d_NCHWc_1[77] = broadcast(0f32, 16)
      conv2d_NCHWc_1[84] = broadcast(0f32, 16)
      conv2d_NCHWc_1[85] = broadcast(0f32, 16)
      conv2d_NCHWc_1[92] = broadcast(0f32, 16)
      conv2d_NCHWc_1[93] = broadcast(0f32, 16)
      conv2d_NCHWc_1[100] = broadcast(0f32, 16)
      conv2d_NCHWc_1[101] = broadcast(0f32, 16)
      conv2d_NCHWc_1[108] = broadcast(0f32, 16)
      conv2d_NCHWc_1[109] = broadcast(0f32, 16)
      conv2d_NCHWc_1[116] = broadcast(0f32, 16)
      conv2d_NCHWc_1[117] = broadcast(0f32, 16)
      conv2d_NCHWc_1[124] = broadcast(0f32, 16)
      conv2d_NCHWc_1[125] = broadcast(0f32, 16)
      conv2d_NCHWc_1[70] = broadcast(0f32, 16)
      conv2d_NCHWc_1[71] = broadcast(0f32, 16)
      conv2d_NCHWc_1[78] = broadcast(0f32, 16)
      conv2d_NCHWc_1[79] = broadcast(0f32, 16)
      conv2d_NCHWc_1[86] = broadcast(0f32, 16)
      conv2d_NCHWc_1[87] = broadcast(0f32, 16)
      conv2d_NCHWc_1[94] = broadcast(0f32, 16)
      conv2d_NCHWc_1[95] = broadcast(0f32, 16)
      conv2d_NCHWc_1[102] = broadcast(0f32, 16)
      conv2d_NCHWc_1[103] = broadcast(0f32, 16)
      conv2d_NCHWc_1[110] = broadcast(0f32, 16)
      conv2d_NCHWc_1[111] = broadcast(0f32, 16)
      conv2d_NCHWc_1[118] = broadcast(0f32, 16)
      conv2d_NCHWc_1[119] = broadcast(0f32, 16)
      conv2d_NCHWc_1[126] = broadcast(0f32, 16)
      conv2d_NCHWc_1[127] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 4) {
        let cse_var_9: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28)
        let cse_var_8: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14), 7)
        let cse_var_7: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)
        let cse_var_6: int32 = ((cse_var_9*8) + (cse_var_8*4))
        let cse_var_5: bool = (cse_var_7 < 6)
        let cse_var_4: bool = (1 <= cse_var_7)
        let cse_var_3: bool = (1 <= cse_var_6)
        let cse_var_2: bool = (cse_var_6 < 52)
        let cse_var_1: int32 = ((((ic.outer*50176) + (cse_var_9*7168)) + (cse_var_8*3584)) + (cse_var_7*128))
         {
          data_pad_1: Buffer(data_pad, float32, [960], [])[ramp(0, 1, 16)] = @tir.if_then_else((cse_var_3 && cse_var_4), placeholder[ramp((cse_var_1 - 912), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(16, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 896), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(32, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(48, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 864), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(64, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 848), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(80, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 832), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(96, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 816), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(112, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 800), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(128, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 784), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(144, 1, 16)] = @tir.if_then_else((cse_var_3 && cse_var_5), placeholder[ramp((cse_var_1 - 768), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(160, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(176, 1, 16)] = placeholder[ramp(cse_var_1, 1, 16)]
          data_pad_1[ramp(192, 1, 16)] = placeholder[ramp((cse_var_1 + 16), 1, 16)]
          data_pad_1[ramp(208, 1, 16)] = placeholder[ramp((cse_var_1 + 32), 1, 16)]
          data_pad_1[ramp(224, 1, 16)] = placeholder[ramp((cse_var_1 + 48), 1, 16)]
          data_pad_1[ramp(240, 1, 16)] = placeholder[ramp((cse_var_1 + 64), 1, 16)]
          data_pad_1[ramp(256, 1, 16)] = placeholder[ramp((cse_var_1 + 80), 1, 16)]
          data_pad_1[ramp(272, 1, 16)] = placeholder[ramp((cse_var_1 + 96), 1, 16)]
          data_pad_1[ramp(288, 1, 16)] = placeholder[ramp((cse_var_1 + 112), 1, 16)]
          data_pad_1[ramp(304, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 128), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(320, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(336, 1, 16)] = placeholder[ramp((cse_var_1 + 896), 1, 16)]
          data_pad_1[ramp(352, 1, 16)] = placeholder[ramp((cse_var_1 + 912), 1, 16)]
          data_pad_1[ramp(368, 1, 16)] = placeholder[ramp((cse_var_1 + 928), 1, 16)]
          data_pad_1[ramp(384, 1, 16)] = placeholder[ramp((cse_var_1 + 944), 1, 16)]
          data_pad_1[ramp(400, 1, 16)] = placeholder[ramp((cse_var_1 + 960), 1, 16)]
          data_pad_1[ramp(416, 1, 16)] = placeholder[ramp((cse_var_1 + 976), 1, 16)]
          data_pad_1[ramp(432, 1, 16)] = placeholder[ramp((cse_var_1 + 992), 1, 16)]
          data_pad_1[ramp(448, 1, 16)] = placeholder[ramp((cse_var_1 + 1008), 1, 16)]
          data_pad_1[ramp(464, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 1024), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(480, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(496, 1, 16)] = placeholder[ramp((cse_var_1 + 1792), 1, 16)]
          data_pad_1[ramp(512, 1, 16)] = placeholder[ramp((cse_var_1 + 1808), 1, 16)]
          data_pad_1[ramp(528, 1, 16)] = placeholder[ramp((cse_var_1 + 1824), 1, 16)]
          data_pad_1[ramp(544, 1, 16)] = placeholder[ramp((cse_var_1 + 1840), 1, 16)]
          data_pad_1[ramp(560, 1, 16)] = placeholder[ramp((cse_var_1 + 1856), 1, 16)]
          data_pad_1[ramp(576, 1, 16)] = placeholder[ramp((cse_var_1 + 1872), 1, 16)]
          data_pad_1[ramp(592, 1, 16)] = placeholder[ramp((cse_var_1 + 1888), 1, 16)]
          data_pad_1[ramp(608, 1, 16)] = placeholder[ramp((cse_var_1 + 1904), 1, 16)]
          data_pad_1[ramp(624, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 1920), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(640, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 2672), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(656, 1, 16)] = placeholder[ramp((cse_var_1 + 2688), 1, 16)]
          data_pad_1[ramp(672, 1, 16)] = placeholder[ramp((cse_var_1 + 2704), 1, 16)]
          data_pad_1[ramp(688, 1, 16)] = placeholder[ramp((cse_var_1 + 2720), 1, 16)]
          data_pad_1[ramp(704, 1, 16)] = placeholder[ramp((cse_var_1 + 2736), 1, 16)]
          data_pad_1[ramp(720, 1, 16)] = placeholder[ramp((cse_var_1 + 2752), 1, 16)]
          data_pad_1[ramp(736, 1, 16)] = placeholder[ramp((cse_var_1 + 2768), 1, 16)]
          data_pad_1[ramp(752, 1, 16)] = placeholder[ramp((cse_var_1 + 2784), 1, 16)]
          data_pad_1[ramp(768, 1, 16)] = placeholder[ramp((cse_var_1 + 2800), 1, 16)]
          data_pad_1[ramp(784, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 2816), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(800, 1, 16)] = @tir.if_then_else((cse_var_2 && cse_var_4), placeholder[ramp((cse_var_1 + 3568), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(816, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3584), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(832, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3600), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(848, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3616), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(864, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3632), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(880, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3648), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(896, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3664), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(912, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3680), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(928, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3696), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(944, 1, 16)] = @tir.if_then_else((cse_var_2 && cse_var_5), placeholder[ramp((cse_var_1 + 3712), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          for (oc_chunk.outer.inner: int32, 0, 2) {
            for (ow.outer.inner: int32, 0, 4) {
              for (ic.inner: int32, 0, 16) {
                let cse_var_67: int32 = ((ow.outer.inner*32) + ic.inner)
                let cse_var_66: int32 = (cse_var_67 + 16)
                let cse_var_65: int32 = (cse_var_67 + 160)
                let cse_var_64: int32 = (cse_var_67 + 176)
                let cse_var_63: int32 = (cse_var_67 + 192)
                let cse_var_62: int32 = (cse_var_67 + 208)
                let cse_var_61: int32 = (cse_var_67 + 32)
                let cse_var_60: int32 = (cse_var_67 + 320)
                let cse_var_59: int32 = (cse_var_67 + 336)
                let cse_var_58: int32 = (cse_var_67 + 368)
                let cse_var_57: int32 = (cse_var_67 + 48)
                let cse_var_56: int32 = (cse_var_67 + 480)
                let cse_var_55: int32 = (cse_var_67 + 496)
                let cse_var_54: int32 = ((oc_chunk.outer.inner*64) + (ow.outer.inner*2))
                let cse_var_53: int32 = (cse_var_67 + 848)
                let cse_var_52: int32 = (cse_var_67 + 832)
                let cse_var_51: int32 = (cse_var_67 + 816)
                let cse_var_50: int32 = (cse_var_67 + 800)
                let cse_var_49: int32 = (cse_var_67 + 688)
                let cse_var_48: int32 = (cse_var_67 + 672)
                let cse_var_47: int32 = (cse_var_67 + 656)
                let cse_var_46: int32 = (cse_var_67 + 640)
                let cse_var_45: int32 = (cse_var_67 + 528)
                let cse_var_44: int32 = (cse_var_67 + 352)
                let cse_var_43: int32 = (cse_var_67 + 512)
                let cse_var_42: int32 = (cse_var_54 + 40)
                let cse_var_41: int32 = (cse_var_54 + 1)
                let cse_var_40: int32 = (cse_var_54 + 16)
                let cse_var_39: int32 = (cse_var_54 + 17)
                let cse_var_38: int32 = (cse_var_54 + 24)
                let cse_var_37: int32 = (cse_var_54 + 25)
                let cse_var_36: int32 = (cse_var_54 + 32)
                let cse_var_35: int32 = (cse_var_54 + 33)
                let cse_var_34: int32 = (cse_var_54 + 41)
                let cse_var_33: int32 = (cse_var_54 + 48)
                let cse_var_32: int32 = (cse_var_54 + 49)
                let cse_var_31: int32 = (cse_var_54 + 56)
                let cse_var_30: int32 = (cse_var_54 + 57)
                let cse_var_29: int32 = (cse_var_54 + 8)
                let cse_var_28: int32 = (cse_var_54 + 9)
                let cse_var_27: int32 = ((((floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28), 14)*36864) + (oc_chunk.outer.inner*18432)) + (ic.outer*2304)) + (ic.inner*16))
                let cse_var_26: int32 = (cse_var_27 + 10496)
                let cse_var_25: int32 = (cse_var_27 + 10752)
                let cse_var_24: int32 = (cse_var_27 + 11008)
                let cse_var_23: int32 = (cse_var_27 + 11264)
                let cse_var_22: int32 = (cse_var_27 + 1280)
                let cse_var_21: int32 = (cse_var_27 + 1536)
                let cse_var_20: int32 = (cse_var_27 + 1792)
                let cse_var_19: int32 = (cse_var_27 + 2048)
                let cse_var_18: int32 = (cse_var_27 + 256)
                let cse_var_17: int32 = (cse_var_27 + 512)
                let cse_var_16: int32 = (cse_var_27 + 768)
                let cse_var_15: int32 = (cse_var_27 + 9216)
                let cse_var_14: int32 = (cse_var_27 + 9472)
                let cse_var_13: int32 = (cse_var_27 + 9728)
                let cse_var_12: int32 = (cse_var_27 + 9984)
                let cse_var_11: int32 = (cse_var_27 + 1024)
                let cse_var_10: int32 = (cse_var_27 + 10240)
                 {
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_67], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_66], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_65], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_60], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_67], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_66], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_65], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_60], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_66], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_61], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_66], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_61], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_61], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_57], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_62], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_58], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_61], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_57], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_62], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_58], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_65], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_60], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_65], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_60], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_64], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_62], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_58], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_63], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_62], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_58], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_60], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_60], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_59], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_54] = (conv2d_NCHWc_1[cse_var_54] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_41] = (conv2d_NCHWc_1[cse_var_41] + (broadcast(data_pad_1[cse_var_58], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_40] = (conv2d_NCHWc_1[cse_var_40] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_39] = (conv2d_NCHWc_1[cse_var_39] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_38] = (conv2d_NCHWc_1[cse_var_38] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_37] = (conv2d_NCHWc_1[cse_var_37] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_58], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_42] = (conv2d_NCHWc_1[cse_var_42] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                }
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 4) {
        for (ax2.inner: int32, 0, 4) {
          for (ax3.inner: int32, 0, 8) {
            let cse_var_68: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28), 14)
            T_add[ramp((((((((cse_var_68*200704) + (ax1.inner*50176)) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28)*7168)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14), 7)*3584)) + (ax2.inner*896)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)*128)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[(((ax1.inner*32) + (ax2.inner*8)) + ax3.inner)] + placeholder_2[ramp(((cse_var_68*64) + (ax1.inner*16)), 1, 16)])
          }
        }
      }
    }
  }
}


==== Task 5: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_5 (weight 1 key: ["370e028deaef8d754954ca49417c56c8", [1, 8, 56, 56, 8], [4, 8, 1, 1, 8, 32], [1, 4, 1, 1, 32], [1, 4, 28, 28, 32]]) =====
placeholder = PLACEHOLDER [1, 8, 56, 56, 8]
placeholder = PLACEHOLDER [4, 8, 1, 1, 8, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 8), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 8)]*placeholder[oc_chunk, floordiv(ic, 8), kh, kw, floormod(ic, 8), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=2)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=2)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=7)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=2)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=4)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=7)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=1)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=7)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=2)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [200704], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [8192], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [128], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [100352], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 8, 56, 56, 8], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [4, 8, 1, 1, 8, 32], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 4, 1, 1, 32], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 28, 28, 32], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 392) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [8]), storage_scope = global;
    for (ax4.outer.inner: int32, 0, 2) {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [8], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 16) {
        let cse_var_24: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196)*4096) + (ic.outer*128)) + (ax4.outer.inner*16))
        let cse_var_23: int32 = (cse_var_24 + 96)
        let cse_var_22: int32 = (cse_var_24 + 64)
        let cse_var_21: int32 = (cse_var_24 + 32)
        let cse_var_20: int32 = (cse_var_24 + 2144)
        let cse_var_19: int32 = (cse_var_24 + 2112)
        let cse_var_18: int32 = (cse_var_24 + 2080)
        let cse_var_17: int32 = (cse_var_24 + 2048)
        let cse_var_16: int32 = (((((floordiv(ic.outer, 2)*25088) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 49), 7)*3584)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196), 49)*112)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 7)*16)) + (floormod(ic.outer, 2)*4))
        let cse_var_15: int32 = (cse_var_16 + 1)
        let cse_var_14: int32 = (cse_var_16 + 1793)
        let cse_var_13: int32 = (cse_var_16 + 1794)
        let cse_var_12: int32 = (cse_var_16 + 1795)
        let cse_var_11: int32 = (cse_var_16 + 2)
        let cse_var_10: int32 = (cse_var_16 + 2688)
        let cse_var_9: int32 = (cse_var_16 + 2689)
        let cse_var_8: int32 = (cse_var_16 + 2690)
        let cse_var_7: int32 = (cse_var_16 + 2691)
        let cse_var_6: int32 = (cse_var_16 + 3)
        let cse_var_5: int32 = (cse_var_16 + 896)
        let cse_var_4: int32 = (cse_var_16 + 897)
        let cse_var_3: int32 = (cse_var_16 + 898)
        let cse_var_2: int32 = (cse_var_16 + 899)
        let cse_var_1: int32 = (cse_var_16 + 1792)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 4) {
          let cse_var_26: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196)
          let cse_var_25: int32 = (ax4.outer.inner*16)
          T_add[ramp((((((((cse_var_26*50176) + (ax1.inner*25088)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 49), 7)*3584)) + (ax2.inner*896)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196), 49)*224)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 7)*32)) + cse_var_25), 1, 16)] = (conv2d_NCHWc_1[((ax1.inner*4) + ax2.inner)] + placeholder_2[ramp((((cse_var_26*64) + (ax1.inner*32)) + cse_var_25), 1, 16)])
        }
      }
    }
  }
}


==== Task 6: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_7 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 8, 28, 28, 16], [16, 8, 3, 3, 16, 16], [1, 16, 1, 1, 16], [1, 16, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 8, 28, 28, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 8, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=4)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=2)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=14)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=4)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=2)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=14)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [100352], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [294912], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [256], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [200704], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 8, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [16, 8, 3, 3, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 16, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 28, 28, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 448) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [28]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [576]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [28], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[14] = broadcast(0f32, 16)
      conv2d_NCHWc_1[15] = broadcast(0f32, 16)
      conv2d_NCHWc_1[16] = broadcast(0f32, 16)
      conv2d_NCHWc_1[17] = broadcast(0f32, 16)
      conv2d_NCHWc_1[18] = broadcast(0f32, 16)
      conv2d_NCHWc_1[19] = broadcast(0f32, 16)
      conv2d_NCHWc_1[20] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      conv2d_NCHWc_1[21] = broadcast(0f32, 16)
      conv2d_NCHWc_1[22] = broadcast(0f32, 16)
      conv2d_NCHWc_1[23] = broadcast(0f32, 16)
      conv2d_NCHWc_1[24] = broadcast(0f32, 16)
      conv2d_NCHWc_1[25] = broadcast(0f32, 16)
      conv2d_NCHWc_1[26] = broadcast(0f32, 16)
      conv2d_NCHWc_1[27] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 8) {
        let cse_var_7: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 224)
        let cse_var_6: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 14)
        let cse_var_5: bool = (cse_var_7 < 168)
        let cse_var_4: bool = (cse_var_6 < 13)
        let cse_var_3: bool = (56 <= cse_var_7)
        let cse_var_2: bool = (1 <= cse_var_6)
        let cse_var_1: int32 = (((ic.outer*12544) + (cse_var_6*896)) + (floordiv(cse_var_7, 56)*112))
         {
          data_pad_1: Buffer(data_pad, float32, [576], [])[ramp(0, 1, 16)] = @tir.if_then_else((cse_var_2 && cse_var_3), placeholder[ramp((cse_var_1 - 464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(16, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 448), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(32, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(48, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 416), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(64, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 400), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(80, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 384), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(96, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 368), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(112, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 352), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(128, 1, 16)] = @tir.if_then_else((cse_var_2 && cse_var_5), placeholder[ramp((cse_var_1 - 336), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(144, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(160, 1, 16)] = placeholder[ramp(cse_var_1, 1, 16)]
          data_pad_1[ramp(176, 1, 16)] = placeholder[ramp((cse_var_1 + 16), 1, 16)]
          data_pad_1[ramp(192, 1, 16)] = placeholder[ramp((cse_var_1 + 32), 1, 16)]
          data_pad_1[ramp(208, 1, 16)] = placeholder[ramp((cse_var_1 + 48), 1, 16)]
          data_pad_1[ramp(224, 1, 16)] = placeholder[ramp((cse_var_1 + 64), 1, 16)]
          data_pad_1[ramp(240, 1, 16)] = placeholder[ramp((cse_var_1 + 80), 1, 16)]
          data_pad_1[ramp(256, 1, 16)] = placeholder[ramp((cse_var_1 + 96), 1, 16)]
          data_pad_1[ramp(272, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 112), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(288, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 + 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(304, 1, 16)] = placeholder[ramp((cse_var_1 + 448), 1, 16)]
          data_pad_1[ramp(320, 1, 16)] = placeholder[ramp((cse_var_1 + 464), 1, 16)]
          data_pad_1[ramp(336, 1, 16)] = placeholder[ramp((cse_var_1 + 480), 1, 16)]
          data_pad_1[ramp(352, 1, 16)] = placeholder[ramp((cse_var_1 + 496), 1, 16)]
          data_pad_1[ramp(368, 1, 16)] = placeholder[ramp((cse_var_1 + 512), 1, 16)]
          data_pad_1[ramp(384, 1, 16)] = placeholder[ramp((cse_var_1 + 528), 1, 16)]
          data_pad_1[ramp(400, 1, 16)] = placeholder[ramp((cse_var_1 + 544), 1, 16)]
          data_pad_1[ramp(416, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 560), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(432, 1, 16)] = @tir.if_then_else((cse_var_4 && cse_var_3), placeholder[ramp((cse_var_1 + 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(448, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 896), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(464, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 912), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(480, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 928), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(496, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 944), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(512, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 960), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(528, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 976), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(544, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 992), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(560, 1, 16)] = @tir.if_then_else((cse_var_4 && cse_var_5), placeholder[ramp((cse_var_1 + 1008), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          for (oh.outer.inner: int32, 0, 2) {
            for (ic.inner: int32, 0, 16) {
              for (kh.inner: int32, 0, 3) {
                let cse_var_36: int32 = (oh.outer.inner*7)
                let cse_var_35: int32 = (cse_var_36 + 6)
                let cse_var_34: int32 = (cse_var_36 + 5)
                let cse_var_33: int32 = (cse_var_36 + 4)
                let cse_var_32: int32 = (cse_var_36 + 3)
                let cse_var_31: int32 = (cse_var_36 + 20)
                let cse_var_30: int32 = (cse_var_36 + 2)
                let cse_var_29: int32 = (cse_var_36 + 19)
                let cse_var_28: int32 = (cse_var_36 + 18)
                let cse_var_27: int32 = (cse_var_36 + 17)
                let cse_var_26: int32 = (cse_var_36 + 16)
                let cse_var_25: int32 = (cse_var_36 + 15)
                let cse_var_24: int32 = (cse_var_36 + 14)
                let cse_var_23: int32 = (cse_var_36 + 1)
                let cse_var_22: int32 = (((oh.outer.inner*144) + (kh.inner*144)) + ic.inner)
                let cse_var_21: int32 = (cse_var_22 + 96)
                let cse_var_20: int32 = (cse_var_22 + 80)
                let cse_var_19: int32 = (cse_var_22 + 64)
                let cse_var_18: int32 = (cse_var_22 + 48)
                let cse_var_17: int32 = (cse_var_22 + 32)
                let cse_var_16: int32 = (cse_var_22 + 16)
                let cse_var_15: int32 = (cse_var_22 + 128)
                let cse_var_14: int32 = (cse_var_22 + 112)
                let cse_var_13: int32 = (((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 224)*147456) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56), 14)*36864)) + (ic.outer*2304)) + (kh.inner*768)) + (ic.inner*16))
                let cse_var_12: int32 = (cse_var_13 + 18432)
                let cse_var_11: int32 = (cse_var_13 + 512)
                let cse_var_10: int32 = (cse_var_13 + 256)
                let cse_var_9: int32 = (cse_var_13 + 18944)
                let cse_var_8: int32 = (cse_var_13 + 18688)
                 {
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_23] = (conv2d_NCHWc_1[cse_var_23] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_24] = (conv2d_NCHWc_1[cse_var_24] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_25] = (conv2d_NCHWc_1[cse_var_25] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_26] = (conv2d_NCHWc_1[cse_var_26] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_27] = (conv2d_NCHWc_1[cse_var_27] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_23] = (conv2d_NCHWc_1[cse_var_23] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_24] = (conv2d_NCHWc_1[cse_var_24] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_25] = (conv2d_NCHWc_1[cse_var_25] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_26] = (conv2d_NCHWc_1[cse_var_26] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_27] = (conv2d_NCHWc_1[cse_var_27] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_36] = (conv2d_NCHWc_1[cse_var_36] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_23] = (conv2d_NCHWc_1[cse_var_23] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_30] = (conv2d_NCHWc_1[cse_var_30] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_32] = (conv2d_NCHWc_1[cse_var_32] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_33] = (conv2d_NCHWc_1[cse_var_33] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_34] = (conv2d_NCHWc_1[cse_var_34] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_35] = (conv2d_NCHWc_1[cse_var_35] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_24] = (conv2d_NCHWc_1[cse_var_24] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_25] = (conv2d_NCHWc_1[cse_var_25] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_26] = (conv2d_NCHWc_1[cse_var_26] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_27] = (conv2d_NCHWc_1[cse_var_27] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_28] = (conv2d_NCHWc_1[cse_var_28] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_29] = (conv2d_NCHWc_1[cse_var_29] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[cse_var_31] = (conv2d_NCHWc_1[cse_var_31] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                }
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 2) {
          for (ax3.inner: int32, 0, 7) {
            let cse_var_38: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 224)
            let cse_var_37: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56), 14)
            T_add[ramp((((((((cse_var_38*100352) + (cse_var_37*25088)) + (ax1.inner*12544)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 14)*896)) + (ax2.inner*448)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 224), 56)*112)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[(((ax1.inner*14) + (ax2.inner*7)) + ax3.inner)] + placeholder_2[ramp((((cse_var_38*128) + (cse_var_37*32)) + (ax1.inner*16)), 1, 16)])
          }
        }
      }
    }
  }
}


==== Task 7: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_2 (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 8, 56, 56, 16], [8, 8, 3, 3, 16, 16], [1, 8, 1, 1, 16], [1, 8, 28, 28, 16], [1, 8, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 8, 56, 56, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [8, 8, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 8, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 8, 28, 28, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=4)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=2)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=4)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=4)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=2)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=4)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [401408], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [147456], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [128], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [100352], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [100352], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_7: placeholder_12: Buffer(placeholder_11, float32, [1, 8, 28, 28, 16], []), placeholder_4: placeholder_13: Buffer(placeholder_8, float32, [1, 8, 56, 56, 16], []), placeholder_5: placeholder_14: Buffer(placeholder_9, float32, [8, 8, 3, 3, 16, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 8, 28, 28, 16], []), placeholder_6: placeholder_15: Buffer(placeholder_10, float32, [1, 8, 1, 1, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 392) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [16]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [432]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [16], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      conv2d_NCHWc_1[14] = broadcast(0f32, 16)
      conv2d_NCHWc_1[15] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 8) {
        let cse_var_6: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 2)
        let cse_var_5: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
        let cse_var_4: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196), 14)
        let cse_var_3: bool = (2 <= cse_var_5)
        let cse_var_2: bool = (1 <= ((cse_var_4*4) + (cse_var_6*2)))
        let cse_var_1: int32 = ((((ic.outer*50176) + (cse_var_4*3584)) + (cse_var_6*1792)) + (floordiv(cse_var_5, 2)*128))
         {
          data_pad_1: Buffer(data_pad, float32, [432], [])[ramp(0, 1, 16)] = @tir.if_then_else((cse_var_2 && cse_var_3), placeholder[ramp((cse_var_1 - 912), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(16, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 896), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(32, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(48, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 864), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(64, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 848), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(80, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 832), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(96, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 816), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(112, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 800), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(128, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 784), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(144, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(160, 1, 16)] = placeholder[ramp(cse_var_1, 1, 16)]
          data_pad_1[ramp(176, 1, 16)] = placeholder[ramp((cse_var_1 + 16), 1, 16)]
          data_pad_1[ramp(192, 1, 16)] = placeholder[ramp((cse_var_1 + 32), 1, 16)]
          data_pad_1[ramp(208, 1, 16)] = placeholder[ramp((cse_var_1 + 48), 1, 16)]
          data_pad_1[ramp(224, 1, 16)] = placeholder[ramp((cse_var_1 + 64), 1, 16)]
          data_pad_1[ramp(240, 1, 16)] = placeholder[ramp((cse_var_1 + 80), 1, 16)]
          data_pad_1[ramp(256, 1, 16)] = placeholder[ramp((cse_var_1 + 96), 1, 16)]
          data_pad_1[ramp(272, 1, 16)] = placeholder[ramp((cse_var_1 + 112), 1, 16)]
          data_pad_1[ramp(288, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 + 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(304, 1, 16)] = placeholder[ramp((cse_var_1 + 896), 1, 16)]
          data_pad_1[ramp(320, 1, 16)] = placeholder[ramp((cse_var_1 + 912), 1, 16)]
          data_pad_1[ramp(336, 1, 16)] = placeholder[ramp((cse_var_1 + 928), 1, 16)]
          data_pad_1[ramp(352, 1, 16)] = placeholder[ramp((cse_var_1 + 944), 1, 16)]
          data_pad_1[ramp(368, 1, 16)] = placeholder[ramp((cse_var_1 + 960), 1, 16)]
          data_pad_1[ramp(384, 1, 16)] = placeholder[ramp((cse_var_1 + 976), 1, 16)]
          data_pad_1[ramp(400, 1, 16)] = placeholder[ramp((cse_var_1 + 992), 1, 16)]
          data_pad_1[ramp(416, 1, 16)] = placeholder[ramp((cse_var_1 + 1008), 1, 16)]
          for (kw.outer: int32, 0, 3) {
            for (ic.inner: int32, 0, 16) {
              let cse_var_30: int32 = ((kw.outer*16) + ic.inner)
              let cse_var_29: int32 = (cse_var_30 + 176)
              let cse_var_28: int32 = (cse_var_30 + 208)
              let cse_var_27: int32 = (cse_var_30 + 240)
              let cse_var_26: int32 = (cse_var_30 + 288)
              let cse_var_25: int32 = (cse_var_30 + 32)
              let cse_var_24: int32 = (cse_var_30 + 320)
              let cse_var_23: int32 = (cse_var_30 + 352)
              let cse_var_22: int32 = (cse_var_30 + 384)
              let cse_var_21: int32 = (cse_var_30 + 64)
              let cse_var_20: int32 = (cse_var_30 + 96)
              let cse_var_19: int32 = (cse_var_30 + 144)
              let cse_var_18: int32 = ((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196)*73728) + (ic.outer*2304)) + (kw.outer*256)) + (ic.inner*16))
              let cse_var_17: int32 = (cse_var_18 + 19200)
              let cse_var_16: int32 = (cse_var_18 + 19968)
              let cse_var_15: int32 = (cse_var_18 + 36864)
              let cse_var_14: int32 = (cse_var_18 + 37632)
              let cse_var_13: int32 = (cse_var_18 + 38400)
              let cse_var_12: int32 = (cse_var_18 + 55296)
              let cse_var_11: int32 = (cse_var_18 + 56064)
              let cse_var_10: int32 = (cse_var_18 + 56832)
              let cse_var_9: int32 = (cse_var_18 + 768)
              let cse_var_8: int32 = (cse_var_18 + 1536)
              let cse_var_7: int32 = (cse_var_18 + 18432)
               {
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[14] = (conv2d_NCHWc_1[14] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[15] = (conv2d_NCHWc_1[15] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[14] = (conv2d_NCHWc_1[14] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[15] = (conv2d_NCHWc_1[15] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[14] = (conv2d_NCHWc_1[14] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[15] = (conv2d_NCHWc_1[15] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 4) {
        for (ax3.inner: int32, 0, 4) {
          let cse_var_32: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196)
          let cse_var_31: int32 = ((((((cse_var_32*50176) + (ax1.inner*12544)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196), 14)*896)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 2)*448)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14), 2)*64)) + (ax3.inner*16))
          T_add[ramp(cse_var_31, 1, 16)] = ((conv2d_NCHWc_1[((ax1.inner*4) + ax3.inner)] + placeholder_2[ramp(((cse_var_32*64) + (ax1.inner*16)), 1, 16)]) + placeholder_3[ramp(cse_var_31, 1, 16)])
        }
      }
    }
  }
}


==== Task 8: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_4 (weight 1 key: ["9e7a3585d7cdbdcb993f0f95f676aac6", [1, 16, 28, 28, 16], [16, 16, 3, 3, 16, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 16, 28, 28, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 16, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 14, 14, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=8)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=7)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=2)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=14)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=8)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=2)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=1)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=14)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [200704], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [589824], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [256], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [50176], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [50176], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_4: placeholder_12: Buffer(placeholder_8, float32, [1, 16, 28, 28, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 14, 14, 16], []), placeholder_5: placeholder_13: Buffer(placeholder_9, float32, [16, 16, 3, 3, 16, 16], []), placeholder_7: placeholder_14: Buffer(placeholder_11, float32, [1, 16, 14, 14, 16], []), placeholder_6: placeholder_15: Buffer(placeholder_10, float32, [1, 16, 1, 1, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 224) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [720]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 16) {
        let cse_var_5: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28)
        let cse_var_4: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
        let cse_var_3: bool = (14 <= cse_var_5)
        let cse_var_2: bool = (1 <= cse_var_4)
        let cse_var_1: int32 = (((ic.outer*12544) + (floordiv(cse_var_5, 14)*6272)) + (cse_var_4*32))
         {
          data_pad_1: Buffer(data_pad, float32, [720], [])[ramp(0, 1, 16)] = @tir.if_then_else((cse_var_3 && cse_var_2), placeholder[ramp((cse_var_1 - 464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(16, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 448), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(32, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(48, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(64, 1, 16)] = placeholder[ramp(cse_var_1, 1, 16)]
          data_pad_1[ramp(80, 1, 16)] = placeholder[ramp((cse_var_1 + 16), 1, 16)]
          data_pad_1[ramp(96, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(112, 1, 16)] = placeholder[ramp((cse_var_1 + 448), 1, 16)]
          data_pad_1[ramp(128, 1, 16)] = placeholder[ramp((cse_var_1 + 464), 1, 16)]
          data_pad_1[ramp(144, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(160, 1, 16)] = placeholder[ramp((cse_var_1 + 896), 1, 16)]
          data_pad_1[ramp(176, 1, 16)] = placeholder[ramp((cse_var_1 + 912), 1, 16)]
          data_pad_1[ramp(192, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 1328), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(208, 1, 16)] = placeholder[ramp((cse_var_1 + 1344), 1, 16)]
          data_pad_1[ramp(224, 1, 16)] = placeholder[ramp((cse_var_1 + 1360), 1, 16)]
          data_pad_1[ramp(240, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(256, 1, 16)] = placeholder[ramp((cse_var_1 + 1792), 1, 16)]
          data_pad_1[ramp(272, 1, 16)] = placeholder[ramp((cse_var_1 + 1808), 1, 16)]
          data_pad_1[ramp(288, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2224), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(304, 1, 16)] = placeholder[ramp((cse_var_1 + 2240), 1, 16)]
          data_pad_1[ramp(320, 1, 16)] = placeholder[ramp((cse_var_1 + 2256), 1, 16)]
          data_pad_1[ramp(336, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2672), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(352, 1, 16)] = placeholder[ramp((cse_var_1 + 2688), 1, 16)]
          data_pad_1[ramp(368, 1, 16)] = placeholder[ramp((cse_var_1 + 2704), 1, 16)]
          data_pad_1[ramp(384, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3120), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(400, 1, 16)] = placeholder[ramp((cse_var_1 + 3136), 1, 16)]
          data_pad_1[ramp(416, 1, 16)] = placeholder[ramp((cse_var_1 + 3152), 1, 16)]
          data_pad_1[ramp(432, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3568), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(448, 1, 16)] = placeholder[ramp((cse_var_1 + 3584), 1, 16)]
          data_pad_1[ramp(464, 1, 16)] = placeholder[ramp((cse_var_1 + 3600), 1, 16)]
          data_pad_1[ramp(480, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 4016), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(496, 1, 16)] = placeholder[ramp((cse_var_1 + 4032), 1, 16)]
          data_pad_1[ramp(512, 1, 16)] = placeholder[ramp((cse_var_1 + 4048), 1, 16)]
          data_pad_1[ramp(528, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 4464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(544, 1, 16)] = placeholder[ramp((cse_var_1 + 4480), 1, 16)]
          data_pad_1[ramp(560, 1, 16)] = placeholder[ramp((cse_var_1 + 4496), 1, 16)]
          data_pad_1[ramp(576, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 4912), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(592, 1, 16)] = placeholder[ramp((cse_var_1 + 4928), 1, 16)]
          data_pad_1[ramp(608, 1, 16)] = placeholder[ramp((cse_var_1 + 4944), 1, 16)]
          data_pad_1[ramp(624, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 5360), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(640, 1, 16)] = placeholder[ramp((cse_var_1 + 5376), 1, 16)]
          data_pad_1[ramp(656, 1, 16)] = placeholder[ramp((cse_var_1 + 5392), 1, 16)]
          data_pad_1[ramp(672, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 5808), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(688, 1, 16)] = placeholder[ramp((cse_var_1 + 5824), 1, 16)]
          data_pad_1[ramp(704, 1, 16)] = placeholder[ramp((cse_var_1 + 5840), 1, 16)]
          for (kw.outer: int32, 0, 3) {
            for (ic.inner: int32, 0, 16) {
              let cse_var_26: int32 = ((kw.outer*16) + ic.inner)
              let cse_var_25: int32 = (cse_var_26 + 144)
              let cse_var_24: int32 = (cse_var_26 + 192)
              let cse_var_23: int32 = (cse_var_26 + 240)
              let cse_var_22: int32 = (cse_var_26 + 288)
              let cse_var_21: int32 = (cse_var_26 + 384)
              let cse_var_20: int32 = (cse_var_26 + 432)
              let cse_var_19: int32 = (cse_var_26 + 48)
              let cse_var_18: int32 = (cse_var_26 + 480)
              let cse_var_17: int32 = (cse_var_26 + 528)
              let cse_var_16: int32 = (cse_var_26 + 576)
              let cse_var_15: int32 = (cse_var_26 + 624)
              let cse_var_14: int32 = (cse_var_26 + 672)
              let cse_var_13: int32 = (cse_var_26 + 96)
              let cse_var_12: int32 = (cse_var_26 + 336)
              let cse_var_11: int32 = ((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28)*73728) + (ic.outer*2304)) + (kw.outer*256)) + (ic.inner*16))
              let cse_var_10: int32 = (cse_var_11 + 1536)
              let cse_var_9: int32 = (cse_var_11 + 768)
              let cse_var_8: int32 = (cse_var_11 + 38400)
              let cse_var_7: int32 = (cse_var_11 + 37632)
              let cse_var_6: int32 = (cse_var_11 + 36864)
               {
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 7) {
          let cse_var_28: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28)
          let cse_var_27: int32 = (((((cse_var_28*6272) + (ax1.inner*3136)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 28), 14)*1568)) + (ax2.inner*224)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*16))
          T_add[ramp(cse_var_27, 1, 16)] = ((conv2d_NCHWc_1[((ax1.inner*7) + ax2.inner)] + placeholder_2[ramp(((cse_var_28*32) + (ax1.inner*16)), 1, 16)]) + placeholder_3[ramp(cse_var_27, 1, 16)])
        }
      }
    }
  }
}


==== Task 9: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_6 (weight 12 key: ["ebcfabdea1e272d9e71864aa40034c6c", [1, 1, 28, 28, 128], [4, 1, 3, 3, 128, 32], [1, 4, 1, 1, 32], [1, 4, 28, 28, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 28, 28, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 1, 3, 3, 128, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=4)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=2)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=32)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=32)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=4)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=7)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=2)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=2)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [100352], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [147456], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [128], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [100352], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 1, 28, 28, 128], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [4, 1, 3, 3, 128, 32], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 4, 1, 1, 32], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 28, 28, 32], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 196) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x32), float32x32, [8]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [768]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 2) {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x32, [8], [])[0] = broadcast(0f32, 32)
      conv2d_NCHWc_1[1] = broadcast(0f32, 32)
      conv2d_NCHWc_1[2] = broadcast(0f32, 32)
      conv2d_NCHWc_1[3] = broadcast(0f32, 32)
      conv2d_NCHWc_1[4] = broadcast(0f32, 32)
      conv2d_NCHWc_1[5] = broadcast(0f32, 32)
      conv2d_NCHWc_1[6] = broadcast(0f32, 32)
      conv2d_NCHWc_1[7] = broadcast(0f32, 32)
      for (ic.outer: int32, 0, 4) {
        for (i2: int32, 0, 6) {
          let cse_var_7: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7)
          let cse_var_6: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28)
          let cse_var_5: int32 = ((cse_var_7*4) + i2)
          let cse_var_4: int32 = (i2*128)
          let cse_var_3: int32 = ((cse_var_6*4) + (ax3.outer.inner*2))
          let cse_var_2: bool = ((1 <= cse_var_5) && (cse_var_5 < 29))
          let cse_var_1: int32 = (((((cse_var_7*14336) + (i2*3584)) + (cse_var_6*512)) + (ax3.outer.inner*256)) + (ic.outer*32))
           {
            data_pad_1: Buffer(data_pad, float32, [768], [])[ramp(cse_var_4, 1, 32)] = @tir.if_then_else((cse_var_2 && (1 <= cse_var_3)), placeholder[ramp((cse_var_1 - 3712), 1, 32)], broadcast(0f32, 32), dtype=float32x32)
            data_pad_1[ramp((cse_var_4 + 32), 1, 32)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 3584), 1, 32)], broadcast(0f32, 32), dtype=float32x32)
            data_pad_1[ramp((cse_var_4 + 64), 1, 32)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 3456), 1, 32)], broadcast(0f32, 32), dtype=float32x32)
            data_pad_1[ramp((cse_var_4 + 96), 1, 32)] = @tir.if_then_else((cse_var_2 && (cse_var_3 < 26)), placeholder[ramp((cse_var_1 - 3328), 1, 32)], broadcast(0f32, 32), dtype=float32x32)
          }
        }
        for (kw.outer: int32, 0, 3) {
          for (ic.inner: int32, 0, 32) {
            for (kh.inner: int32, 0, 3) {
              let cse_var_9: int32 = (((kh.inner*128) + (kw.outer*32)) + ic.inner)
              let cse_var_8: int32 = (((((floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28), 7)*36864) + (kh.inner*12288)) + (kw.outer*4096)) + (ic.outer*1024)) + (ic.inner*32))
               {
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[(cse_var_9 + 32)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[(cse_var_9 + 128)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[(cse_var_9 + 160)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[(cse_var_9 + 256)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[(cse_var_9 + 288)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[(cse_var_9 + 384)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[(cse_var_9 + 416)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
              }
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 4) {
        for (ax3.inner: int32, 0, 2) {
          let cse_var_10: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28)
          T_add[ramp((((((cse_var_10*3584) + (ax2.inner*896)) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28)*128)) + (ax3.outer.inner*64)) + (ax3.inner*32)), 1, 32)] = (conv2d_NCHWc_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp((floordiv(cse_var_10, 7)*32), 1, 32)])
        }
      }
    }
  }
}


==== Task 10: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_10 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 16, 14, 14, 16], [32, 16, 3, 3, 16, 16], [1, 32, 1, 1, 16], [1, 32, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 16, 14, 14, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [32, 16, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 32, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=2)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=2)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [50176], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [1179648], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [512], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [100352], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 16, 14, 14, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [32, 16, 3, 3, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 32, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 32, 14, 14, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused: int32, 0, 448) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [576]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 16) {
        let cse_var_7: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 14)
        let cse_var_6: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 2)
        let cse_var_5: bool = (cse_var_6 < 1)
        let cse_var_4: bool = (cse_var_7 < 12)
        let cse_var_3: bool = (2 <= cse_var_7)
        let cse_var_2: bool = (1 <= cse_var_6)
        let cse_var_1: int32 = (((ic.outer*3136) + (floordiv(cse_var_7, 2)*448)) + (cse_var_6*112))
         {
          data_pad_1: Buffer(data_pad, float32, [576], [])[ramp(0, 1, 16)] = @tir.if_then_else((cse_var_3 && cse_var_2), placeholder[ramp((cse_var_1 - 240), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(16, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 224), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(32, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 208), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(48, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 192), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(64, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 176), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(80, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 160), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(96, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 144), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(112, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 128), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(128, 1, 16)] = @tir.if_then_else((cse_var_3 && cse_var_5), placeholder[ramp((cse_var_1 - 112), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(144, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(160, 1, 16)] = placeholder[ramp(cse_var_1, 1, 16)]
          data_pad_1[ramp(176, 1, 16)] = placeholder[ramp((cse_var_1 + 16), 1, 16)]
          data_pad_1[ramp(192, 1, 16)] = placeholder[ramp((cse_var_1 + 32), 1, 16)]
          data_pad_1[ramp(208, 1, 16)] = placeholder[ramp((cse_var_1 + 48), 1, 16)]
          data_pad_1[ramp(224, 1, 16)] = placeholder[ramp((cse_var_1 + 64), 1, 16)]
          data_pad_1[ramp(240, 1, 16)] = placeholder[ramp((cse_var_1 + 80), 1, 16)]
          data_pad_1[ramp(256, 1, 16)] = placeholder[ramp((cse_var_1 + 96), 1, 16)]
          data_pad_1[ramp(272, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 112), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(288, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 208), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(304, 1, 16)] = placeholder[ramp((cse_var_1 + 224), 1, 16)]
          data_pad_1[ramp(320, 1, 16)] = placeholder[ramp((cse_var_1 + 240), 1, 16)]
          data_pad_1[ramp(336, 1, 16)] = placeholder[ramp((cse_var_1 + 256), 1, 16)]
          data_pad_1[ramp(352, 1, 16)] = placeholder[ramp((cse_var_1 + 272), 1, 16)]
          data_pad_1[ramp(368, 1, 16)] = placeholder[ramp((cse_var_1 + 288), 1, 16)]
          data_pad_1[ramp(384, 1, 16)] = placeholder[ramp((cse_var_1 + 304), 1, 16)]
          data_pad_1[ramp(400, 1, 16)] = placeholder[ramp((cse_var_1 + 320), 1, 16)]
          data_pad_1[ramp(416, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 336), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(432, 1, 16)] = @tir.if_then_else((cse_var_4 && cse_var_2), placeholder[ramp((cse_var_1 + 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(448, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 448), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(464, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(480, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 480), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(496, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 496), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(512, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 512), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(528, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 528), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(544, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 544), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(560, 1, 16)] = @tir.if_then_else((cse_var_4 && cse_var_5), placeholder[ramp((cse_var_1 + 560), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          for (kh.outer: int32, 0, 3) {
            for (ic.inner: int32, 0, 16) {
              let cse_var_25: int32 = ((kh.outer*144) + ic.inner)
              let cse_var_24: int32 = (cse_var_25 + 112)
              let cse_var_23: int32 = (cse_var_25 + 16)
              let cse_var_22: int32 = (cse_var_25 + 160)
              let cse_var_21: int32 = (cse_var_25 + 176)
              let cse_var_20: int32 = (cse_var_25 + 192)
              let cse_var_19: int32 = (cse_var_25 + 224)
              let cse_var_18: int32 = (cse_var_25 + 240)
              let cse_var_17: int32 = (cse_var_25 + 256)
              let cse_var_16: int32 = (cse_var_25 + 32)
              let cse_var_15: int32 = (cse_var_25 + 48)
              let cse_var_14: int32 = (cse_var_25 + 64)
              let cse_var_13: int32 = (cse_var_25 + 80)
              let cse_var_12: int32 = (cse_var_25 + 96)
              let cse_var_11: int32 = (cse_var_25 + 208)
              let cse_var_10: int32 = ((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 14)*36864) + (ic.outer*2304)) + (kh.outer*768)) + (ic.inner*16))
              let cse_var_9: int32 = (cse_var_10 + 256)
              let cse_var_8: int32 = (cse_var_10 + 512)
               {
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[(cse_var_25 + 144)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[(cse_var_25 + 128)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[(cse_var_25 + 272)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
              }
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          T_add[ramp(((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 2)*448) + (ax2.inner*224)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 2)*112)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax2.inner*7) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 14)*16), 1, 16)])
        }
      }
    }
  }
}


==== Task 11: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_1 (weight 2 key: ["081494a7a02432ad3b36e203c3f627a5", [1, 1, 56, 56, 64], [2, 1, 3, 3, 64, 32], [1, 2, 1, 1, 32], [1, 2, 56, 56, 32], [1, 2, 56, 56, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 56, 56, 64]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 64, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 64), (oh + kh), (ow + kw), floormod(ic, 64)]*placeholder[oc_chunk, floordiv(ic, 64), kh, kw, floormod(ic, 64), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 2, 56, 56, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=2)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=14)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=2)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=32)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=14)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=4)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_n_o_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 0)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [200704], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [36864], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [64], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [200704], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [200704], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_7: placeholder_12: Buffer(placeholder_11, float32, [1, 2, 56, 56, 32], []), placeholder_4: placeholder_13: Buffer(placeholder_8, float32, [1, 1, 56, 56, 64], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 2, 56, 56, 32], []), placeholder_5: placeholder_14: Buffer(placeholder_9, float32, [2, 1, 3, 3, 64, 32], []), placeholder_6: placeholder_15: Buffer(placeholder_10, float32, [1, 2, 1, 1, 32], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 196) "parallel" {
    allocate(data_pad: Pointer(global float32), float32, [2304]), storage_scope = global;
    allocate(conv2d_NCHWc: Pointer(global float32x32), float32x32, [32]), storage_scope = global {
      for (i2: int32, 0, 6) {
        for (i3: int32, 0, 6) {
          for (i4: int32, 0, 64) {
            let cse_var_5: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
            let cse_var_4: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
            let cse_var_3: int32 = (i3*64)
            let cse_var_2: int32 = ((cse_var_5*4) + i2)
            let cse_var_1: int32 = ((cse_var_4*4) + i3)
            data_pad_1: Buffer(data_pad, float32, [2304], [])[(((i2*384) + cse_var_3) + i4)] = @tir.if_then_else(((((1 <= cse_var_2) && (cse_var_2 < 57)) && (1 <= cse_var_1)) && (cse_var_1 < 57)), placeholder[((((((cse_var_5*14336) + (i2*3584)) + (cse_var_4*256)) + cse_var_3) + i4) - 3648)], 0f32, dtype=float32)
          }
        }
      }
      for (oc_chunk.outer.inner.init: int32, 0, 2) {
        for (ow.outer.inner.init: int32, 0, 2) {
          for (oh.inner.init: int32, 0, 4) {
            for (ow.inner.init: int32, 0, 2) {
              conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x32, [32], [])[((((oc_chunk.outer.inner.init*16) + (oh.inner.init*4)) + (ow.outer.inner.init*2)) + ow.inner.init)] = broadcast(0f32, 32)
            }
          }
        }
      }
      for (kh.outer: int32, 0, 3) {
        for (oc_chunk.outer.inner: int32, 0, 2) {
          for (ow.outer.inner: int32, 0, 2) {
            for (ic.inner: int32, 0, 64) {
              for (kw.inner: int32, 0, 3) {
                for (oh.inner: int32, 0, 4) {
                  for (ow.inner: int32, 0, 2) {
                    let cse_var_6: int32 = ((((oc_chunk.outer.inner*16) + (oh.inner*4)) + (ow.outer.inner*2)) + ow.inner)
                    conv2d_NCHWc_1[cse_var_6] = (conv2d_NCHWc_1[cse_var_6] + (broadcast(data_pad_1[((((((oh.inner*384) + (kh.outer*384)) + (ow.outer.inner*128)) + (ow.inner*64)) + (kw.inner*64)) + ic.inner)], 32)*placeholder_1[ramp(((((oc_chunk.outer.inner*18432) + (kh.outer*6144)) + (kw.inner*2048)) + (ic.inner*32)), 1, 32)]))
                  }
                }
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 4) {
          for (ax3.inner: int32, 0, 4) {
            let cse_var_7: int32 = (((((ax1.inner*100352) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*7168)) + (ax2.inner*1792)) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*128)) + (ax3.inner*32))
            T_add[ramp(cse_var_7, 1, 32)] = ((conv2d_NCHWc_1[(((ax1.inner*16) + (ax2.inner*4)) + ax3.inner)] + placeholder_2[ramp((ax1.inner*32), 1, 32)]) + placeholder_3[ramp(cse_var_7, 1, 32)])
          }
        }
      }
    }
  }
}


==== Task 12: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_1 (weight 1 key: ["ac95105c41940c5c7a7881f854fc5577", [1, 4, 112, 112, 16], [4, 4, 3, 3, 16, 16], [1, 4, 1, 1, 16], [1, 4, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 112, 112, 16]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 4, 3, 3, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=2)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=8)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=8)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=14)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=2)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=8)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=7)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=8)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=14)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [802816], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [36864], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [64], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [802816], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 4, 112, 112, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [4, 4, 3, 3, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 4, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 112, 112, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 392) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [128]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [1600]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [128], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[64] = broadcast(0f32, 16)
      conv2d_NCHWc_1[65] = broadcast(0f32, 16)
      conv2d_NCHWc_1[66] = broadcast(0f32, 16)
      conv2d_NCHWc_1[67] = broadcast(0f32, 16)
      conv2d_NCHWc_1[68] = broadcast(0f32, 16)
      conv2d_NCHWc_1[69] = broadcast(0f32, 16)
      conv2d_NCHWc_1[70] = broadcast(0f32, 16)
      conv2d_NCHWc_1[71] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      conv2d_NCHWc_1[14] = broadcast(0f32, 16)
      conv2d_NCHWc_1[15] = broadcast(0f32, 16)
      conv2d_NCHWc_1[72] = broadcast(0f32, 16)
      conv2d_NCHWc_1[73] = broadcast(0f32, 16)
      conv2d_NCHWc_1[74] = broadcast(0f32, 16)
      conv2d_NCHWc_1[75] = broadcast(0f32, 16)
      conv2d_NCHWc_1[76] = broadcast(0f32, 16)
      conv2d_NCHWc_1[77] = broadcast(0f32, 16)
      conv2d_NCHWc_1[78] = broadcast(0f32, 16)
      conv2d_NCHWc_1[79] = broadcast(0f32, 16)
      conv2d_NCHWc_1[16] = broadcast(0f32, 16)
      conv2d_NCHWc_1[17] = broadcast(0f32, 16)
      conv2d_NCHWc_1[18] = broadcast(0f32, 16)
      conv2d_NCHWc_1[19] = broadcast(0f32, 16)
      conv2d_NCHWc_1[20] = broadcast(0f32, 16)
      conv2d_NCHWc_1[21] = broadcast(0f32, 16)
      conv2d_NCHWc_1[22] = broadcast(0f32, 16)
      conv2d_NCHWc_1[23] = broadcast(0f32, 16)
      conv2d_NCHWc_1[80] = broadcast(0f32, 16)
      conv2d_NCHWc_1[81] = broadcast(0f32, 16)
      conv2d_NCHWc_1[82] = broadcast(0f32, 16)
      conv2d_NCHWc_1[83] = broadcast(0f32, 16)
      conv2d_NCHWc_1[84] = broadcast(0f32, 16)
      conv2d_NCHWc_1[85] = broadcast(0f32, 16)
      conv2d_NCHWc_1[86] = broadcast(0f32, 16)
      conv2d_NCHWc_1[87] = broadcast(0f32, 16)
      conv2d_NCHWc_1[24] = broadcast(0f32, 16)
      conv2d_NCHWc_1[25] = broadcast(0f32, 16)
      conv2d_NCHWc_1[26] = broadcast(0f32, 16)
      conv2d_NCHWc_1[27] = broadcast(0f32, 16)
      conv2d_NCHWc_1[28] = broadcast(0f32, 16)
      conv2d_NCHWc_1[29] = broadcast(0f32, 16)
      conv2d_NCHWc_1[30] = broadcast(0f32, 16)
      conv2d_NCHWc_1[31] = broadcast(0f32, 16)
      conv2d_NCHWc_1[88] = broadcast(0f32, 16)
      conv2d_NCHWc_1[89] = broadcast(0f32, 16)
      conv2d_NCHWc_1[90] = broadcast(0f32, 16)
      conv2d_NCHWc_1[91] = broadcast(0f32, 16)
      conv2d_NCHWc_1[92] = broadcast(0f32, 16)
      conv2d_NCHWc_1[93] = broadcast(0f32, 16)
      conv2d_NCHWc_1[94] = broadcast(0f32, 16)
      conv2d_NCHWc_1[95] = broadcast(0f32, 16)
      conv2d_NCHWc_1[32] = broadcast(0f32, 16)
      conv2d_NCHWc_1[33] = broadcast(0f32, 16)
      conv2d_NCHWc_1[34] = broadcast(0f32, 16)
      conv2d_NCHWc_1[35] = broadcast(0f32, 16)
      conv2d_NCHWc_1[36] = broadcast(0f32, 16)
      conv2d_NCHWc_1[37] = broadcast(0f32, 16)
      conv2d_NCHWc_1[38] = broadcast(0f32, 16)
      conv2d_NCHWc_1[39] = broadcast(0f32, 16)
      conv2d_NCHWc_1[96] = broadcast(0f32, 16)
      conv2d_NCHWc_1[97] = broadcast(0f32, 16)
      conv2d_NCHWc_1[98] = broadcast(0f32, 16)
      conv2d_NCHWc_1[99] = broadcast(0f32, 16)
      conv2d_NCHWc_1[100] = broadcast(0f32, 16)
      conv2d_NCHWc_1[101] = broadcast(0f32, 16)
      conv2d_NCHWc_1[102] = broadcast(0f32, 16)
      conv2d_NCHWc_1[103] = broadcast(0f32, 16)
      conv2d_NCHWc_1[40] = broadcast(0f32, 16)
      conv2d_NCHWc_1[41] = broadcast(0f32, 16)
      conv2d_NCHWc_1[42] = broadcast(0f32, 16)
      conv2d_NCHWc_1[43] = broadcast(0f32, 16)
      conv2d_NCHWc_1[44] = broadcast(0f32, 16)
      conv2d_NCHWc_1[45] = broadcast(0f32, 16)
      conv2d_NCHWc_1[46] = broadcast(0f32, 16)
      conv2d_NCHWc_1[47] = broadcast(0f32, 16)
      conv2d_NCHWc_1[104] = broadcast(0f32, 16)
      conv2d_NCHWc_1[105] = broadcast(0f32, 16)
      conv2d_NCHWc_1[106] = broadcast(0f32, 16)
      conv2d_NCHWc_1[107] = broadcast(0f32, 16)
      conv2d_NCHWc_1[108] = broadcast(0f32, 16)
      conv2d_NCHWc_1[109] = broadcast(0f32, 16)
      conv2d_NCHWc_1[110] = broadcast(0f32, 16)
      conv2d_NCHWc_1[111] = broadcast(0f32, 16)
      conv2d_NCHWc_1[48] = broadcast(0f32, 16)
      conv2d_NCHWc_1[49] = broadcast(0f32, 16)
      conv2d_NCHWc_1[50] = broadcast(0f32, 16)
      conv2d_NCHWc_1[51] = broadcast(0f32, 16)
      conv2d_NCHWc_1[52] = broadcast(0f32, 16)
      conv2d_NCHWc_1[53] = broadcast(0f32, 16)
      conv2d_NCHWc_1[54] = broadcast(0f32, 16)
      conv2d_NCHWc_1[55] = broadcast(0f32, 16)
      conv2d_NCHWc_1[112] = broadcast(0f32, 16)
      conv2d_NCHWc_1[113] = broadcast(0f32, 16)
      conv2d_NCHWc_1[114] = broadcast(0f32, 16)
      conv2d_NCHWc_1[115] = broadcast(0f32, 16)
      conv2d_NCHWc_1[116] = broadcast(0f32, 16)
      conv2d_NCHWc_1[117] = broadcast(0f32, 16)
      conv2d_NCHWc_1[118] = broadcast(0f32, 16)
      conv2d_NCHWc_1[119] = broadcast(0f32, 16)
      conv2d_NCHWc_1[56] = broadcast(0f32, 16)
      conv2d_NCHWc_1[57] = broadcast(0f32, 16)
      conv2d_NCHWc_1[58] = broadcast(0f32, 16)
      conv2d_NCHWc_1[59] = broadcast(0f32, 16)
      conv2d_NCHWc_1[60] = broadcast(0f32, 16)
      conv2d_NCHWc_1[61] = broadcast(0f32, 16)
      conv2d_NCHWc_1[62] = broadcast(0f32, 16)
      conv2d_NCHWc_1[63] = broadcast(0f32, 16)
      conv2d_NCHWc_1[120] = broadcast(0f32, 16)
      conv2d_NCHWc_1[121] = broadcast(0f32, 16)
      conv2d_NCHWc_1[122] = broadcast(0f32, 16)
      conv2d_NCHWc_1[123] = broadcast(0f32, 16)
      conv2d_NCHWc_1[124] = broadcast(0f32, 16)
      conv2d_NCHWc_1[125] = broadcast(0f32, 16)
      conv2d_NCHWc_1[126] = broadcast(0f32, 16)
      conv2d_NCHWc_1[127] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 4) {
        let cse_var_9: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196)
        let cse_var_8: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 98), 14)
        let cse_var_7: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
        let cse_var_6: int32 = ((cse_var_9*56) + (cse_var_8*8))
        let cse_var_5: bool = (cse_var_7 < 13)
        let cse_var_4: bool = (1 <= cse_var_7)
        let cse_var_3: bool = (1 <= cse_var_6)
        let cse_var_2: bool = (cse_var_6 < 104)
        let cse_var_1: int32 = ((((ic.outer*200704) + (cse_var_9*100352)) + (cse_var_8*14336)) + (cse_var_7*128))
         {
          data_pad_1: Buffer(data_pad, float32, [1600], [])[ramp(0, 1, 16)] = @tir.if_then_else((cse_var_3 && cse_var_4), placeholder[ramp((cse_var_1 - 1808), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(16, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1792), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(32, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(48, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1760), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(64, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1744), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(80, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1728), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(96, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1712), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(112, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1696), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(128, 1, 16)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 1680), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(144, 1, 16)] = @tir.if_then_else((cse_var_3 && cse_var_5), placeholder[ramp((cse_var_1 - 1664), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(160, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(176, 1, 16)] = placeholder[ramp(cse_var_1, 1, 16)]
          data_pad_1[ramp(192, 1, 16)] = placeholder[ramp((cse_var_1 + 16), 1, 16)]
          data_pad_1[ramp(208, 1, 16)] = placeholder[ramp((cse_var_1 + 32), 1, 16)]
          data_pad_1[ramp(224, 1, 16)] = placeholder[ramp((cse_var_1 + 48), 1, 16)]
          data_pad_1[ramp(240, 1, 16)] = placeholder[ramp((cse_var_1 + 64), 1, 16)]
          data_pad_1[ramp(256, 1, 16)] = placeholder[ramp((cse_var_1 + 80), 1, 16)]
          data_pad_1[ramp(272, 1, 16)] = placeholder[ramp((cse_var_1 + 96), 1, 16)]
          data_pad_1[ramp(288, 1, 16)] = placeholder[ramp((cse_var_1 + 112), 1, 16)]
          data_pad_1[ramp(304, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 128), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(320, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(336, 1, 16)] = placeholder[ramp((cse_var_1 + 1792), 1, 16)]
          data_pad_1[ramp(352, 1, 16)] = placeholder[ramp((cse_var_1 + 1808), 1, 16)]
          data_pad_1[ramp(368, 1, 16)] = placeholder[ramp((cse_var_1 + 1824), 1, 16)]
          data_pad_1[ramp(384, 1, 16)] = placeholder[ramp((cse_var_1 + 1840), 1, 16)]
          data_pad_1[ramp(400, 1, 16)] = placeholder[ramp((cse_var_1 + 1856), 1, 16)]
          data_pad_1[ramp(416, 1, 16)] = placeholder[ramp((cse_var_1 + 1872), 1, 16)]
          data_pad_1[ramp(432, 1, 16)] = placeholder[ramp((cse_var_1 + 1888), 1, 16)]
          data_pad_1[ramp(448, 1, 16)] = placeholder[ramp((cse_var_1 + 1904), 1, 16)]
          data_pad_1[ramp(464, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 1920), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(480, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 3568), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(496, 1, 16)] = placeholder[ramp((cse_var_1 + 3584), 1, 16)]
          data_pad_1[ramp(512, 1, 16)] = placeholder[ramp((cse_var_1 + 3600), 1, 16)]
          data_pad_1[ramp(528, 1, 16)] = placeholder[ramp((cse_var_1 + 3616), 1, 16)]
          data_pad_1[ramp(544, 1, 16)] = placeholder[ramp((cse_var_1 + 3632), 1, 16)]
          data_pad_1[ramp(560, 1, 16)] = placeholder[ramp((cse_var_1 + 3648), 1, 16)]
          data_pad_1[ramp(576, 1, 16)] = placeholder[ramp((cse_var_1 + 3664), 1, 16)]
          data_pad_1[ramp(592, 1, 16)] = placeholder[ramp((cse_var_1 + 3680), 1, 16)]
          data_pad_1[ramp(608, 1, 16)] = placeholder[ramp((cse_var_1 + 3696), 1, 16)]
          data_pad_1[ramp(624, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 3712), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(640, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 5360), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(656, 1, 16)] = placeholder[ramp((cse_var_1 + 5376), 1, 16)]
          data_pad_1[ramp(672, 1, 16)] = placeholder[ramp((cse_var_1 + 5392), 1, 16)]
          data_pad_1[ramp(688, 1, 16)] = placeholder[ramp((cse_var_1 + 5408), 1, 16)]
          data_pad_1[ramp(704, 1, 16)] = placeholder[ramp((cse_var_1 + 5424), 1, 16)]
          data_pad_1[ramp(720, 1, 16)] = placeholder[ramp((cse_var_1 + 5440), 1, 16)]
          data_pad_1[ramp(736, 1, 16)] = placeholder[ramp((cse_var_1 + 5456), 1, 16)]
          data_pad_1[ramp(752, 1, 16)] = placeholder[ramp((cse_var_1 + 5472), 1, 16)]
          data_pad_1[ramp(768, 1, 16)] = placeholder[ramp((cse_var_1 + 5488), 1, 16)]
          data_pad_1[ramp(784, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 5504), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(800, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 7152), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(816, 1, 16)] = placeholder[ramp((cse_var_1 + 7168), 1, 16)]
          data_pad_1[ramp(832, 1, 16)] = placeholder[ramp((cse_var_1 + 7184), 1, 16)]
          data_pad_1[ramp(848, 1, 16)] = placeholder[ramp((cse_var_1 + 7200), 1, 16)]
          data_pad_1[ramp(864, 1, 16)] = placeholder[ramp((cse_var_1 + 7216), 1, 16)]
          data_pad_1[ramp(880, 1, 16)] = placeholder[ramp((cse_var_1 + 7232), 1, 16)]
          data_pad_1[ramp(896, 1, 16)] = placeholder[ramp((cse_var_1 + 7248), 1, 16)]
          data_pad_1[ramp(912, 1, 16)] = placeholder[ramp((cse_var_1 + 7264), 1, 16)]
          data_pad_1[ramp(928, 1, 16)] = placeholder[ramp((cse_var_1 + 7280), 1, 16)]
          data_pad_1[ramp(944, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 7296), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(960, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 8944), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(976, 1, 16)] = placeholder[ramp((cse_var_1 + 8960), 1, 16)]
          data_pad_1[ramp(992, 1, 16)] = placeholder[ramp((cse_var_1 + 8976), 1, 16)]
          data_pad_1[ramp(1008, 1, 16)] = placeholder[ramp((cse_var_1 + 8992), 1, 16)]
          data_pad_1[ramp(1024, 1, 16)] = placeholder[ramp((cse_var_1 + 9008), 1, 16)]
          data_pad_1[ramp(1040, 1, 16)] = placeholder[ramp((cse_var_1 + 9024), 1, 16)]
          data_pad_1[ramp(1056, 1, 16)] = placeholder[ramp((cse_var_1 + 9040), 1, 16)]
          data_pad_1[ramp(1072, 1, 16)] = placeholder[ramp((cse_var_1 + 9056), 1, 16)]
          data_pad_1[ramp(1088, 1, 16)] = placeholder[ramp((cse_var_1 + 9072), 1, 16)]
          data_pad_1[ramp(1104, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 9088), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1120, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 10736), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1136, 1, 16)] = placeholder[ramp((cse_var_1 + 10752), 1, 16)]
          data_pad_1[ramp(1152, 1, 16)] = placeholder[ramp((cse_var_1 + 10768), 1, 16)]
          data_pad_1[ramp(1168, 1, 16)] = placeholder[ramp((cse_var_1 + 10784), 1, 16)]
          data_pad_1[ramp(1184, 1, 16)] = placeholder[ramp((cse_var_1 + 10800), 1, 16)]
          data_pad_1[ramp(1200, 1, 16)] = placeholder[ramp((cse_var_1 + 10816), 1, 16)]
          data_pad_1[ramp(1216, 1, 16)] = placeholder[ramp((cse_var_1 + 10832), 1, 16)]
          data_pad_1[ramp(1232, 1, 16)] = placeholder[ramp((cse_var_1 + 10848), 1, 16)]
          data_pad_1[ramp(1248, 1, 16)] = placeholder[ramp((cse_var_1 + 10864), 1, 16)]
          data_pad_1[ramp(1264, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 10880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1280, 1, 16)] = @tir.if_then_else(cse_var_4, placeholder[ramp((cse_var_1 + 12528), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1296, 1, 16)] = placeholder[ramp((cse_var_1 + 12544), 1, 16)]
          data_pad_1[ramp(1312, 1, 16)] = placeholder[ramp((cse_var_1 + 12560), 1, 16)]
          data_pad_1[ramp(1328, 1, 16)] = placeholder[ramp((cse_var_1 + 12576), 1, 16)]
          data_pad_1[ramp(1344, 1, 16)] = placeholder[ramp((cse_var_1 + 12592), 1, 16)]
          data_pad_1[ramp(1360, 1, 16)] = placeholder[ramp((cse_var_1 + 12608), 1, 16)]
          data_pad_1[ramp(1376, 1, 16)] = placeholder[ramp((cse_var_1 + 12624), 1, 16)]
          data_pad_1[ramp(1392, 1, 16)] = placeholder[ramp((cse_var_1 + 12640), 1, 16)]
          data_pad_1[ramp(1408, 1, 16)] = placeholder[ramp((cse_var_1 + 12656), 1, 16)]
          data_pad_1[ramp(1424, 1, 16)] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_1 + 12672), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1440, 1, 16)] = @tir.if_then_else((cse_var_2 && cse_var_4), placeholder[ramp((cse_var_1 + 14320), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1456, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14336), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1472, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14352), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1488, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14368), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1504, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14384), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1520, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14400), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1536, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14416), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1552, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1568, 1, 16)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 14448), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          data_pad_1[ramp(1584, 1, 16)] = @tir.if_then_else((cse_var_2 && cse_var_5), placeholder[ramp((cse_var_1 + 14464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          for (oh.outer.inner: int32, 0, 8) {
            for (ic.inner: int32, 0, 16) {
              let cse_var_73: int32 = (oh.outer.inner*8)
              let cse_var_72: int32 = ((oh.outer.inner*160) + ic.inner)
              let cse_var_71: int32 = (cse_var_73 + 2)
              let cse_var_70: int32 = (cse_var_73 + 3)
              let cse_var_69: int32 = (cse_var_73 + 4)
              let cse_var_68: int32 = (cse_var_73 + 5)
              let cse_var_67: int32 = (cse_var_73 + 6)
              let cse_var_66: int32 = (cse_var_73 + 64)
              let cse_var_65: int32 = (cse_var_73 + 65)
              let cse_var_64: int32 = (cse_var_73 + 66)
              let cse_var_63: int32 = (cse_var_73 + 67)
              let cse_var_62: int32 = (cse_var_73 + 68)
              let cse_var_61: int32 = (cse_var_73 + 69)
              let cse_var_60: int32 = (cse_var_73 + 7)
              let cse_var_59: int32 = (cse_var_73 + 70)
              let cse_var_58: int32 = (cse_var_73 + 1)
              let cse_var_57: int32 = (cse_var_73 + 71)
              let cse_var_56: int32 = (cse_var_72 + 272)
              let cse_var_55: int32 = (cse_var_72 + 256)
              let cse_var_54: int32 = (cse_var_72 + 240)
              let cse_var_53: int32 = (cse_var_72 + 224)
              let cse_var_52: int32 = (cse_var_72 + 208)
              let cse_var_51: int32 = (cse_var_72 + 192)
              let cse_var_50: int32 = (cse_var_72 + 176)
              let cse_var_49: int32 = (cse_var_72 + 160)
              let cse_var_48: int32 = (cse_var_72 + 16)
              let cse_var_47: int32 = (cse_var_72 + 144)
              let cse_var_46: int32 = (cse_var_72 + 128)
              let cse_var_45: int32 = (cse_var_72 + 112)
              let cse_var_44: int32 = (cse_var_72 + 304)
              let cse_var_43: int32 = (cse_var_72 + 288)
              let cse_var_42: int32 = (cse_var_72 + 32)
              let cse_var_41: int32 = (cse_var_72 + 96)
              let cse_var_40: int32 = (cse_var_72 + 80)
              let cse_var_39: int32 = (cse_var_72 + 64)
              let cse_var_38: int32 = (cse_var_72 + 48)
              let cse_var_37: int32 = (cse_var_72 + 464)
              let cse_var_36: int32 = (cse_var_72 + 448)
              let cse_var_35: int32 = (cse_var_72 + 416)
              let cse_var_34: int32 = (cse_var_72 + 400)
              let cse_var_33: int32 = (cse_var_72 + 384)
              let cse_var_32: int32 = (cse_var_72 + 368)
              let cse_var_31: int32 = (cse_var_72 + 352)
              let cse_var_30: int32 = (cse_var_72 + 336)
              let cse_var_29: int32 = (cse_var_72 + 320)
              let cse_var_28: int32 = (cse_var_72 + 432)
              let cse_var_27: int32 = (((floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196), 98)*18432) + (ic.outer*2304)) + (ic.inner*16))
              let cse_var_26: int32 = (cse_var_27 + 1280)
              let cse_var_25: int32 = (cse_var_27 + 11008)
              let cse_var_24: int32 = (cse_var_27 + 1792)
              let cse_var_23: int32 = (cse_var_27 + 11264)
              let cse_var_22: int32 = (cse_var_27 + 10752)
              let cse_var_21: int32 = (cse_var_27 + 10496)
              let cse_var_20: int32 = (cse_var_27 + 10240)
              let cse_var_19: int32 = (cse_var_27 + 1536)
              let cse_var_18: int32 = (cse_var_27 + 2048)
              let cse_var_17: int32 = (cse_var_27 + 256)
              let cse_var_16: int32 = (cse_var_27 + 512)
              let cse_var_15: int32 = (cse_var_27 + 768)
              let cse_var_14: int32 = (cse_var_27 + 9216)
              let cse_var_13: int32 = (cse_var_27 + 9472)
              let cse_var_12: int32 = (cse_var_27 + 9728)
              let cse_var_11: int32 = (cse_var_27 + 1024)
              let cse_var_10: int32 = (cse_var_27 + 9984)
               {
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_72], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_27, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_72], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_26, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_36], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_36], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
                conv2d_NCHWc_1[cse_var_73] = (conv2d_NCHWc_1[cse_var_73] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_58] = (conv2d_NCHWc_1[cse_var_58] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_71] = (conv2d_NCHWc_1[cse_var_71] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_70] = (conv2d_NCHWc_1[cse_var_70] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_69] = (conv2d_NCHWc_1[cse_var_69] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_68] = (conv2d_NCHWc_1[cse_var_68] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_67] = (conv2d_NCHWc_1[cse_var_67] + (broadcast(data_pad_1[cse_var_36], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_60] = (conv2d_NCHWc_1[cse_var_60] + (broadcast(data_pad_1[cse_var_37], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
                conv2d_NCHWc_1[cse_var_66] = (conv2d_NCHWc_1[cse_var_66] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                conv2d_NCHWc_1[cse_var_65] = (conv2d_NCHWc_1[cse_var_65] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                conv2d_NCHWc_1[cse_var_64] = (conv2d_NCHWc_1[cse_var_64] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                conv2d_NCHWc_1[cse_var_63] = (conv2d_NCHWc_1[cse_var_63] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                conv2d_NCHWc_1[cse_var_62] = (conv2d_NCHWc_1[cse_var_62] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                conv2d_NCHWc_1[cse_var_61] = (conv2d_NCHWc_1[cse_var_61] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                conv2d_NCHWc_1[cse_var_59] = (conv2d_NCHWc_1[cse_var_59] + (broadcast(data_pad_1[cse_var_36], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
                conv2d_NCHWc_1[cse_var_57] = (conv2d_NCHWc_1[cse_var_57] + (broadcast(data_pad_1[cse_var_37], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 8) {
          for (ax3.inner: int32, 0, 8) {
            let cse_var_74: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196), 98)
            T_add[ramp((((((((cse_var_74*401408) + (ax1.inner*200704)) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 196)*100352)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 98), 14)*14336)) + (ax2.inner*1792)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*128)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[(((ax1.inner*64) + (ax2.inner*8)) + ax3.inner)] + placeholder_2[ramp(((cse_var_74*32) + (ax1.inner*16)), 1, 16)])
          }
        }
      }
    }
  }
}


==== Task 13: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_3 (weight 12 key: ["7fdb288a7abcc5486b29e05ffd83ed49", [1, 1, 28, 28, 128], [4, 1, 3, 3, 128, 32], [1, 4, 1, 1, 32], [1, 4, 28, 28, 32], [1, 4, 28, 28, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 28, 28, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 1, 3, 3, 128, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 4, 28, 28, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=2)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=14)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=32)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=32)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=2)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=7)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=2)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=14)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [100352], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [147456], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [128], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [100352], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [100352], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_6: placeholder_12: Buffer(placeholder_10, float32, [1, 4, 1, 1, 32], []), placeholder_4: placeholder_13: Buffer(placeholder_8, float32, [1, 1, 28, 28, 128], []), placeholder_7: placeholder_14: Buffer(placeholder_11, float32, [1, 4, 28, 28, 32], []), placeholder_5: placeholder_15: Buffer(placeholder_9, float32, [4, 1, 3, 3, 128, 32], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 28, 28, 32], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 392) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x32), float32x32, [8]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [768]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x32, [8], [])[0] = broadcast(0f32, 32)
      conv2d_NCHWc_1[1] = broadcast(0f32, 32)
      conv2d_NCHWc_1[2] = broadcast(0f32, 32)
      conv2d_NCHWc_1[3] = broadcast(0f32, 32)
      conv2d_NCHWc_1[4] = broadcast(0f32, 32)
      conv2d_NCHWc_1[5] = broadcast(0f32, 32)
      conv2d_NCHWc_1[6] = broadcast(0f32, 32)
      conv2d_NCHWc_1[7] = broadcast(0f32, 32)
      for (ic.outer: int32, 0, 4) {
        for (i2: int32, 0, 6) {
          for (i3: int32, 0, 4) {
            for (i4: int32, 0, 32) {
              let cse_var_4: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 14)
              let cse_var_3: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 98), 14)
              let cse_var_2: int32 = ((cse_var_4*2) + i3)
              let cse_var_1: int32 = ((cse_var_3*4) + i2)
              data_pad_1: Buffer(data_pad, float32, [768], [])[(((i2*128) + (i3*32)) + i4)] = @tir.if_then_else(((((1 <= cse_var_1) && (cse_var_1 < 29)) && (1 <= cse_var_2)) && (cse_var_2 < 29)), placeholder[(((((((cse_var_3*14336) + (i2*3584)) + (cse_var_4*256)) + (i3*128)) + (ic.outer*32)) + i4) - 3712)], 0f32, dtype=float32)
            }
          }
        }
        for (kh.outer: int32, 0, 3) {
          for (ic.inner: int32, 0, 32) {
            for (kw.inner: int32, 0, 3) {
              let cse_var_6: int32 = (((kh.outer*128) + (kw.inner*32)) + ic.inner)
              let cse_var_5: int32 = (((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 98)*36864) + (kh.outer*12288)) + (kw.inner*4096)) + (ic.outer*1024)) + (ic.inner*32))
               {
                conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_6], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[(cse_var_6 + 32)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[(cse_var_6 + 128)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[(cse_var_6 + 160)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[(cse_var_6 + 256)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[(cse_var_6 + 288)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[(cse_var_6 + 384)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[(cse_var_6 + 416)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
              }
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 4) {
        for (ax3.inner: int32, 0, 2) {
          let cse_var_7: int32 = ((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 14)*3584) + (ax2.inner*896)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 14)*64)) + (ax3.inner*32))
          T_add[ramp(cse_var_7, 1, 32)] = ((conv2d_NCHWc_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 98)*32), 1, 32)]) + placeholder_3[ramp(cse_var_7, 1, 32)])
        }
      }
    }
  }
}


==== Task 14: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_multiply_add (weight 1 key: ["6f6bf93d34c3200fd08fbf37a9c7eb3f", [1, 1, 7, 7, 512], [16, 1, 3, 3, 512, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32], [1, 16, 1, 1, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 7, 7, 512]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 1, 3, 3, 512, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 512), (oh + kh), (ow + kw), floormod(ic, 512)]*placeholder[oc_chunk, floordiv(ic, 512), kh, kw, floormod(ic, 512), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 7, 7, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_multiply(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4]*placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_multiply[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_multiply_ax0, T_multiply_ax1, T_multiply_ax2, T_multiply_ax3, T_multiply_ax4 = tuple(T_multiply.op.axis) + tuple(T_multiply.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_multiply].compute_inline()
s[T_add].compute_inline()
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=7)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=7)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=32)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax1_o, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax2_o, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax3_o, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax4_o, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
s[T_add].reorder(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_kh_o)
T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused = s[T_add].fuse(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o)
s[T_add].parallel(T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)


The best replacement found is:
@main = primfn(placeholder_6: handle, placeholder_7: handle, placeholder_8: handle, placeholder_9: handle, placeholder_10: handle, placeholder_11: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_12: Pointer(float32), float32, [25088], []),
             placeholder_1: Buffer(placeholder_13: Pointer(float32), float32, [2359296], []),
             placeholder_2: Buffer(placeholder_14: Pointer(float32), float32, [512], []),
             placeholder_3: Buffer(placeholder_15: Pointer(float32), float32, [25088], []),
             placeholder_4: Buffer(placeholder_16: Pointer(float32), float32, [512], []),
             placeholder_5: Buffer(placeholder_17: Pointer(float32), float32, [512], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [25088], [])}
  buffer_map = {placeholder_6: placeholder, placeholder_7: placeholder_1, placeholder_8: placeholder_2, placeholder_9: placeholder_3, placeholder_10: placeholder_4, placeholder_11: placeholder_5, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_8: placeholder_18: Buffer(placeholder_14, float32, [1, 16, 1, 1, 32], []), placeholder_7: placeholder_19: Buffer(placeholder_13, float32, [16, 1, 3, 3, 512, 32], []), placeholder_11: placeholder_20: Buffer(placeholder_17, float32, [1, 16, 1, 1, 32], []), placeholder_6: placeholder_21: Buffer(placeholder_12, float32, [1, 1, 7, 7, 512], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 7, 7, 32], []), placeholder_9: placeholder_22: Buffer(placeholder_15, float32, [1, 16, 7, 7, 32], []), placeholder_10: placeholder_23: Buffer(placeholder_16, float32, [1, 16, 1, 1, 32], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused: int32, 0, 16) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32), float32, [1568]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [5184]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32, [1568], [])[ramp(0, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(224, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(448, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(672, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(896, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1120, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1344, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(32, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(256, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(480, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(704, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(928, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1152, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1376, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(64, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(288, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(512, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(736, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(960, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1184, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1408, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(96, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(320, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(544, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(768, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(992, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1216, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1440, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(128, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(352, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(576, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(800, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1024, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1248, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1472, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(160, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(384, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(608, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(832, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1056, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1280, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1504, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(192, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(416, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(640, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(864, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1088, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1312, 1, 32)] = broadcast(0f32, 32)
      conv2d_NCHWc_1[ramp(1536, 1, 32)] = broadcast(0f32, 32)
      for (ic.outer: int32, 0, 8) {
        for (i2: int32, 0, 9) {
          let cse_var_3: int32 = (i2*576)
          let cse_var_2: int32 = ((i2*3584) + (ic.outer*64))
          let cse_var_1: bool = ((1 <= i2) && (i2 < 8))
           {
            data_pad_1: Buffer(data_pad, float32, [5184], [])[ramp(cse_var_3, 1, 64)] = broadcast(0f32, 64)
            data_pad_1[ramp((cse_var_3 + 64), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 3584), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 128), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 3072), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 192), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 2560), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 256), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 2048), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 320), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 1536), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 384), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 1024), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 448), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 512), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 512), 1, 64)] = broadcast(0f32, 64)
          }
        }
        for (kw.outer: int32, 0, 3) {
          for (ow.outer.inner: int32, 0, 7) {
            for (ic.inner: int32, 0, 64) {
              let cse_var_21: int32 = (ow.outer.inner*32)
              let cse_var_20: int32 = (cse_var_21 + 896)
              let cse_var_19: int32 = (cse_var_21 + 672)
              let cse_var_18: int32 = (cse_var_21 + 448)
              let cse_var_17: int32 = (cse_var_21 + 224)
              let cse_var_16: int32 = (cse_var_21 + 1344)
              let cse_var_15: int32 = (cse_var_21 + 1120)
              let cse_var_14: int32 = (((ow.outer.inner*64) + (kw.outer*64)) + ic.inner)
              let cse_var_13: int32 = (cse_var_14 + 1152)
              let cse_var_12: int32 = (cse_var_14 + 1728)
              let cse_var_11: int32 = (cse_var_14 + 2304)
              let cse_var_10: int32 = (cse_var_14 + 2880)
              let cse_var_9: int32 = (cse_var_14 + 3456)
              let cse_var_8: int32 = (cse_var_14 + 4032)
              let cse_var_7: int32 = (cse_var_14 + 576)
              let cse_var_6: int32 = ((((ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused*147456) + (kw.outer*16384)) + (ic.outer*2048)) + (ic.inner*32))
              let cse_var_5: int32 = (cse_var_6 + 49152)
              let cse_var_4: int32 = (cse_var_6 + 98304)
               {
                conv2d_NCHWc_1[ramp(cse_var_21, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_21, 1, 32)] + (broadcast(data_pad_1[cse_var_14], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_17, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_17, 1, 32)] + (broadcast(data_pad_1[cse_var_7], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_18, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_18, 1, 32)] + (broadcast(data_pad_1[cse_var_13], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_19, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_19, 1, 32)] + (broadcast(data_pad_1[cse_var_12], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_20, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_20, 1, 32)] + (broadcast(data_pad_1[cse_var_11], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_15, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_15, 1, 32)] + (broadcast(data_pad_1[cse_var_10], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_16, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_16, 1, 32)] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_21, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_21, 1, 32)] + (broadcast(data_pad_1[cse_var_7], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_17, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_17, 1, 32)] + (broadcast(data_pad_1[cse_var_13], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_18, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_18, 1, 32)] + (broadcast(data_pad_1[cse_var_12], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_19, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_19, 1, 32)] + (broadcast(data_pad_1[cse_var_11], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_20, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_20, 1, 32)] + (broadcast(data_pad_1[cse_var_10], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_15, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_15, 1, 32)] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_16, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_16, 1, 32)] + (broadcast(data_pad_1[cse_var_8], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_21, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_21, 1, 32)] + (broadcast(data_pad_1[cse_var_13], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_17, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_17, 1, 32)] + (broadcast(data_pad_1[cse_var_12], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_18, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_18, 1, 32)] + (broadcast(data_pad_1[cse_var_11], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_19, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_19, 1, 32)] + (broadcast(data_pad_1[cse_var_10], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_20, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_20, 1, 32)] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_15, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_15, 1, 32)] + (broadcast(data_pad_1[cse_var_8], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[ramp(cse_var_16, 1, 32)] = (conv2d_NCHWc_1[ramp(cse_var_16, 1, 32)] + (broadcast(data_pad_1[(cse_var_14 + 4608)], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
              }
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 7) {
        for (ax3.inner: int32, 0, 7) {
          for (ax4.inner: int32, 0, 32) {
            let cse_var_25: int32 = (ax2.inner*224)
            let cse_var_24: int32 = (ax3.inner*32)
            let cse_var_23: int32 = ((ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused*32) + ax4.inner)
            let cse_var_22: int32 = ((((ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused*1568) + cse_var_25) + cse_var_24) + ax4.inner)
            T_add[cse_var_22] = ((((conv2d_NCHWc_1[((cse_var_25 + cse_var_24) + ax4.inner)] + placeholder_2[cse_var_23]) + placeholder_3[cse_var_22])*placeholder_4[cse_var_23]) + placeholder_5[cse_var_23])
          }
        }
      }
    }
  }
}


==== Task 15: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_9 (weight 29 key: ["ebcfabdea1e272d9e71864aa40034c6c", [1, 2, 14, 14, 128], [16, 2, 3, 3, 128, 16], [1, 16, 1, 1, 16], [1, 16, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 14, 14, 128]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 2, 3, 3, 128, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 128), (oh + kh), (ow + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=2)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=7)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=7)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=2)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=1)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=7)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[T_add], T_add_ax0_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [50176], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [589824], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [256], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [50176], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 14, 14, 128], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [16, 2, 3, 3, 128, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 16, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 14, 14, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused: int32, 0, 16) "parallel" {
    allocate(data_pad: Pointer(global float32), float32, [20736]), storage_scope = global;
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      for (i1: int32, 0, 2) {
        for (i2: int32, 0, 9) {
          for (i3: int32, 0, 9) {
            for (i4: int32, 0, 128) {
              let cse_var_5: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 2)
              let cse_var_4: int32 = floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 4), 2)
              let cse_var_3: int32 = (i3*128)
              let cse_var_2: int32 = ((cse_var_5*7) + i3)
              let cse_var_1: int32 = ((cse_var_4*7) + i2)
              data_pad_1: Buffer(data_pad, float32, [20736], [])[((((i1*10368) + (i2*1152)) + cse_var_3) + i4)] = @tir.if_then_else(((((1 <= cse_var_1) && (cse_var_1 < 15)) && (1 <= cse_var_2)) && (cse_var_2 < 15)), placeholder[(((((((i1*25088) + (cse_var_4*12544)) + (i2*1792)) + (cse_var_5*896)) + cse_var_3) + i4) - 1920)], 0f32, dtype=float32)
            }
          }
        }
      }
      for (ax1.outer.inner: int32, 0, 2) {
        for (ax3.outer.inner: int32, 0, 7) {
          conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
          conv2d_NCHWc_1[1] = broadcast(0f32, 16)
          conv2d_NCHWc_1[2] = broadcast(0f32, 16)
          conv2d_NCHWc_1[3] = broadcast(0f32, 16)
          conv2d_NCHWc_1[4] = broadcast(0f32, 16)
          conv2d_NCHWc_1[5] = broadcast(0f32, 16)
          conv2d_NCHWc_1[6] = broadcast(0f32, 16)
          conv2d_NCHWc_1[7] = broadcast(0f32, 16)
          conv2d_NCHWc_1[8] = broadcast(0f32, 16)
          conv2d_NCHWc_1[9] = broadcast(0f32, 16)
          conv2d_NCHWc_1[10] = broadcast(0f32, 16)
          conv2d_NCHWc_1[11] = broadcast(0f32, 16)
          conv2d_NCHWc_1[12] = broadcast(0f32, 16)
          conv2d_NCHWc_1[13] = broadcast(0f32, 16)
          for (ic.outer: int32, 0, 4) {
            for (kw.outer: int32, 0, 3) {
              for (ic.inner: int32, 0, 64) {
                let cse_var_22: int32 = floordiv(ic.outer, 2)
                let cse_var_21: int32 = floormod(ic.outer, 2)
                let cse_var_20: int32 = (((((cse_var_22*10368) + (ax3.outer.inner*128)) + (kw.outer*128)) + (cse_var_21*64)) + ic.inner)
                let cse_var_19: int32 = (cse_var_20 + 9216)
                let cse_var_18: int32 = (cse_var_20 + 8064)
                let cse_var_17: int32 = (cse_var_20 + 6912)
                let cse_var_16: int32 = (cse_var_20 + 5760)
                let cse_var_15: int32 = (cse_var_20 + 4608)
                let cse_var_14: int32 = (cse_var_20 + 3456)
                let cse_var_13: int32 = (cse_var_20 + 2304)
                let cse_var_12: int32 = (cse_var_20 + 1152)
                let cse_var_11: int32 = ((((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 4)*147456) + (ax1.outer.inner*73728)) + (cse_var_22*18432)) + (kw.outer*2048)) + (cse_var_21*1024)) + (ic.inner*16))
                let cse_var_10: int32 = (cse_var_11 + 6144)
                let cse_var_9: int32 = (cse_var_11 + 49152)
                let cse_var_8: int32 = (cse_var_11 + 43008)
                let cse_var_7: int32 = (cse_var_11 + 36864)
                let cse_var_6: int32 = (cse_var_11 + 12288)
                 {
                  conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
                  conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
                  conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
                  conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
                  conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
                  conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                  conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
                }
              }
            }
          }
          for (ax1.inner: int32, 0, 2) {
            for (ax2.inner: int32, 0, 7) {
              let cse_var_23: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 4)
              T_add[ramp((((((((cse_var_23*12544) + (ax1.outer.inner*6272)) + (ax1.inner*3136)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 4), 2)*1568)) + (ax2.inner*224)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 2)*112)) + (ax3.outer.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax1.inner*7) + ax2.inner)] + placeholder_2[ramp((((cse_var_23*64) + (ax1.outer.inner*32)) + (ax1.inner*16)), 1, 16)])
            }
          }
        }
      }
    }
  }
}


==== Task 16: vm_mod_fused_nn_contrib_conv2d_NCHWc_add (weight 1 key: ["1953b61638ee4fe45fc00b30d2cb05f0", [1, 1, 112, 112, 3], [4, 1, 3, 3, 3, 16], [1, 4, 1, 1, 16], [1, 4, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 1, 112, 112, 3]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [4, 1, 3, 3, 3, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 3), (oh + kh), (ow + kw), floormod(ic, 3)]*placeholder[oc_chunk, floordiv(ic, 3), kh, kw, floormod(ic, 3), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=4)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=7)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=56)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=1)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax1_o, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=4)
T_add_ax2_o, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax3_o, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=56)
T_add_ax4_o, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
s[T_add].reorder(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_n_o_o_i)
T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused = s[T_add].fuse(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o)
s[T_add].parallel(T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [37632], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [1728], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [64], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [802816], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 1, 112, 112, 3], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [4, 1, 3, 3, 3, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 4, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 112, 112, 16], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused: int32, 0, 32) "parallel" {
    allocate(data_pad: Pointer(global float32), float32, [1566]), storage_scope = global;
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [1568]), storage_scope = global {
      for (i2: int32, 0, 9) {
        let cse_var_6: int32 = floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)
        let cse_var_5: int32 = ((cse_var_6*7) + i2)
        let cse_var_4: int32 = floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)
        let cse_var_3: int32 = (i2*174)
        let cse_var_2: int32 = (((cse_var_6*2352) + (i2*336)) + (cse_var_4*168))
        let cse_var_1: bool = ((1 <= cse_var_5) && (cse_var_5 < 113))
         {
          data_pad_1: Buffer(data_pad, float32, [1566], [])[ramp(cse_var_3, 1, 3)] = @tir.if_then_else((cse_var_1 && (1 <= cse_var_4)), placeholder[ramp((cse_var_2 - 339), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 3), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 336), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 6), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 333), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 9), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 330), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 12), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 327), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 15), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 324), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 18), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 321), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 21), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 318), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 24), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 315), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 27), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 312), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 30), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 309), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 33), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 306), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 36), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 303), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 39), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 300), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 42), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 297), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 45), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 294), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 48), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 291), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 51), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 288), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 54), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 285), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 57), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 282), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 60), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 279), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 63), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 276), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 66), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 273), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 69), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 270), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 72), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 267), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 75), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 264), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 78), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 261), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 81), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 258), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 84), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 255), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 87), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 252), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 90), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 249), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 93), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 246), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 96), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 243), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 99), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 240), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 102), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 237), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 105), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 234), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 108), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 231), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 111), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 228), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 114), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 225), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 117), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 222), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 120), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 219), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 123), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 216), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 126), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 213), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 129), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 210), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 132), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 207), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 135), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 204), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 138), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 201), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 141), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 198), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 144), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 195), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 147), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 192), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 150), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 189), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 153), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 186), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 156), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 183), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 159), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 180), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 162), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 177), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 165), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 174), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 168), 1, 3)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 171), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
          data_pad_1[ramp((cse_var_3 + 171), 1, 3)] = @tir.if_then_else((cse_var_1 && (cse_var_4 < 1)), placeholder[ramp((cse_var_2 - 168), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
        }
      }
      for (oc_chunk.outer.outer.inner: int32, 0, 4) {
        for (ow.outer.outer.inner: int32, 0, 56) {
          let cse_var_104: int32 = (ow.outer.outer.inner*3)
          let cse_var_103: int32 = (oc_chunk.outer.outer.inner*432)
          let cse_var_102: int32 = (cse_var_103 + 96)
          let cse_var_101: int32 = (cse_var_104 + 1044)
          let cse_var_100: int32 = (cse_var_104 + 1045)
          let cse_var_99: int32 = (cse_var_104 + 1046)
          let cse_var_98: int32 = (cse_var_104 + 1047)
          let cse_var_97: int32 = (cse_var_104 + 1048)
          let cse_var_96: int32 = (cse_var_104 + 1049)
          let cse_var_95: int32 = (cse_var_104 + 1050)
          let cse_var_94: int32 = (cse_var_104 + 1051)
          let cse_var_93: int32 = (cse_var_104 + 1052)
          let cse_var_92: int32 = (cse_var_104 + 1218)
          let cse_var_91: int32 = (cse_var_104 + 1219)
          let cse_var_90: int32 = (cse_var_104 + 1220)
          let cse_var_89: int32 = (cse_var_104 + 1221)
          let cse_var_88: int32 = (cse_var_104 + 1222)
          let cse_var_87: int32 = (cse_var_104 + 1223)
          let cse_var_86: int32 = (cse_var_104 + 1224)
          let cse_var_85: int32 = (cse_var_104 + 1225)
          let cse_var_84: int32 = (cse_var_104 + 1226)
          let cse_var_83: int32 = ((oc_chunk.outer.outer.inner*392) + ow.outer.outer.inner)
          let cse_var_82: int32 = (cse_var_103 + 112)
          let cse_var_81: int32 = (cse_var_103 + 128)
          let cse_var_80: int32 = (cse_var_103 + 144)
          let cse_var_79: int32 = (cse_var_103 + 16)
          let cse_var_78: int32 = (cse_var_103 + 160)
          let cse_var_77: int32 = (cse_var_103 + 176)
          let cse_var_76: int32 = (cse_var_103 + 192)
          let cse_var_75: int32 = (cse_var_103 + 208)
          let cse_var_74: int32 = (cse_var_103 + 224)
          let cse_var_73: int32 = (cse_var_103 + 240)
          let cse_var_72: int32 = (cse_var_103 + 256)
          let cse_var_71: int32 = (cse_var_103 + 288)
          let cse_var_70: int32 = (cse_var_103 + 304)
          let cse_var_69: int32 = (cse_var_103 + 32)
          let cse_var_68: int32 = (cse_var_103 + 320)
          let cse_var_67: int32 = (cse_var_103 + 336)
          let cse_var_66: int32 = (cse_var_103 + 352)
          let cse_var_65: int32 = (cse_var_103 + 368)
          let cse_var_64: int32 = (cse_var_103 + 384)
          let cse_var_63: int32 = (cse_var_103 + 400)
          let cse_var_62: int32 = (cse_var_103 + 416)
          let cse_var_61: int32 = (cse_var_103 + 48)
          let cse_var_60: int32 = (cse_var_103 + 64)
          let cse_var_59: int32 = (cse_var_103 + 80)
          let cse_var_58: int32 = (cse_var_103 + 272)
          let cse_var_57: int32 = (cse_var_104 + 526)
          let cse_var_56: int32 = (cse_var_104 + 527)
          let cse_var_55: int32 = (cse_var_104 + 528)
          let cse_var_54: int32 = (cse_var_104 + 529)
          let cse_var_53: int32 = (cse_var_104 + 530)
          let cse_var_52: int32 = (cse_var_104 + 696)
          let cse_var_51: int32 = (cse_var_104 + 697)
          let cse_var_50: int32 = (cse_var_104 + 698)
          let cse_var_49: int32 = (cse_var_104 + 699)
          let cse_var_48: int32 = (cse_var_104 + 700)
          let cse_var_47: int32 = (cse_var_104 + 525)
          let cse_var_46: int32 = (cse_var_104 + 702)
          let cse_var_45: int32 = (cse_var_104 + 703)
          let cse_var_44: int32 = (cse_var_104 + 704)
          let cse_var_43: int32 = (cse_var_104 + 870)
          let cse_var_42: int32 = (cse_var_104 + 871)
          let cse_var_41: int32 = (cse_var_104 + 872)
          let cse_var_40: int32 = (cse_var_104 + 873)
          let cse_var_39: int32 = (cse_var_104 + 874)
          let cse_var_38: int32 = (cse_var_104 + 875)
          let cse_var_37: int32 = (cse_var_104 + 876)
          let cse_var_36: int32 = (cse_var_104 + 877)
          let cse_var_35: int32 = (cse_var_104 + 878)
          let cse_var_34: int32 = (cse_var_104 + 701)
          let cse_var_33: int32 = (cse_var_104 + 174)
          let cse_var_32: int32 = (cse_var_104 + 175)
          let cse_var_31: int32 = (cse_var_104 + 176)
          let cse_var_30: int32 = (cse_var_104 + 177)
          let cse_var_29: int32 = (cse_var_104 + 178)
          let cse_var_28: int32 = (cse_var_104 + 179)
          let cse_var_27: int32 = (cse_var_104 + 180)
          let cse_var_26: int32 = (cse_var_104 + 181)
          let cse_var_25: int32 = (cse_var_104 + 182)
          let cse_var_24: int32 = (cse_var_104 + 348)
          let cse_var_23: int32 = (cse_var_104 + 523)
          let cse_var_22: int32 = (cse_var_104 + 522)
          let cse_var_21: int32 = (cse_var_104 + 356)
          let cse_var_20: int32 = (cse_var_104 + 355)
          let cse_var_19: int32 = (cse_var_104 + 354)
          let cse_var_18: int32 = (cse_var_104 + 353)
          let cse_var_17: int32 = (cse_var_104 + 352)
          let cse_var_16: int32 = (cse_var_104 + 351)
          let cse_var_15: int32 = (cse_var_104 + 350)
          let cse_var_14: int32 = (cse_var_104 + 524)
          let cse_var_13: int32 = (cse_var_104 + 349)
          let cse_var_12: int32 = (cse_var_83 + 112)
          let cse_var_11: int32 = (cse_var_83 + 56)
          let cse_var_10: int32 = (cse_var_83 + 336)
          let cse_var_9: int32 = (cse_var_83 + 280)
          let cse_var_8: int32 = (cse_var_83 + 224)
          let cse_var_7: int32 = (cse_var_83 + 168)
           {
            conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [1568], [])[cse_var_83] = broadcast(0f32, 16)
            conv2d_NCHWc_1[cse_var_11] = broadcast(0f32, 16)
            conv2d_NCHWc_1[cse_var_12] = broadcast(0f32, 16)
            conv2d_NCHWc_1[cse_var_7] = broadcast(0f32, 16)
            conv2d_NCHWc_1[cse_var_8] = broadcast(0f32, 16)
            conv2d_NCHWc_1[cse_var_9] = broadcast(0f32, 16)
            conv2d_NCHWc_1[cse_var_10] = broadcast(0f32, 16)
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_104], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_101], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_33], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_101], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_92], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_24], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_22], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_52], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_43], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_101], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_92], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1392)], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 3)], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_98], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_30], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_98], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_89], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_16], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_47], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_49], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_40], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_98], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_89], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1395)], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 6)], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_37], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_95], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_27], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_37], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_95], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_86], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_19], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_55], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_46], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_37], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_95], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_86], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1398)], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 1)], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_100], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_32], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_100], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_91], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_23], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_51], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_42], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_100], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_91], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1393)], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 4)], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_57], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_97], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_29], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_57], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_97], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_88], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_17], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_57], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_48], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_39], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_97], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_88], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1396)], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 7)], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_36], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_94], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_26], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_36], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_94], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_85], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_20], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_54], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_45], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_36], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_94], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_85], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1399)], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 2)], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_99], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_31], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_99], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_90], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_50], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_41], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_99], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_90], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1394)], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 5)], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_96], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_28], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_96], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_87], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_18], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_56], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_34], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_38], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_96], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_87], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1397)], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[(cse_var_104 + 8)], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_93], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_25], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_93], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[cse_var_84], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
            conv2d_NCHWc_1[cse_var_83] = (conv2d_NCHWc_1[cse_var_83] + (broadcast(data_pad_1[cse_var_21], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
            conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[cse_var_53], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
            conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[cse_var_44], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
            conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[cse_var_35], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
            conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[cse_var_93], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
            conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[cse_var_84], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
            conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_104 + 1400)], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 4) {
        for (ax2.inner: int32, 0, 7) {
          for (ax3.inner: int32, 0, 56) {
            T_add[ramp((((((ax1.inner*200704) + (floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)*12544)) + (ax2.inner*1792)) + (floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)*896)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[(((ax1.inner*392) + (ax2.inner*56)) + ax3.inner)] + placeholder_2[ramp((ax1.inner*16), 1, 16)])
          }
        }
      }
    }
  }
}


==== Task 17: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_7 (weight 1 key: ["1f841d7d69840d3527fec3b966858d88", [1, 1, 7, 7, 512], [16, 1, 3, 3, 512, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 7, 7, 512]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 1, 3, 3, 512, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 512), (oh + kh), (ow + kw), floormod(ic, 512)]*placeholder[oc_chunk, floordiv(ic, 512), kh, kw, floormod(ic, 512), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 16, 7, 7, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=7)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=32)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax1_o, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax2_o, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax3_o, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax4_o, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
s[T_add].reorder(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused = s[T_add].fuse(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o)
s[T_add].parallel(T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [25088], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [2359296], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [512], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [25088], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [25088], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_6: placeholder_12: Buffer(placeholder_10, float32, [1, 16, 1, 1, 32], []), placeholder_5: placeholder_13: Buffer(placeholder_9, float32, [16, 1, 3, 3, 512, 32], []), placeholder_4: placeholder_14: Buffer(placeholder_8, float32, [1, 1, 7, 7, 512], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 7, 7, 32], []), placeholder_7: placeholder_15: Buffer(placeholder_11, float32, [1, 16, 7, 7, 32], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused: int32, 0, 16) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x32), float32x32, [49]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [5184]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x32, [49], [])[0] = broadcast(0f32, 32)
      conv2d_NCHWc_1[1] = broadcast(0f32, 32)
      conv2d_NCHWc_1[2] = broadcast(0f32, 32)
      conv2d_NCHWc_1[3] = broadcast(0f32, 32)
      conv2d_NCHWc_1[4] = broadcast(0f32, 32)
      conv2d_NCHWc_1[5] = broadcast(0f32, 32)
      conv2d_NCHWc_1[6] = broadcast(0f32, 32)
      conv2d_NCHWc_1[7] = broadcast(0f32, 32)
      conv2d_NCHWc_1[8] = broadcast(0f32, 32)
      conv2d_NCHWc_1[9] = broadcast(0f32, 32)
      conv2d_NCHWc_1[10] = broadcast(0f32, 32)
      conv2d_NCHWc_1[11] = broadcast(0f32, 32)
      conv2d_NCHWc_1[12] = broadcast(0f32, 32)
      conv2d_NCHWc_1[13] = broadcast(0f32, 32)
      conv2d_NCHWc_1[14] = broadcast(0f32, 32)
      conv2d_NCHWc_1[15] = broadcast(0f32, 32)
      conv2d_NCHWc_1[16] = broadcast(0f32, 32)
      conv2d_NCHWc_1[17] = broadcast(0f32, 32)
      conv2d_NCHWc_1[18] = broadcast(0f32, 32)
      conv2d_NCHWc_1[19] = broadcast(0f32, 32)
      conv2d_NCHWc_1[20] = broadcast(0f32, 32)
      conv2d_NCHWc_1[21] = broadcast(0f32, 32)
      conv2d_NCHWc_1[22] = broadcast(0f32, 32)
      conv2d_NCHWc_1[23] = broadcast(0f32, 32)
      conv2d_NCHWc_1[24] = broadcast(0f32, 32)
      conv2d_NCHWc_1[25] = broadcast(0f32, 32)
      conv2d_NCHWc_1[26] = broadcast(0f32, 32)
      conv2d_NCHWc_1[27] = broadcast(0f32, 32)
      conv2d_NCHWc_1[28] = broadcast(0f32, 32)
      conv2d_NCHWc_1[29] = broadcast(0f32, 32)
      conv2d_NCHWc_1[30] = broadcast(0f32, 32)
      conv2d_NCHWc_1[31] = broadcast(0f32, 32)
      conv2d_NCHWc_1[32] = broadcast(0f32, 32)
      conv2d_NCHWc_1[33] = broadcast(0f32, 32)
      conv2d_NCHWc_1[34] = broadcast(0f32, 32)
      conv2d_NCHWc_1[35] = broadcast(0f32, 32)
      conv2d_NCHWc_1[36] = broadcast(0f32, 32)
      conv2d_NCHWc_1[37] = broadcast(0f32, 32)
      conv2d_NCHWc_1[38] = broadcast(0f32, 32)
      conv2d_NCHWc_1[39] = broadcast(0f32, 32)
      conv2d_NCHWc_1[40] = broadcast(0f32, 32)
      conv2d_NCHWc_1[41] = broadcast(0f32, 32)
      conv2d_NCHWc_1[42] = broadcast(0f32, 32)
      conv2d_NCHWc_1[43] = broadcast(0f32, 32)
      conv2d_NCHWc_1[44] = broadcast(0f32, 32)
      conv2d_NCHWc_1[45] = broadcast(0f32, 32)
      conv2d_NCHWc_1[46] = broadcast(0f32, 32)
      conv2d_NCHWc_1[47] = broadcast(0f32, 32)
      conv2d_NCHWc_1[48] = broadcast(0f32, 32)
      for (ic.outer: int32, 0, 8) {
        for (i2: int32, 0, 9) {
          let cse_var_3: int32 = (i2*576)
          let cse_var_2: int32 = ((i2*3584) + (ic.outer*64))
          let cse_var_1: bool = ((1 <= i2) && (i2 < 8))
           {
            data_pad_1: Buffer(data_pad, float32, [5184], [])[ramp(cse_var_3, 1, 64)] = broadcast(0f32, 64)
            data_pad_1[ramp((cse_var_3 + 64), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 3584), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 128), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 3072), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 192), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 2560), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 256), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 2048), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 320), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 1536), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 384), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 1024), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 448), 1, 64)] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_2 - 512), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_3 + 512), 1, 64)] = broadcast(0f32, 64)
          }
        }
        for (kh.outer: int32, 0, 3) {
          for (oh.outer.inner: int32, 0, 7) {
            for (ic.inner: int32, 0, 64) {
              let cse_var_21: int32 = (oh.outer.inner*7)
              let cse_var_20: int32 = (cse_var_21 + 6)
              let cse_var_19: int32 = (cse_var_21 + 5)
              let cse_var_18: int32 = (cse_var_21 + 4)
              let cse_var_17: int32 = (cse_var_21 + 3)
              let cse_var_16: int32 = (cse_var_21 + 2)
              let cse_var_15: int32 = (cse_var_21 + 1)
              let cse_var_14: int32 = (((oh.outer.inner*576) + (kh.outer*576)) + ic.inner)
              let cse_var_13: int32 = (cse_var_14 + 128)
              let cse_var_12: int32 = (cse_var_14 + 192)
              let cse_var_11: int32 = (cse_var_14 + 256)
              let cse_var_10: int32 = (cse_var_14 + 320)
              let cse_var_9: int32 = (cse_var_14 + 384)
              let cse_var_8: int32 = (cse_var_14 + 448)
              let cse_var_7: int32 = (cse_var_14 + 64)
              let cse_var_6: int32 = ((((ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused*147456) + (kh.outer*49152)) + (ic.outer*2048)) + (ic.inner*32))
              let cse_var_5: int32 = (cse_var_6 + 16384)
              let cse_var_4: int32 = (cse_var_6 + 32768)
               {
                conv2d_NCHWc_1[cse_var_21] = (conv2d_NCHWc_1[cse_var_21] + (broadcast(data_pad_1[cse_var_14], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[cse_var_15] = (conv2d_NCHWc_1[cse_var_15] + (broadcast(data_pad_1[cse_var_7], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[cse_var_16] = (conv2d_NCHWc_1[cse_var_16] + (broadcast(data_pad_1[cse_var_13], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[cse_var_17] = (conv2d_NCHWc_1[cse_var_17] + (broadcast(data_pad_1[cse_var_12], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[cse_var_18] = (conv2d_NCHWc_1[cse_var_18] + (broadcast(data_pad_1[cse_var_11], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[cse_var_19] = (conv2d_NCHWc_1[cse_var_19] + (broadcast(data_pad_1[cse_var_10], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[cse_var_20] = (conv2d_NCHWc_1[cse_var_20] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_6, 1, 32)]))
                conv2d_NCHWc_1[cse_var_21] = (conv2d_NCHWc_1[cse_var_21] + (broadcast(data_pad_1[cse_var_7], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[cse_var_15] = (conv2d_NCHWc_1[cse_var_15] + (broadcast(data_pad_1[cse_var_13], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[cse_var_16] = (conv2d_NCHWc_1[cse_var_16] + (broadcast(data_pad_1[cse_var_12], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[cse_var_17] = (conv2d_NCHWc_1[cse_var_17] + (broadcast(data_pad_1[cse_var_11], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[cse_var_18] = (conv2d_NCHWc_1[cse_var_18] + (broadcast(data_pad_1[cse_var_10], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[cse_var_19] = (conv2d_NCHWc_1[cse_var_19] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[cse_var_20] = (conv2d_NCHWc_1[cse_var_20] + (broadcast(data_pad_1[cse_var_8], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                conv2d_NCHWc_1[cse_var_21] = (conv2d_NCHWc_1[cse_var_21] + (broadcast(data_pad_1[cse_var_13], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[cse_var_15] = (conv2d_NCHWc_1[cse_var_15] + (broadcast(data_pad_1[cse_var_12], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[cse_var_16] = (conv2d_NCHWc_1[cse_var_16] + (broadcast(data_pad_1[cse_var_11], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[cse_var_17] = (conv2d_NCHWc_1[cse_var_17] + (broadcast(data_pad_1[cse_var_10], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[cse_var_18] = (conv2d_NCHWc_1[cse_var_18] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[cse_var_19] = (conv2d_NCHWc_1[cse_var_19] + (broadcast(data_pad_1[cse_var_8], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
                conv2d_NCHWc_1[cse_var_20] = (conv2d_NCHWc_1[cse_var_20] + (broadcast(data_pad_1[(cse_var_14 + 512)], 32)*placeholder_1[ramp(cse_var_4, 1, 32)]))
              }
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 7) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_22: int32 = (((ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused*1568) + (ax2.inner*224)) + (ax3.inner*32))
          T_add[ramp(cse_var_22, 1, 32)] = ((conv2d_NCHWc_1[((ax2.inner*7) + ax3.inner)] + placeholder_2[ramp((ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused*32), 1, 32)]) + placeholder_3[ramp(cse_var_22, 1, 32)])
        }
      }
    }
  }
}


==== Task 18: vm_mod_fused_nn_dense_add (weight 1 key: ["7d44c6e3c81cd80f61ff2265b2bae89a", [1, 25088], [512, 25088], [1, 512], [1, 512]]) =====
placeholder = PLACEHOLDER [1, 25088]
placeholder = PLACEHOLDER [512, 25088]
T_matmul_NT(i, j) += (placeholder[i, k]*placeholder[j, k])
placeholder = PLACEHOLDER [1, 512]
T_add(ax0, ax1) = (T_matmul_NT[ax0, ax1] + placeholder[ax0, ax1])


Trace for this task is: 
T_matmul_NT_i, T_matmul_NT_j, T_matmul_NT_k = tuple(T_matmul_NT.op.axis) + tuple(T_matmul_NT.op.reduce_axis)
T_add_ax0, T_add_ax1 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_matmul_NT_i_o_i, T_matmul_NT_i_i = s[T_matmul_NT].split(T_matmul_NT_i, factor=1)
T_matmul_NT_i_o_o_i, T_matmul_NT_i_o_i = s[T_matmul_NT].split(T_matmul_NT_i_o_i, factor=1)
T_matmul_NT_i_o_o_o, T_matmul_NT_i_o_o_i = s[T_matmul_NT].split(T_matmul_NT_i_o_o_i, factor=1)
T_matmul_NT_j_o_i, T_matmul_NT_j_i = s[T_matmul_NT].split(T_matmul_NT_j, factor=32)
T_matmul_NT_j_o_o_i, T_matmul_NT_j_o_i = s[T_matmul_NT].split(T_matmul_NT_j_o_i, factor=1)
T_matmul_NT_j_o_o_o, T_matmul_NT_j_o_o_i = s[T_matmul_NT].split(T_matmul_NT_j_o_o_i, factor=1)
T_matmul_NT_k_o, T_matmul_NT_k_i = s[T_matmul_NT].split(T_matmul_NT_k, factor=64)
s[T_matmul_NT].reorder(T_matmul_NT_i_o_o_o, T_matmul_NT_j_o_o_o, T_matmul_NT_i_o_o_i, T_matmul_NT_j_o_o_i, T_matmul_NT_k_o, T_matmul_NT_i_o_i, T_matmul_NT_j_o_i, T_matmul_NT_k_i, T_matmul_NT_i_i, T_matmul_NT_j_i)
T_add_ax0_o, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax1_o, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=32)
s[T_add].reorder(T_add_ax0_o, T_add_ax1_o, T_add_ax0_i, T_add_ax1_i)
s[T_matmul_NT].compute_at(s[T_add], T_add_ax1_o)
T_add_ax0_o_ax1_o_fused = s[T_add].fuse(T_add_ax0_o, T_add_ax1_o)
s[T_add].parallel(T_add_ax0_o_ax1_o_fused)
s[T_matmul_NT].pragma(T_matmul_NT_i_o_o_o, "auto_unroll_max_step", 0)
s[T_matmul_NT].pragma(T_matmul_NT_i_o_o_o, "unroll_explicit", True)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [25088], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [12845056], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [512], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [512], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 25088], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [16, 1, 1, 392, 1, 64, 32], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 512], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 512], [])} {
  for (ax0.outer.ax1.outer.fused: int32, 0, 16) "parallel" {
    allocate(T_matmul_NT: Pointer(global float32), float32, [32]), storage_scope = global {
      for (j.inner.init: int32, 0, 32) {
        T_matmul_NT_1: Buffer(T_matmul_NT, float32, [32], [])[j.inner.init] = 0f32
      }
      for (k.outer: int32, 0, 392) {
        for (k.inner: int32, 0, 64) {
          for (j.inner: int32, 0, 32) {
            T_matmul_NT_1[j.inner] = (T_matmul_NT_1[j.inner] + (placeholder[((k.outer*64) + k.inner)]*placeholder_1[((((ax0.outer.ax1.outer.fused*802816) + (k.outer*2048)) + (k.inner*32)) + j.inner)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 32) {
        let cse_var_1: int32 = ((ax0.outer.ax1.outer.fused*32) + ax1.inner)
        T_add[cse_var_1] = (T_matmul_NT_1[ax1.inner] + placeholder_2[cse_var_1])
      }
    }
  }
}


==== Task 19: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_11 (weight 1 key: ["773c41006e47e5d7f5dcf5a882434619", [1, 2, 14, 14, 128], [16, 2, 1, 1, 128, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 2, 14, 14, 128]
placeholder = PLACEHOLDER [16, 2, 1, 1, 128, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 128), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 128)]*placeholder[oc_chunk, floordiv(ic, 128), kh, kw, floormod(ic, 128), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=2)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=7)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=7)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=2)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=8)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=2)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=1)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=7)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [50176], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [131072], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [512], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [25088], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 14, 14, 128], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [16, 2, 1, 1, 128, 32], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 16, 1, 1, 32], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 7, 7, 32], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 112) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32), float32, [224]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32, [224], [])[ramp(0, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(16, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(32, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(48, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(64, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(80, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(96, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(112, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(128, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(144, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(160, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(176, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(192, 1, 16)] = broadcast(0f32, 16)
      conv2d_NCHWc_1[ramp(208, 1, 16)] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 32) {
        let cse_var_72: int32 = ((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)*8192) + (ic.outer*256))
        let cse_var_71: int32 = (cse_var_72 + 112)
        let cse_var_70: int32 = (cse_var_72 + 128)
        let cse_var_69: int32 = (cse_var_72 + 16)
        let cse_var_68: int32 = (cse_var_72 + 160)
        let cse_var_67: int32 = (cse_var_72 + 176)
        let cse_var_66: int32 = (cse_var_72 + 192)
        let cse_var_65: int32 = (cse_var_72 + 208)
        let cse_var_64: int32 = (cse_var_72 + 224)
        let cse_var_63: int32 = (cse_var_72 + 240)
        let cse_var_62: int32 = (cse_var_72 + 32)
        let cse_var_61: int32 = (cse_var_72 + 48)
        let cse_var_60: int32 = (cse_var_72 + 64)
        let cse_var_59: int32 = (cse_var_72 + 80)
        let cse_var_58: int32 = (cse_var_72 + 144)
        let cse_var_57: int32 = (cse_var_72 + 96)
        let cse_var_56: int32 = (((floordiv(ic.outer, 16)*25088) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)*256)) + (floormod(ic.outer, 16)*8))
        let cse_var_55: int32 = (cse_var_56 + 14343)
        let cse_var_54: int32 = (cse_var_56 + 17920)
        let cse_var_53: int32 = (cse_var_56 + 17921)
        let cse_var_52: int32 = (cse_var_56 + 17922)
        let cse_var_51: int32 = (cse_var_56 + 17923)
        let cse_var_50: int32 = (cse_var_56 + 17924)
        let cse_var_49: int32 = (cse_var_56 + 17925)
        let cse_var_48: int32 = (cse_var_56 + 17926)
        let cse_var_47: int32 = (cse_var_56 + 17927)
        let cse_var_46: int32 = (cse_var_56 + 2)
        let cse_var_45: int32 = (cse_var_56 + 21505)
        let cse_var_44: int32 = (cse_var_56 + 14341)
        let cse_var_43: int32 = (cse_var_56 + 14342)
        let cse_var_42: int32 = (cse_var_56 + 14340)
        let cse_var_41: int32 = (cse_var_56 + 14339)
        let cse_var_40: int32 = (cse_var_56 + 14338)
        let cse_var_39: int32 = (cse_var_56 + 14337)
        let cse_var_38: int32 = (cse_var_56 + 14336)
        let cse_var_37: int32 = (cse_var_56 + 10759)
        let cse_var_36: int32 = (cse_var_56 + 10758)
        let cse_var_35: int32 = (cse_var_56 + 10757)
        let cse_var_34: int32 = (cse_var_56 + 10756)
        let cse_var_33: int32 = (cse_var_56 + 10755)
        let cse_var_32: int32 = (cse_var_56 + 10754)
        let cse_var_31: int32 = (cse_var_56 + 10753)
        let cse_var_30: int32 = (cse_var_56 + 1)
        let cse_var_29: int32 = (cse_var_56 + 21504)
        let cse_var_28: int32 = (cse_var_56 + 7175)
        let cse_var_27: int32 = (cse_var_56 + 7174)
        let cse_var_26: int32 = (cse_var_56 + 7173)
        let cse_var_25: int32 = (cse_var_56 + 7172)
        let cse_var_24: int32 = (cse_var_56 + 7171)
        let cse_var_23: int32 = (cse_var_56 + 7170)
        let cse_var_22: int32 = (cse_var_56 + 7169)
        let cse_var_21: int32 = (cse_var_56 + 7168)
        let cse_var_20: int32 = (cse_var_56 + 7)
        let cse_var_19: int32 = (cse_var_56 + 6)
        let cse_var_18: int32 = (cse_var_56 + 5)
        let cse_var_17: int32 = (cse_var_56 + 4)
        let cse_var_16: int32 = (cse_var_56 + 3591)
        let cse_var_15: int32 = (cse_var_56 + 10752)
        let cse_var_14: int32 = (cse_var_56 + 3589)
        let cse_var_13: int32 = (cse_var_56 + 3588)
        let cse_var_12: int32 = (cse_var_56 + 3587)
        let cse_var_11: int32 = (cse_var_56 + 3586)
        let cse_var_10: int32 = (cse_var_56 + 3585)
        let cse_var_9: int32 = (cse_var_56 + 3584)
        let cse_var_8: int32 = (cse_var_56 + 3)
        let cse_var_7: int32 = (cse_var_56 + 21511)
        let cse_var_6: int32 = (cse_var_56 + 21510)
        let cse_var_5: int32 = (cse_var_56 + 21509)
        let cse_var_4: int32 = (cse_var_56 + 21508)
        let cse_var_3: int32 = (cse_var_56 + 21507)
        let cse_var_2: int32 = (cse_var_56 + 21506)
        let cse_var_1: int32 = (cse_var_56 + 3590)
         {
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_57, 1, 16)]))
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
          conv2d_NCHWc_1[ramp(0, 1, 16)] = (conv2d_NCHWc_1[ramp(0, 1, 16)] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
          conv2d_NCHWc_1[ramp(16, 1, 16)] = (conv2d_NCHWc_1[ramp(16, 1, 16)] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_57, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
          conv2d_NCHWc_1[ramp(32, 1, 16)] = (conv2d_NCHWc_1[ramp(32, 1, 16)] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
          conv2d_NCHWc_1[ramp(48, 1, 16)] = (conv2d_NCHWc_1[ramp(48, 1, 16)] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_57, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
          conv2d_NCHWc_1[ramp(64, 1, 16)] = (conv2d_NCHWc_1[ramp(64, 1, 16)] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
          conv2d_NCHWc_1[ramp(80, 1, 16)] = (conv2d_NCHWc_1[ramp(80, 1, 16)] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_57, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
          conv2d_NCHWc_1[ramp(96, 1, 16)] = (conv2d_NCHWc_1[ramp(96, 1, 16)] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
          conv2d_NCHWc_1[ramp(112, 1, 16)] = (conv2d_NCHWc_1[ramp(112, 1, 16)] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_57, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
          conv2d_NCHWc_1[ramp(128, 1, 16)] = (conv2d_NCHWc_1[ramp(128, 1, 16)] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
          conv2d_NCHWc_1[ramp(144, 1, 16)] = (conv2d_NCHWc_1[ramp(144, 1, 16)] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_57, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
          conv2d_NCHWc_1[ramp(160, 1, 16)] = (conv2d_NCHWc_1[ramp(160, 1, 16)] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
          conv2d_NCHWc_1[ramp(176, 1, 16)] = (conv2d_NCHWc_1[ramp(176, 1, 16)] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_62, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_60, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_57, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_70, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_68, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_66, 1, 16)]))
          conv2d_NCHWc_1[ramp(192, 1, 16)] = (conv2d_NCHWc_1[ramp(192, 1, 16)] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_69, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_61, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_59, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_71, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_58, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_67, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_65, 1, 16)]))
          conv2d_NCHWc_1[ramp(208, 1, 16)] = (conv2d_NCHWc_1[ramp(208, 1, 16)] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_63, 1, 16)]))
        }
      }
      for (ax2.inner: int32, 0, 7) {
        for (ax4.inner: int32, 0, 32) {
          let cse_var_73: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)
          T_add[((((cse_var_73*1568) + (ax2.inner*224)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)*32)) + ax4.inner)] = (conv2d_NCHWc_1[((ax2.inner*32) + ax4.inner)] + placeholder_2[((cse_var_73*32) + ax4.inner)])
        }
      }
    }
  }
}


==== Task 20: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_12 (weight 2 key: ["f21a06ddd41805defd5a52dec67bfcd5", [1, 1, 7, 7, 512], [16, 1, 3, 3, 512, 32], [1, 16, 1, 1, 32], [1, 16, 7, 7, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 7, 7, 512]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [16, 1, 3, 3, 512, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 512), (oh + kh), (ow + kw), floormod(ic, 512)]*placeholder[oc_chunk, floordiv(ic, 512), kh, kw, floormod(ic, 512), oc_block])
placeholder = PLACEHOLDER [1, 16, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=4)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=7)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=32)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=4)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=7)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [25088], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [2359296], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [512], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [25088], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 1, 7, 7, 512], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [16, 1, 3, 3, 512, 32], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 16, 1, 1, 32], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 16, 7, 7, 32], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 16) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x32), float32x32, [49]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [5184]), storage_scope = global {
      for (oh.outer.inner.init: int32, 0, 7) {
        let cse_var_1: int32 = (oh.outer.inner.init*7)
         {
          conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x32, [49], [])[cse_var_1] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 1)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 2)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 3)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 4)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 5)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 6)] = broadcast(0f32, 32)
        }
      }
      for (ic.outer: int32, 0, 8) {
        for (i2: int32, 0, 9) {
          let cse_var_4: int32 = (i2*576)
          let cse_var_3: int32 = ((i2*3584) + (ic.outer*64))
          let cse_var_2: bool = ((1 <= i2) && (i2 < 8))
           {
            data_pad_1: Buffer(data_pad, float32, [5184], [])[ramp(cse_var_4, 1, 64)] = broadcast(0f32, 64)
            data_pad_1[ramp((cse_var_4 + 64), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 3584), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_4 + 128), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 3072), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_4 + 192), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 2560), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_4 + 256), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 2048), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_4 + 320), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 1536), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_4 + 384), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 1024), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_4 + 448), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 512), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
            data_pad_1[ramp((cse_var_4 + 512), 1, 64)] = broadcast(0f32, 64)
          }
        }
        for (kh.outer: int32, 0, 3) {
          for (oh.outer.inner: int32, 0, 7) {
            for (ic.inner: int32, 0, 64) {
              for (kw.inner: int32, 0, 3) {
                let cse_var_13: int32 = (oh.outer.inner*7)
                let cse_var_12: int32 = (cse_var_13 + 6)
                let cse_var_11: int32 = (cse_var_13 + 5)
                let cse_var_10: int32 = (cse_var_13 + 4)
                let cse_var_9: int32 = (cse_var_13 + 3)
                let cse_var_8: int32 = (cse_var_13 + 2)
                let cse_var_7: int32 = (cse_var_13 + 1)
                let cse_var_6: int32 = ((((oh.outer.inner*576) + (kh.outer*576)) + (kw.inner*64)) + ic.inner)
                let cse_var_5: int32 = (((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*147456) + (kh.outer*49152)) + (kw.inner*16384)) + (ic.outer*2048)) + (ic.inner*32))
                 {
                  conv2d_NCHWc_1[cse_var_13] = (conv2d_NCHWc_1[cse_var_13] + (broadcast(data_pad_1[cse_var_6], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_7] = (conv2d_NCHWc_1[cse_var_7] + (broadcast(data_pad_1[(cse_var_6 + 64)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_8] = (conv2d_NCHWc_1[cse_var_8] + (broadcast(data_pad_1[(cse_var_6 + 128)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_9] = (conv2d_NCHWc_1[cse_var_9] + (broadcast(data_pad_1[(cse_var_6 + 192)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_6 + 256)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[(cse_var_6 + 320)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[(cse_var_6 + 384)], 32)*placeholder_1[ramp(cse_var_5, 1, 32)]))
                }
              }
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 7) {
        for (ax3.inner: int32, 0, 7) {
          T_add[ramp((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*1568) + (ax2.inner*224)) + (ax3.inner*32)), 1, 32)] = (conv2d_NCHWc_1[((ax2.inner*7) + ax3.inner)] + placeholder_2[ramp((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*32), 1, 32)])
        }
      }
    }
  }
}


==== Task 21: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_3 (weight 2 key: ["0bbd45a21c1a307f29fded9c948826f7", [1, 1, 56, 56, 64], [2, 1, 3, 3, 64, 32], [1, 2, 1, 1, 32], [1, 2, 56, 56, 32]]) =====
placeholder = PLACEHOLDER [1, 1, 56, 56, 64]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 64, 32]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 64), (oh + kh), (ow + kw), floormod(ic, 64)]*placeholder[oc_chunk, floordiv(ic, 64), kh, kw, floormod(ic, 64), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 32]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=2)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=2)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=14)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=32)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=64)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=3)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=7)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=4)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=14)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=32)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_ic_o)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [200704], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [36864], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [64], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [200704], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 1, 56, 56, 64], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [2, 1, 3, 3, 64, 32], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 2, 1, 1, 32], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 2, 56, 56, 32], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 196) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x32), float32x32, [32]), storage_scope = global;
    allocate(data_pad: Pointer(global float32), float32, [2304]), storage_scope = global {
      for (oc_chunk.outer.inner.init: int32, 0, 2) {
        let cse_var_1: int32 = (oc_chunk.outer.inner.init*16)
         {
          conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x32, [32], [])[cse_var_1] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 1)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 4)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 5)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 8)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 9)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 12)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 13)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 2)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 3)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 6)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 7)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 10)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 11)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 14)] = broadcast(0f32, 32)
          conv2d_NCHWc_1[(cse_var_1 + 15)] = broadcast(0f32, 32)
        }
      }
      for (i2: int32, 0, 6) {
        let cse_var_7: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
        let cse_var_6: int32 = ((cse_var_7*4) + i2)
        let cse_var_5: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)
        let cse_var_4: int32 = (i2*384)
        let cse_var_3: int32 = (((cse_var_7*14336) + (i2*3584)) + (cse_var_5*256))
        let cse_var_2: bool = ((1 <= cse_var_6) && (cse_var_6 < 57))
         {
          data_pad_1: Buffer(data_pad, float32, [2304], [])[ramp(cse_var_4, 1, 64)] = @tir.if_then_else((cse_var_2 && (1 <= cse_var_5)), placeholder[ramp((cse_var_3 - 3648), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
          data_pad_1[ramp((cse_var_4 + 64), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 3584), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
          data_pad_1[ramp((cse_var_4 + 128), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 3520), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
          data_pad_1[ramp((cse_var_4 + 192), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 3456), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
          data_pad_1[ramp((cse_var_4 + 256), 1, 64)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_3 - 3392), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
          data_pad_1[ramp((cse_var_4 + 320), 1, 64)] = @tir.if_then_else((cse_var_2 && (cse_var_5 < 13)), placeholder[ramp((cse_var_3 - 3328), 1, 64)], broadcast(0f32, 64), dtype=float32x64)
        }
      }
      for (kh.outer: int32, 0, 3) {
        for (oc_chunk.outer.inner: int32, 0, 2) {
          for (ow.outer.inner: int32, 0, 2) {
            for (ic.inner: int32, 0, 64) {
              for (kw.inner: int32, 0, 3) {
                let cse_var_17: int32 = ((oc_chunk.outer.inner*16) + (ow.outer.inner*2))
                let cse_var_16: int32 = (cse_var_17 + 9)
                let cse_var_15: int32 = (cse_var_17 + 8)
                let cse_var_14: int32 = (cse_var_17 + 5)
                let cse_var_13: int32 = (cse_var_17 + 4)
                let cse_var_12: int32 = (cse_var_17 + 13)
                let cse_var_11: int32 = (cse_var_17 + 12)
                let cse_var_10: int32 = (cse_var_17 + 1)
                let cse_var_9: int32 = ((((kh.outer*384) + (ow.outer.inner*128)) + (kw.inner*64)) + ic.inner)
                let cse_var_8: int32 = ((((oc_chunk.outer.inner*18432) + (kh.outer*6144)) + (kw.inner*2048)) + (ic.inner*32))
                 {
                  conv2d_NCHWc_1[cse_var_17] = (conv2d_NCHWc_1[cse_var_17] + (broadcast(data_pad_1[cse_var_9], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_10] = (conv2d_NCHWc_1[cse_var_10] + (broadcast(data_pad_1[(cse_var_9 + 64)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_13] = (conv2d_NCHWc_1[cse_var_13] + (broadcast(data_pad_1[(cse_var_9 + 384)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_14] = (conv2d_NCHWc_1[cse_var_14] + (broadcast(data_pad_1[(cse_var_9 + 448)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_15] = (conv2d_NCHWc_1[cse_var_15] + (broadcast(data_pad_1[(cse_var_9 + 768)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_16] = (conv2d_NCHWc_1[cse_var_16] + (broadcast(data_pad_1[(cse_var_9 + 832)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_11] = (conv2d_NCHWc_1[cse_var_11] + (broadcast(data_pad_1[(cse_var_9 + 1152)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                  conv2d_NCHWc_1[cse_var_12] = (conv2d_NCHWc_1[cse_var_12] + (broadcast(data_pad_1[(cse_var_9 + 1216)], 32)*placeholder_1[ramp(cse_var_8, 1, 32)]))
                }
              }
            }
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 4) {
          for (ax3.inner: int32, 0, 4) {
            T_add[ramp((((((ax1.inner*100352) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*7168)) + (ax2.inner*1792)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 14)*128)) + (ax3.inner*32)), 1, 32)] = (conv2d_NCHWc_1[(((ax1.inner*16) + (ax2.inner*4)) + ax3.inner)] + placeholder_2[ramp((ax1.inner*32), 1, 32)])
          }
        }
      }
    }
  }
}


==== Task 22: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_2 (weight 1 key: ["2e98eb88a2ec87d3ad99c76bdbb0fbed", [1, 4, 112, 112, 16], [4, 4, 1, 1, 16, 16], [1, 4, 1, 1, 16], [1, 4, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 112, 112, 16]
placeholder = PLACEHOLDER [4, 4, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=4)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=2)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=2)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=28)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=1)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=4)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=2)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=2)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=28)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [802816], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [4096], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [64], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [200704], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 4, 112, 112, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [4, 4, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 4, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 56, 56, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 784) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [16]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [16], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      conv2d_NCHWc_1[14] = broadcast(0f32, 16)
      conv2d_NCHWc_1[15] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 64) {
        let cse_var_8: int32 = (ic.outer*16)
        let cse_var_7: int32 = (cse_var_8 + 3072)
        let cse_var_6: int32 = (cse_var_8 + 2048)
        let cse_var_5: int32 = (cse_var_8 + 1024)
        let cse_var_4: int32 = ((((floordiv(ic.outer, 16)*200704) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 28)*7168)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 28)*64)) + floormod(ic.outer, 16))
        let cse_var_3: int32 = (cse_var_4 + 3616)
        let cse_var_2: int32 = (cse_var_4 + 3584)
        let cse_var_1: int32 = (cse_var_4 + 32)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
          conv2d_NCHWc_1[14] = (conv2d_NCHWc_1[14] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
          conv2d_NCHWc_1[15] = (conv2d_NCHWc_1[15] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 4) {
        for (ax2.inner: int32, 0, 2) {
          for (ax3.inner: int32, 0, 2) {
            T_add[ramp((((((ax1.inner*50176) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 28)*1792)) + (ax2.inner*896)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 28)*32)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[(((ax1.inner*4) + (ax2.inner*2)) + ax3.inner)] + placeholder_2[ramp((ax1.inner*16), 1, 16)])
          }
        }
      }
    }
  }
}


Running time in time_evaluator:  [18.940325206896553, 19.260143448275866, 19.42019193103448]
|graph_nodes| =  526
|graph_time| =  526
data : 0.000
p0 : 0.000
p1 : 0.000
tvmgen_default_fused_copy_subtract_multiply_layout_transform : 0.000
p2 : 0.000
p3 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add : 0.000
p4 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape : 0.000
p5 : 0.000
tvmgen_default_fused_add_layout_transform : 0.000
p6 : 0.000
p7 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1 : 0.000
p8 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform : 0.000
p9 : 0.000
p10 : 0.000
tvmgen_default_fused_layout_transform : 0.000
p11 : 0.000
p12 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add : 0.000
p13 : 0.000
tvmgen_default_fused_add_layout_transform_1 : 0.000
p14 : 0.000
p15 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3 : 0.000
p16 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_1 : 0.000
p17 : 0.000
p18 : 0.000
tvmgen_default_fused_layout_transform_1 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_1 : 0.000
p19 : 0.000
tvmgen_default_fused_add_layout_transform_2 : 0.000
p20 : 0.000
p21 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_31 : 0.000
p22 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_11 : 0.000
p23 : 0.000
p24 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_11 : 0.000
p25 : 0.000
tvmgen_default_fused_add_layout_transform_3 : 0.000
p26 : 0.000
p27 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_4 : 0.000
p28 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_2 : 0.000
p29 : 0.000
p30 : 0.000
tvmgen_default_fused_layout_transform_2 : 0.000
p31 : 0.000
p32 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_5 : 0.000
tvmgen_default_fused_layout_transform_3 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_2 : 0.000
p33 : 0.000
tvmgen_default_fused_add_layout_transform_4 : 0.000
p34 : 0.000
p35 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_6 : 0.000
p36 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_3 : 0.000
p37 : 0.000
p38 : 0.000
tvmgen_default_fused_layout_transform_4 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_3 : 0.000
p39 : 0.000
tvmgen_default_fused_add_layout_transform_5 : 0.000
p40 : 0.000
p41 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_61 : 0.000
p42 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_31 : 0.000
p43 : 0.000
p44 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_31 : 0.000
p45 : 0.000
tvmgen_default_fused_add_layout_transform_51 : 0.000
p46 : 0.000
p47 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_62 : 0.000
p48 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_32 : 0.000
p49 : 0.000
p50 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_32 : 0.000
p51 : 0.000
tvmgen_default_fused_add_layout_transform_52 : 0.000
p52 : 0.000
p53 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_63 : 0.000
p54 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_33 : 0.000
p55 : 0.000
p56 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_33 : 0.000
p57 : 0.000
tvmgen_default_fused_add_layout_transform_53 : 0.000
p58 : 0.000
p59 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_64 : 0.000
p60 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_34 : 0.000
p61 : 0.000
p62 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_34 : 0.000
p63 : 0.000
tvmgen_default_fused_add_layout_transform_54 : 0.000
p64 : 0.000
p65 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_65 : 0.000
p66 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_35 : 0.000
p67 : 0.000
p68 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_35 : 0.000
p69 : 0.000
tvmgen_default_fused_add_layout_transform_55 : 0.000
p70 : 0.000
p71 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_66 : 0.000
p72 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_36 : 0.000
p73 : 0.000
p74 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_36 : 0.000
p75 : 0.000
tvmgen_default_fused_add_layout_transform_56 : 0.000
p76 : 0.000
p77 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_67 : 0.000
p78 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_37 : 0.000
p79 : 0.000
p80 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_37 : 0.000
p81 : 0.000
tvmgen_default_fused_add_layout_transform_57 : 0.000
p82 : 0.000
p83 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_68 : 0.000
p84 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_38 : 0.000
p85 : 0.000
p86 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_38 : 0.000
p87 : 0.000
tvmgen_default_fused_add_layout_transform_58 : 0.000
p88 : 0.000
p89 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_69 : 0.000
p90 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_39 : 0.000
p91 : 0.000
p92 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_39 : 0.000
p93 : 0.000
tvmgen_default_fused_add_layout_transform_59 : 0.000
p94 : 0.000
p95 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_610 : 0.000
p96 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_310 : 0.000
p97 : 0.000
p98 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_310 : 0.000
p99 : 0.000
tvmgen_default_fused_add_layout_transform_510 : 0.000
p100 : 0.000
p101 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_611 : 0.000
p102 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_311 : 0.000
p103 : 0.000
p104 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_311 : 0.000
p105 : 0.000
tvmgen_default_fused_add_layout_transform_6 : 0.000
p106 : 0.000
p107 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_7 : 0.000
p108 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_4 : 0.000
p109 : 0.000
p110 : 0.000
tvmgen_default_fused_layout_transform_5 : 0.000
p111 : 0.000
p112 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_8 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_4 : 0.000
p113 : 0.000
tvmgen_default_fused_add_layout_transform_7 : 0.000
p114 : 0.000
p115 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_9 : 0.000
p116 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_5 : 0.000
p117 : 0.000
p118 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_5 : 0.000
p119 : 0.000
tvmgen_default_fused_add_layout_transform_71 : 0.000
p120 : 0.000
p121 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_91 : 0.000
p122 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_51 : 0.000
p123 : 0.000
p124 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_51 : 0.000
p125 : 0.000
tvmgen_default_fused_add_layout_transform_72 : 0.000
p126 : 0.000
p127 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_92 : 0.000
p128 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_52 : 0.000
p129 : 0.000
p130 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_52 : 0.000
p131 : 0.000
tvmgen_default_fused_add_layout_transform_73 : 0.000
p132 : 0.000
p133 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_93 : 0.000
p134 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_53 : 0.000
p135 : 0.000
p136 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_53 : 0.000
p137 : 0.000
tvmgen_default_fused_add_layout_transform_74 : 0.000
p138 : 0.000
p139 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_94 : 0.000
p140 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_54 : 0.000
p141 : 0.000
p142 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_54 : 0.000
p143 : 0.000
tvmgen_default_fused_add_layout_transform_75 : 0.000
p144 : 0.000
p145 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_95 : 0.000
p146 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_55 : 0.000
p147 : 0.000
p148 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_55 : 0.000
p149 : 0.000
tvmgen_default_fused_add_layout_transform_76 : 0.000
p150 : 0.000
p151 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_96 : 0.000
p152 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_56 : 0.000
p153 : 0.000
p154 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_56 : 0.000
p155 : 0.000
tvmgen_default_fused_add_layout_transform_77 : 0.000
p156 : 0.000
p157 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_97 : 0.000
p158 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_57 : 0.000
p159 : 0.000
p160 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_57 : 0.000
p161 : 0.000
tvmgen_default_fused_add_layout_transform_78 : 0.000
p162 : 0.000
p163 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_98 : 0.000
p164 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_58 : 0.000
p165 : 0.000
p166 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_58 : 0.000
p167 : 0.000
tvmgen_default_fused_add_layout_transform_79 : 0.000
p168 : 0.000
p169 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_99 : 0.000
p170 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_59 : 0.000
p171 : 0.000
p172 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_59 : 0.000
p173 : 0.000
tvmgen_default_fused_add_layout_transform_710 : 0.000
p174 : 0.000
p175 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_910 : 0.000
p176 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_510 : 0.000
p177 : 0.000
p178 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_510 : 0.000
p179 : 0.000
tvmgen_default_fused_add_layout_transform_711 : 0.000
p180 : 0.000
p181 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_911 : 0.000
p182 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_511 : 0.000
p183 : 0.000
p184 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_511 : 0.000
p185 : 0.000
tvmgen_default_fused_add_layout_transform_712 : 0.000
p186 : 0.000
p187 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_912 : 0.000
p188 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_512 : 0.000
p189 : 0.000
p190 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_512 : 0.000
p191 : 0.000
tvmgen_default_fused_add_layout_transform_713 : 0.000
p192 : 0.000
p193 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_913 : 0.000
p194 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_513 : 0.000
p195 : 0.000
p196 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_513 : 0.000
p197 : 0.000
tvmgen_default_fused_add_layout_transform_714 : 0.000
p198 : 0.000
p199 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_914 : 0.000
p200 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_514 : 0.000
p201 : 0.000
p202 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_514 : 0.000
p203 : 0.000
tvmgen_default_fused_add_layout_transform_715 : 0.000
p204 : 0.000
p205 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_915 : 0.000
p206 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_515 : 0.000
p207 : 0.000
p208 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_515 : 0.000
p209 : 0.000
tvmgen_default_fused_add_layout_transform_716 : 0.000
p210 : 0.000
p211 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_916 : 0.000
p212 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_516 : 0.000
p213 : 0.000
p214 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_516 : 0.000
p215 : 0.000
tvmgen_default_fused_add_layout_transform_717 : 0.000
p216 : 0.000
p217 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_917 : 0.000
p218 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_517 : 0.000
p219 : 0.000
p220 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_517 : 0.000
p221 : 0.000
tvmgen_default_fused_add_layout_transform_718 : 0.000
p222 : 0.000
p223 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_918 : 0.000
p224 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_518 : 0.000
p225 : 0.000
p226 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_518 : 0.000
p227 : 0.000
tvmgen_default_fused_add_layout_transform_719 : 0.000
p228 : 0.000
p229 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_919 : 0.000
p230 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_519 : 0.000
p231 : 0.000
p232 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_519 : 0.000
p233 : 0.000
tvmgen_default_fused_add_layout_transform_720 : 0.000
p234 : 0.000
p235 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_920 : 0.000
p236 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_520 : 0.000
p237 : 0.000
p238 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_520 : 0.000
p239 : 0.000
tvmgen_default_fused_add_layout_transform_721 : 0.000
p240 : 0.000
p241 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_921 : 0.000
p242 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_521 : 0.000
p243 : 0.000
p244 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_521 : 0.000
p245 : 0.000
tvmgen_default_fused_add_layout_transform_722 : 0.000
p246 : 0.000
p247 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_922 : 0.000
p248 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_522 : 0.000
p249 : 0.000
p250 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_522 : 0.000
p251 : 0.000
tvmgen_default_fused_add_layout_transform_723 : 0.000
p252 : 0.000
p253 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_923 : 0.000
p254 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_523 : 0.000
p255 : 0.000
p256 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_523 : 0.000
p257 : 0.000
tvmgen_default_fused_add_layout_transform_724 : 0.000
p258 : 0.000
p259 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_924 : 0.000
p260 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_524 : 0.000
p261 : 0.000
p262 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_524 : 0.000
p263 : 0.000
tvmgen_default_fused_add_layout_transform_725 : 0.000
p264 : 0.000
p265 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_925 : 0.000
p266 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_525 : 0.000
p267 : 0.000
p268 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_525 : 0.000
p269 : 0.000
tvmgen_default_fused_add_layout_transform_726 : 0.000
p270 : 0.000
p271 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_926 : 0.000
p272 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_526 : 0.000
p273 : 0.000
p274 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_526 : 0.000
p275 : 0.000
tvmgen_default_fused_add_layout_transform_727 : 0.000
p276 : 0.000
p277 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_927 : 0.000
p278 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_527 : 0.000
p279 : 0.000
p280 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_527 : 0.000
p281 : 0.000
tvmgen_default_fused_add_layout_transform_728 : 0.000
p282 : 0.000
p283 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_928 : 0.000
p284 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_528 : 0.000
p285 : 0.000
p286 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_528 : 0.000
p287 : 0.000
tvmgen_default_fused_add : 0.000
p288 : 0.000
p289 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_10 : 0.000
p290 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_6 : 0.000
p291 : 0.000
p292 : 0.000
tvmgen_default_fused_layout_transform_6 : 0.000
p293 : 0.000
p294 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_11 : 0.000
tvmgen_default_fused_layout_transform_7 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_6 : 0.000
p295 : 0.000
tvmgen_default_fused_add_layout_transform_8 : 0.000
p296 : 0.000
p297 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_12 : 0.000
p298 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_7 : 0.000
p299 : 0.000
p300 : 0.000
tvmgen_default_fused_layout_transform_8 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_7 : 0.000
p301 : 0.000
tvmgen_default_fused_add_layout_transform_9 : 0.000
p302 : 0.000
p303 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_121 : 0.000
p304 : 0.000
tvmgen_default_fused_layout_transform_reshape_nn_prelu_reshape_layout_transform_71 : 0.000
p305 : 0.000
p306 : 0.000
p307 : 0.000
p308 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_multiply_add : 0.000
tvmgen_default_fused_layout_transform_nn_batch_flatten : 0.000
p309 : 0.000
p310 : 0.000
tvmgen_default_fused_nn_dense_add : 0.000
