Get devices for measurement successfully!
https://storage.cloud.google.com/octoml-aquarium-models/onnx_model_zoo/vision_classification_mobilenetv2.onnx
file existed. Skipping downloading.
/home/ubuntu/cache-workloads/mobilenetv2.onnx
Workload: mobilenetv2
  input_name: data
  input_shape: [1, 3, 224, 224]
  input_dtype: float32
==== Task 0: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_7 (weight 2 key: ["193974b73c385510c28dcb191affa8cd", [1, 36, 14, 14, 16], [36, 1, 3, 3, 1, 16], [1, 36, 1, 1, 16], [1, 36, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 14, 14, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [36, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 36, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 1: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4 (weight 3 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 2, 28, 28, 16], [12, 2, 1, 1, 16, 16], [1, 12, 1, 1, 16], [1, 12, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 28, 28, 16]
placeholder = PLACEHOLDER [12, 2, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 12, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 2: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu (weight 1 key: ["8de29ce92833b18f317071115f796b28", [1, 1, 224, 224, 3], [2, 1, 3, 3, 3, 16], [1, 2, 1, 1, 16], [1, 2, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 1, 224, 224, 3]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 225)) && (i3 >= 1)) && (i3 < 225)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 3, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 3), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 3)]*placeholder[oc_chunk, floordiv(ic, 3), kh, kw, floormod(ic, 3), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 3: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add (weight 1 key: ["391e6c60071e32afd1852974e92f294e", [1, 12, 56, 56, 12], [2, 12, 1, 1, 12, 12], [1, 2, 1, 1, 12], [1, 2, 56, 56, 12], [1, 2, 56, 56, 12]]) =====
placeholder = PLACEHOLDER [1, 12, 56, 56, 12]
placeholder = PLACEHOLDER [2, 12, 1, 1, 12, 12]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 12), (oh + kh), (ow + kw), floormod(ic, 12)]*placeholder[oc_chunk, floordiv(ic, 12), kh, kw, floormod(ic, 12), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 12]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 2, 56, 56, 12]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 4: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_2 (weight 1 key: ["193974b73c385510c28dcb191affa8cd", [1, 9, 56, 56, 16], [9, 1, 3, 3, 1, 16], [1, 9, 1, 1, 16], [1, 9, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 9, 56, 56, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [9, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 9, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 5: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8 (weight 1 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 20, 7, 7, 16], [80, 20, 1, 1, 16, 16], [1, 80, 1, 1, 16], [1, 80, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 20, 7, 7, 16]
placeholder = PLACEHOLDER [80, 20, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 80, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 6: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_4 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 24, 14, 14, 16], [6, 24, 1, 1, 16, 16], [1, 6, 1, 1, 16], [1, 6, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 24, 14, 14, 16]
placeholder = PLACEHOLDER [6, 24, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 7: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu (weight 1 key: ["193974b73c385510c28dcb191affa8cd", [1, 2, 112, 112, 16], [2, 1, 3, 3, 1, 16], [1, 2, 1, 1, 16], [1, 2, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 112, 112, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 8: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1 (weight 1 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 2, 112, 112, 16], [2, 2, 1, 1, 16, 16], [1, 2, 1, 1, 16], [1, 2, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 112, 112, 16]
placeholder = PLACEHOLDER [2, 2, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 9: vm_mod_fused_nn_global_avg_pool2d (weight 1 key: ["1a84dfec89b63813d3461d4863fb7041", [1, 80, 7, 7, 16], [1, 80, 1, 1, 16]]) =====
placeholder = PLACEHOLDER [1, 80, 7, 7, 16]
tensor(ax0, ax1, ax2, ax3, ax4) += placeholder[ax0, ax1, ((ax2*7) + rv0), ((ax3*7) + rv1), ax4]
tensor(ax0, ax1, ax2, ax3, ax4) = (tensor[ax0, ax1, ax2, ax3, ax4]/(float32((select((bool)1, ((ax2 + 1)*7), (((ax2 + 1)*7) + 1)) - (ax2*7)))*float32((select((bool)1, ((ax3 + 1)*7), (((ax3 + 1)*7) + 1)) - (ax3*7)))))

==== Task 10: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_5 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 36, 7, 7, 16], [10, 36, 1, 1, 16, 16], [1, 10, 1, 1, 16], [1, 10, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 7, 7, 16]
placeholder = PLACEHOLDER [10, 36, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 10, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 11: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_6 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 24, 28, 28, 16], [24, 1, 3, 3, 1, 16], [1, 24, 1, 1, 16], [1, 24, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 24, 28, 28, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [24, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 24, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 12: vm_mod_fused_nn_contrib_conv2d_NCHWc (weight 1 key: ["98ddc69ad82d13fc6b5cb15924426ace", [1, 128, 1, 1, 10], [100, 128, 1, 1, 10, 10], [1, 100, 1, 1, 10]]) =====
placeholder = PLACEHOLDER [1, 128, 1, 1, 10]
placeholder = PLACEHOLDER [100, 128, 1, 1, 10, 10]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 10), (oh + kh), (ow + kw), floormod(ic, 10)]*placeholder[oc_chunk, floordiv(ic, 10), kh, kw, floormod(ic, 10), oc_block])

==== Task 13: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_2 (weight 3 key: ["9b33493c1055e7d356de27daf0a24610", [1, 24, 28, 28, 16], [4, 24, 1, 1, 16, 16], [1, 4, 1, 1, 16], [1, 4, 28, 28, 16], [1, 4, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 24, 28, 28, 16]
placeholder = PLACEHOLDER [4, 24, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 4, 28, 28, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 14: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_4 (weight 2 key: ["9b33493c1055e7d356de27daf0a24610", [1, 60, 7, 7, 16], [10, 60, 1, 1, 16, 16], [1, 10, 1, 1, 16], [1, 10, 7, 7, 16], [1, 10, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 60, 7, 7, 16]
placeholder = PLACEHOLDER [10, 60, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 10, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 10, 7, 7, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 15: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_6 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 60, 7, 7, 16], [20, 60, 1, 1, 16, 16], [1, 20, 1, 1, 16], [1, 20, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 60, 7, 7, 16]
placeholder = PLACEHOLDER [20, 60, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 20, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 16: vm_mod_fused_nn_contrib_conv2d_NCHWc_add (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 2, 112, 112, 16], [1, 2, 1, 1, 16, 16], [1, 1, 1, 1, 16], [1, 1, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 112, 112, 16]
placeholder = PLACEHOLDER [1, 2, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 1, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 17: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7 (weight 3 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 10, 7, 7, 16], [60, 10, 1, 1, 16, 16], [1, 60, 1, 1, 16], [1, 60, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 10, 7, 7, 16]
placeholder = PLACEHOLDER [60, 10, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 60, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 18: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_8 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 36, 14, 14, 16], [36, 1, 3, 3, 1, 16], [1, 36, 1, 1, 16], [1, 36, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 14, 14, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [36, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 36, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 19: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_1 (weight 2 key: ["9b33493c1055e7d356de27daf0a24610", [1, 12, 28, 28, 16], [2, 12, 1, 1, 16, 16], [1, 2, 1, 1, 16], [1, 2, 28, 28, 16], [1, 2, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 12, 28, 28, 16]
placeholder = PLACEHOLDER [2, 12, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 2, 28, 28, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 20: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_3 (weight 2 key: ["9b33493c1055e7d356de27daf0a24610", [1, 36, 14, 14, 16], [6, 36, 1, 1, 16, 16], [1, 6, 1, 1, 16], [1, 6, 14, 14, 16], [1, 6, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 14, 14, 16]
placeholder = PLACEHOLDER [6, 36, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 6, 14, 14, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])

==== Task 21: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_1 (weight 1 key: ["f32a181d1c966eb8dcb0f07fc0212143", [1, 8, 56, 56, 12], [2, 8, 1, 1, 12, 12], [1, 2, 1, 1, 12], [1, 2, 56, 56, 12]]) =====
placeholder = PLACEHOLDER [1, 8, 56, 56, 12]
placeholder = PLACEHOLDER [2, 8, 1, 1, 12, 12]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 12), (oh + kh), (ow + kw), floormod(ic, 12)]*placeholder[oc_chunk, floordiv(ic, 12), kh, kw, floormod(ic, 12), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 12]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 22: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_9 (weight 3 key: ["193974b73c385510c28dcb191affa8cd", [1, 60, 7, 7, 16], [60, 1, 3, 3, 1, 16], [1, 60, 1, 1, 16], [1, 60, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 60, 7, 7, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [60, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 60, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 23: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_4 (weight 3 key: ["193974b73c385510c28dcb191affa8cd", [1, 12, 28, 28, 16], [12, 1, 3, 3, 1, 16], [1, 12, 1, 1, 16], [1, 12, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 12, 28, 28, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [12, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 12, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 24: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_3 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 9, 56, 56, 16], [9, 1, 3, 3, 1, 16], [1, 9, 1, 1, 16], [1, 9, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 9, 56, 56, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [9, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 9, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 25: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6 (weight 3 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 6, 14, 14, 16], [36, 6, 1, 1, 16, 16], [1, 36, 1, 1, 16], [1, 36, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 6, 14, 14, 16]
placeholder = PLACEHOLDER [36, 6, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 36, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 26: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2 (weight 1 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 1, 112, 112, 16], [6, 1, 1, 1, 16, 16], [1, 6, 1, 1, 16], [1, 6, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 1, 112, 112, 16]
placeholder = PLACEHOLDER [6, 1, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 27: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5 (weight 4 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 4, 28, 28, 16], [24, 4, 1, 1, 16, 16], [1, 24, 1, 1, 16], [1, 24, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 28, 28, 16]
placeholder = PLACEHOLDER [24, 4, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 24, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 28: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_1 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 6, 112, 112, 16], [6, 1, 3, 3, 1, 16], [1, 6, 1, 1, 16], [1, 6, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 6, 112, 112, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [6, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 29: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3 (weight 2 key: ["998acdd7c0e6666ce5ddc398c4ba0ff3", [1, 2, 56, 56, 12], [9, 2, 1, 1, 12, 16], [1, 9, 1, 1, 16], [1, 9, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 56, 56, 12]
placeholder = PLACEHOLDER [9, 2, 1, 1, 12, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 12), (oh + kh), (ow + kw), floormod(ic, 12)]*placeholder[oc_chunk, floordiv(ic, 12), kh, kw, floormod(ic, 12), oc_block])
placeholder = PLACEHOLDER [1, 9, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 30: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_3 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 12, 28, 28, 16], [4, 12, 1, 1, 16, 16], [1, 4, 1, 1, 16], [1, 4, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 12, 28, 28, 16]
placeholder = PLACEHOLDER [4, 12, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

==== Task 31: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_5 (weight 3 key: ["193974b73c385510c28dcb191affa8cd", [1, 24, 28, 28, 16], [24, 1, 3, 3, 1, 16], [1, 24, 1, 1, 16], [1, 24, 28, 28, 16]]) =====
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1653	fail_ct: 95	Time elapsed: 1.45
GA Iter: 0	Max score: 0.9994	Min score: 0.9171	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9850	#Pop: 128	#M+: 1382	#M-: 38
EvolutionarySearch		#s: 128	Time elapsed: 6.45
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................placeholder = PLACEHOLDER [1, 24, 28, 28, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [24, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 24, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)

==== Task 32: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_2 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 9, 28, 28, 16], [2, 9, 1, 1, 16, 16], [1, 2, 1, 1, 16], [1, 2, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 9, 28, 28, 16]
placeholder = PLACEHOLDER [2, 9, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |            - |              - |      0 |
|    1 |            - |              - |      0 |
|    2 |            - |              - |      0 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 0	Used time : 1 s	Next ID: 0	
.T***************************************************************Time elapsed for measurement: 22.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
/home/ubuntu/anaconda3/lib/python3.9/site-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
  warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
Time elapsed for training: 2.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2021	fail_ct: 0	Time elapsed: 1.24
GA Iter: 0	Max score: 0.9996	Min score: 0.9416	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9883	#Pop: 128	#M+: 1385	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.55
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.53 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1775	fail_ct: 0	Time elapsed: 1.37
GA Iter: 0	Max score: 0.9990	Min score: 0.9301	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9870	#Pop: 128	#M+: 1388	#M-: 37
EvolutionarySearch		#s: 128	Time elapsed: 6.80
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |            - |              - |      0 |
|    2 |            - |              - |      0 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 64	Used time : 34 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |            - |              - |      0 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 128	Used time : 54 s	Next ID: 2	
.T***************************************************************Time elapsed for measurement: 23.84 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2021	fail_ct: 0	Time elapsed: 0.92
GA Iter: 0	Max score: 0.9993	Min score: 0.9455	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9892	#Pop: 128	#M+: 1391	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.02
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
..............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |            - |              - |      0 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 192	Used time : 87 s	Next ID: 3	
.T.T**************************************************************Time elapsed for measurement: 21.42 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.36 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1708	fail_ct: 42	Time elapsed: 1.14
GA Iter: 0	Max score: 0.9995	Min score: 0.9257	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9879	#Pop: 128	#M+: 1393	#M-: 42
EvolutionarySearch		#s: 128	Time elapsed: 5.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
.............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |            - |              - |      0 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 256	Used time : 115 s	Next ID: 4	
.T.T.T*************************************************************Time elapsed for measurement: 24.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.71 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1991	fail_ct: 2	Time elapsed: 0.91
GA Iter: 0	Max score: 0.9997	Min score: 0.9354	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9853	#Pop: 128	#M+: 1377	#M-: 66
EvolutionarySearch		#s: 128	Time elapsed: 3.79
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 23.63 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1985	fail_ct: 3	Time elapsed: 0.82
GA Iter: 0	Max score: 0.9995	Min score: 0.9358	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9878	#Pop: 128	#M+: 1381	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 3.61
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.98 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.77 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 1.20
GA Iter: 0	Max score: 0.9988	Min score: 0.9301	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9874	#Pop: 128	#M+: 1376	#M-: 37
EvolutionarySearch		#s: 128	Time elapsed: 5.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.63 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2028	fail_ct: 0	Time elapsed: 0.85
GA Iter: 0	Max score: 0.9997	Min score: 0.9356	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9882	#Pop: 128	#M+: 1382	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 4.15
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.67 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.68 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |            - |              - |      0 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 320	Used time : 148 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |            - |              - |      0 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 384	Used time : 178 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |            - |              - |      0 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 448	Used time : 197 s	Next ID: 7	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |            - |              - |      0 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 512	Used time : 225 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |            - |              - |      0 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 1
Sample Iter: 5	#Pop: 20	#Target: 50	fail_ct: 9494	Time elapsed: 1.85
#Target has been reduced to 25 due to too many failures or duplications
Sample Iter: 10	#Pop: 20	#Target: 25	fail_ct: 19001	Time elapsed: 3.71
#Target has been reduced to 12 due to too many failures or duplications
Sample Initial Population	#s: 20	fail_ct: 20914	Time elapsed: 4.11
GA Iter: 0	Max score: 0.9405	Min score: 0.0868	#Pop: 20	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9923	Min score: 0.0009	#Pop: 79	#M+: 373	#M-: 6802
EvolutionarySearch		#s: 79	Time elapsed: 1.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.83 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.77 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1930	fail_ct: 11	Time elapsed: 0.79
GA Iter: 0	Max score: 0.9998	Min score: 0.9348	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9877	#Pop: 128	#M+: 1380	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 3.37
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.15 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.65 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1672	fail_ct: 89	Time elapsed: 1.19
GA Iter: 0	Max score: 0.9994	Min score: 0.9299	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9996	Min score: 0.9850	#Pop: 128	#M+: 1383	#M-: 36
EvolutionarySearch		#s: 128	Time elapsed: 4.91
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 576	Used time : 251 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |            - |              - |      0 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 640	Used time : 272 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |            - |              - |      0 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 704	Used time : 293 s	Next ID: 11	
.T***************************************************************Time elapsed for measurement: 22.91 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.01 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1858	fail_ct: 46	Time elapsed: 0.64
GA Iter: 0	Max score: 0.9996	Min score: 0.9369	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9853	#Pop: 128	#M+: 1397	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 2.69
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.05 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.40 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2013	fail_ct: 0	Time elapsed: 0.91
GA Iter: 0	Max score: 0.9994	Min score: 0.9289	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9863	#Pop: 128	#M+: 1384	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 3.92
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.75 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1941	fail_ct: 11	Time elapsed: 0.82
GA Iter: 0	Max score: 0.9997	Min score: 0.9447	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9872	#Pop: 128	#M+: 1385	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 3.58
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.43 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.00 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1960	fail_ct: 2	Time elapsed: 0.80
GA Iter: 0	Max score: 0.9996	Min score: 0.9365	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9875	#Pop: 128	#M+: 1380	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 3.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.29 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |            - |              - |      0 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 768	Used time : 324 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |            - |              - |      0 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 832	Used time : 345 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |            - |              - |      0 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 896	Used time : 368 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |            - |              - |      0 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 960	Used time : 387 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 0.86
GA Iter: 0	Max score: 0.9995	Min score: 0.9392	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9885	#Pop: 128	#M+: 1378	#M-: 65
EvolutionarySearch		#s: 128	Time elapsed: 3.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.30 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2002	fail_ct: 2	Time elapsed: 0.83
GA Iter: 0	Max score: 0.9997	Min score: 0.9366	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9878	#Pop: 128	#M+: 1381	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 3.45
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1653	fail_ct: 83	Time elapsed: 1.03
GA Iter: 0	Max score: 1.0000	Min score: 0.9288	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9865	#Pop: 128	#M+: 1385	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 4.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 22.48 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2003	fail_ct: 2	Time elapsed: 0.90
GA Iter: 0	Max score: 0.9995	Min score: 0.9377	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9885	#Pop: 128	#M+: 1387	#M-: 81
EvolutionarySearch		#s: 128	Time elapsed: 4.00
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |            - |              - |      0 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1024	Used time : 409 s	Next ID: 16	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |            - |              - |      0 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1088	Used time : 431 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |            - |              - |      0 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1152	Used time : 460 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |            - |              - |      0 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1216	Used time : 490 s	Next ID: 19	
.T***************************************************************Time elapsed for measurement: 25.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1999	fail_ct: 0	Time elapsed: 0.86
GA Iter: 0	Max score: 0.9992	Min score: 0.9438	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9881	#Pop: 128	#M+: 1379	#M-: 67
EvolutionarySearch		#s: 128	Time elapsed: 3.87
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2014	fail_ct: 1	Time elapsed: 0.83
GA Iter: 0	Max score: 0.9983	Min score: 0.9423	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9866	#Pop: 128	#M+: 1385	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 3.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |            - |              - |      0 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1280	Used time : 523 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |            - |              - |      0 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1344	Used time : 550 s	Next ID: 21	
.T***************************************************************Time elapsed for measurement: 24.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.16 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1675	fail_ct: 91	Time elapsed: 0.99
GA Iter: 0	Max score: 0.9999	Min score: 0.9229	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9857	#Pop: 128	#M+: 1385	#M-: 44
EvolutionarySearch		#s: 128	Time elapsed: 4.80
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.58 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 1.83 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1697	fail_ct: 71	Time elapsed: 1.17
GA Iter: 0	Max score: 0.9997	Min score: 0.9309	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9874	#Pop: 128	#M+: 1402	#M-: 42
EvolutionarySearch		#s: 128	Time elapsed: 5.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |            - |              - |      0 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1408	Used time : 581 s	Next ID: 22	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |            - |              - |      0 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1472	Used time : 602 s	Next ID: 23	
.T***************************************************************Time elapsed for measurement: 23.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.29 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1649	fail_ct: 55	Time elapsed: 1.09
GA Iter: 0	Max score: 0.9998	Min score: 0.9239	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9866	#Pop: 128	#M+: 1390	#M-: 39
EvolutionarySearch		#s: 128	Time elapsed: 5.29
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |            - |              - |      0 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1536	Used time : 634 s	Next ID: 24	
.T***************************************************************Time elapsed for measurement: 23.36 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2014	fail_ct: 0	Time elapsed: 0.96
GA Iter: 0	Max score: 0.9998	Min score: 0.9398	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9864	#Pop: 128	#M+: 1387	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 4.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.26 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2031	fail_ct: 0	Time elapsed: 0.94
GA Iter: 0	Max score: 0.9987	Min score: 0.9431	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9893	#Pop: 128	#M+: 1375	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 4.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.00 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.38 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 0.95
GA Iter: 0	Max score: 0.9999	Min score: 0.9340	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9874	#Pop: 128	#M+: 1383	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1690	fail_ct: 64	Time elapsed: 1.12
GA Iter: 0	Max score: 0.9990	Min score: 0.9350	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9868	#Pop: 128	#M+: 1386	#M-: 38
EvolutionarySearch		#s: 128	Time elapsed: 5.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |            - |              - |      0 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1600	Used time : 666 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |            - |              - |      0 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1664	Used time : 692 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |            - |              - |      0 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1728	Used time : 723 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.042 |         920.90 |     64 |
|   28 |            - |              - |      0 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1792	Used time : 747 s	Next ID: 28	
.T***************************************************************Time elapsed for measurement: 25.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2016	fail_ct: 1	Time elapsed: 0.80
GA Iter: 0	Max score: 0.9996	Min score: 0.9340	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9860	#Pop: 128	#M+: 1369	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.84 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 2023	fail_ct: 1	Time elapsed: 0.87
GA Iter: 0	Max score: 0.9998	Min score: 0.9395	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9880	#Pop: 128	#M+: 1392	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.02
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.26 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.28 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1724	fail_ct: 103	Time elapsed: 1.14
GA Iter: 0	Max score: 0.9998	Min score: 0.9306	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9856	#Pop: 128	#M+: 1388	#M-: 39
EvolutionarySearch		#s: 128	Time elapsed: 5.76
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................
|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.042 |         920.90 |     64 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |            - |              - |      0 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1856	Used time : 782 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.042 |         920.90 |     64 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |            - |              - |      0 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1920	Used time : 807 s	Next ID: 30	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.042 |         920.90 |     64 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |            - |              - |      0 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 1984	Used time : 828 s	Next ID: 31	
.T***************************************************************Time elapsed for measurement: 24.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.09 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1997	fail_ct: 2	Time elapsed: 0.82
GA Iter: 0	Max score: 0.9997	Min score: 0.9375	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9885	#Pop: 128	#M+: 1370	#M-: 81
EvolutionarySearch		#s: 128	Time elapsed: 3.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.01 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2028	fail_ct: 0	Time elapsed: 0.89
GA Iter: 0	Max score: 0.9999	Min score: 0.9412	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9870	#Pop: 128	#M+: 1378	#M-: 68
EvolutionarySearch		#s: 128	Time elapsed: 4.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 20.55 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.86 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2007	fail_ct: 1	Time elapsed: 0.94
GA Iter: 0	Max score: 0.9463	Min score: 0.4175	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0186	Min score: 0.9402	#Pop: 128	#M+: 1383	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.54
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 2.29 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2025	fail_ct: 0	Time elapsed: 0.89
GA Iter: 0	Max score: 0.7678	Min score: 0.3532	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9832	Min score: 0.7520	#Pop: 128	#M+: 1387	#M-: 68
EvolutionarySearch		#s: 128	Time elapsed: 4.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.01 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.84 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.042 |         920.90 |     64 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |            - |              - |      0 |
-------------------------------------------------
Estimated total latency: - ms	Trials: 2048	Used time : 863 s	Next ID: 32	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.042 |         920.90 |     64 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 1.095 ms	Trials: 2112	Used time : 884 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.035 |        1113.10 |     64 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.032 |        1220.59 |    128 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 1.053 ms	Trials: 2176	Used time : 912 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.032 |        1220.59 |    128 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 1.006 ms	Trials: 2240	Used time : 934 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2018	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.8600	Min score: 0.3689	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9763	Min score: 0.8345	#Pop: 128	#M+: 1374	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.91
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.05 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2001	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.8740	Min score: 0.4069	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9591	Min score: 0.7393	#Pop: 128	#M+: 1383	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.70
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.24 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2036	fail_ct: 0	Time elapsed: 1.16
GA Iter: 0	Max score: 0.9440	Min score: 0.4420	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0415	Min score: 0.9011	#Pop: 128	#M+: 1387	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.84 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.64 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2011	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.8116	Min score: 0.4550	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9178	Min score: 0.7106	#Pop: 128	#M+: 1388	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 4.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.96 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.020 |        1103.44 |     64 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.961 ms	Trials: 2304	Used time : 960 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.025 |         868.55 |     64 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.944 ms	Trials: 2368	Used time : 988 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.048 |         851.21 |     64 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.917 ms	Trials: 2432	Used time : 1011 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.048 |         457.14 |     64 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.889 ms	Trials: 2496	Used time : 1036 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.016 |         958.32 |     64 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1995	fail_ct: 3	Time elapsed: 0.94
GA Iter: 0	Max score: 1.0005	Min score: 0.4247	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0403	Min score: 0.9022	#Pop: 128	#M+: 1370	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.28 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1694	fail_ct: 83	Time elapsed: 1.36
GA Iter: 0	Max score: 0.7822	Min score: 0.4305	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9854	Min score: 0.6979	#Pop: 128	#M+: 1382	#M-: 41
EvolutionarySearch		#s: 128	Time elapsed: 7.02
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.20 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2000	fail_ct: 2	Time elapsed: 0.98
GA Iter: 0	Max score: 0.9239	Min score: 0.4400	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9705	Min score: 0.7571	#Pop: 128	#M+: 1379	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.51
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.21 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.66 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2017	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.8587	Min score: 0.3973	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9643	Min score: 0.7004	#Pop: 128	#M+: 1371	#M-: 64
EvolutionarySearch		#s: 128	Time elapsed: 5.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1956	fail_ct: 3	Time elapsed: 0.89
GA Iter: 0	Max score: 0.7263	Min score: 0.3257	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9477	Min score: 0.6786	#Pop: 128	#M+: 1381	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.45
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.04 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.43 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.864 ms	Trials: 2560	Used time : 1062 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.015 |         393.66 |     64 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.845 ms	Trials: 2624	Used time : 1081 s	Next ID: 31	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.044 |         907.14 |     64 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.826 ms	Trials: 2688	Used time : 1106 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.013 |         739.84 |     64 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.800 ms	Trials: 2752	Used time : 1129 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.038 |         800.00 |     64 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.782 ms	Trials: 2816	Used time : 1149 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1741	fail_ct: 0	Time elapsed: 1.27
GA Iter: 0	Max score: 0.9602	Min score: 0.5558	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.3202	Min score: 0.9580	#Pop: 128	#M+: 1379	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 6.89
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.44 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1950	fail_ct: 10	Time elapsed: 0.96
GA Iter: 0	Max score: 0.8495	Min score: 0.4207	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9258	Min score: 0.6964	#Pop: 128	#M+: 1366	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.41
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.21 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.6389	Min score: 0.2916	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9025	Min score: 0.7281	#Pop: 128	#M+: 1377	#M-: 66
EvolutionarySearch		#s: 128	Time elapsed: 4.76
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.36 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2030	fail_ct: 0	Time elapsed: 1.10
GA Iter: 0	Max score: 0.7144	Min score: 0.2604	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.7732	Min score: 0.6267	#Pop: 128	#M+: 1382	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.037 |         606.54 |     64 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.761 ms	Trials: 2880	Used time : 1172 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.018 |         852.57 |     64 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.746 ms	Trials: 2944	Used time : 1195 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.019 |        2035.45 |    128 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.729 ms	Trials: 3008	Used time : 1220 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.021 |        1872.82 |    192 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.723 ms	Trials: 3072	Used time : 1247 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.6847	Min score: 0.2671	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9754	Min score: 0.6819	#Pop: 128	#M+: 1380	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.67 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.55 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2031	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.8229	Min score: 0.3555	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9718	Min score: 0.7232	#Pop: 128	#M+: 1385	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 4.87
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1650	fail_ct: 85	Time elapsed: 1.13
GA Iter: 0	Max score: 0.9412	Min score: 0.5853	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0801	Min score: 0.8451	#Pop: 128	#M+: 1378	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 6.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.24 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2011	fail_ct: 1	Time elapsed: 0.89
GA Iter: 0	Max score: 0.7690	Min score: 0.4240	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9811	Min score: 0.6794	#Pop: 128	#M+: 1373	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.40 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.20 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2031.81 |    256 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.716 ms	Trials: 3136	Used time : 1275 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.025 |        1060.76 |     64 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.713 ms	Trials: 3200	Used time : 1299 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.008 |         113.45 |     64 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.706 ms	Trials: 3264	Used time : 1324 s	Next ID: 22	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.012 |         783.65 |     64 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.690 ms	Trials: 3328	Used time : 1352 s	Next ID: 19	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.8070	Min score: 0.3036	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9984	Min score: 0.7546	#Pop: 128	#M+: 1390	#M-: 82
EvolutionarySearch		#s: 128	Time elapsed: 5.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.92 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1715	fail_ct: 0	Time elapsed: 1.38
GA Iter: 0	Max score: 0.7956	Min score: 0.4939	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9667	Min score: 0.7581	#Pop: 128	#M+: 1393	#M-: 33
EvolutionarySearch		#s: 128	Time elapsed: 7.17
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.15 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1713	fail_ct: 69	Time elapsed: 1.31
GA Iter: 0	Max score: 0.7945	Min score: 0.3774	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9448	Min score: 0.7465	#Pop: 128	#M+: 1387	#M-: 30
EvolutionarySearch		#s: 128	Time elapsed: 7.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.75 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.91 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1712	fail_ct: 33	Time elapsed: 1.21
GA Iter: 0	Max score: 0.8455	Min score: 0.4665	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0042	Min score: 0.7930	#Pop: 128	#M+: 1393	#M-: 33
EvolutionarySearch		#s: 128	Time elapsed: 6.74
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.22 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.00 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1717	fail_ct: 56	Time elapsed: 1.36
GA Iter: 0	Max score: 0.8543	Min score: 0.4402	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9939	Min score: 0.7773	#Pop: 128	#M+: 1391	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 6.93
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.83 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.012 |        1839.80 |     64 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.679 ms	Trials: 3392	Used time : 1379 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.024 |         327.90 |     64 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.676 ms	Trials: 3456	Used time : 1406 s	Next ID: 7	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.008 |         372.96 |     64 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.664 ms	Trials: 3520	Used time : 1431 s	Next ID: 23	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.023 |         386.55 |     64 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.657 ms	Trials: 3584	Used time : 1458 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.022 |         271.36 |     64 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.641 ms	Trials: 3648	Used time : 1484 s	Next ID: 28	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.6920	Min score: 0.3469	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8413	Min score: 0.6224	#Pop: 128	#M+: 1382	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.73
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 1.10
GA Iter: 0	Max score: 0.7576	Min score: 0.3088	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9289	Min score: 0.7331	#Pop: 128	#M+: 1377	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.73
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.15 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.48 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2021	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.6368	Min score: 0.2533	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9503	Min score: 0.7588	#Pop: 128	#M+: 1391	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.47 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2013	fail_ct: 1	Time elapsed: 1.07
GA Iter: 0	Max score: 0.6730	Min score: 0.2681	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9770	Min score: 0.7109	#Pop: 128	#M+: 1376	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.30 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.15 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.022 |         659.31 |     64 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.627 ms	Trials: 3712	Used time : 1514 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.014 |        1559.39 |    128 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.617 ms	Trials: 3776	Used time : 1537 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.019 |        2103.23 |    320 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.607 ms	Trials: 3840	Used time : 1562 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    192 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.604 ms	Trials: 3904	Used time : 1588 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 2	Time elapsed: 0.99
GA Iter: 0	Max score: 0.6780	Min score: 0.2693	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8998	Min score: 0.7441	#Pop: 128	#M+: 1382	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.76
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.98 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 4.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 1	Time elapsed: 0.88
GA Iter: 0	Max score: 0.7497	Min score: 0.3973	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8750	Min score: 0.6313	#Pop: 128	#M+: 1382	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 3.71 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1950	fail_ct: 5	Time elapsed: 0.77
GA Iter: 0	Max score: 0.7766	Min score: 0.4262	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8846	Min score: 0.6334	#Pop: 128	#M+: 1386	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 3.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.85 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.11 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2002	fail_ct: 1	Time elapsed: 0.99
GA Iter: 0	Max score: 0.6389	Min score: 0.3065	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9733	Min score: 0.6876	#Pop: 128	#M+: 1377	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.78
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.21 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.15 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   13 |        0.017 |        2284.47 |    256 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.604 ms	Trials: 3968	Used time : 1616 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.017 |         782.86 |     64 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.604 ms	Trials: 4032	Used time : 1640 s	Next ID: 16	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.016 |         555.99 |     64 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.596 ms	Trials: 4096	Used time : 1663 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.016 |         901.70 |     64 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.585 ms	Trials: 4160	Used time : 1688 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2015	fail_ct: 2	Time elapsed: 1.00
GA Iter: 0	Max score: 0.7908	Min score: 0.3173	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9206	Min score: 0.7122	#Pop: 128	#M+: 1384	#M-: 64
EvolutionarySearch		#s: 128	Time elapsed: 4.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.59 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1986	fail_ct: 2	Time elapsed: 0.98
GA Iter: 0	Max score: 0.6972	Min score: 0.2303	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9082	Min score: 0.6589	#Pop: 128	#M+: 1387	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.68
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.92 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1699	fail_ct: 84	Time elapsed: 1.32
GA Iter: 0	Max score: 0.6342	Min score: 0.3318	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0020	Min score: 0.6889	#Pop: 128	#M+: 1404	#M-: 47
EvolutionarySearch		#s: 128	Time elapsed: 6.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.6080	Min score: 0.2294	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9865	Min score: 0.8148	#Pop: 128	#M+: 1384	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.09 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1683	fail_ct: 91	Time elapsed: 1.31
GA Iter: 0	Max score: 0.9726	Min score: 0.3954	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9726	Min score: 0.7794	#Pop: 128	#M+: 1399	#M-: 38
EvolutionarySearch		#s: 128	Time elapsed: 6.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.76 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.72 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.015 |        1294.72 |     64 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.578 ms	Trials: 4224	Used time : 1712 s	Next ID: 30	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1577.61 |    128 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.573 ms	Trials: 4288	Used time : 1738 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.009 |         694.71 |    128 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.573 ms	Trials: 4352	Used time : 1760 s	Next ID: 31	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.018 |        2174.18 |    384 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.567 ms	Trials: 4416	Used time : 1790 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.006 |         365.26 |     64 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.564 ms	Trials: 4480	Used time : 1817 s	Next ID: 0	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1843	fail_ct: 57	Time elapsed: 0.69
GA Iter: 0	Max score: 0.9194	Min score: 0.4859	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0084	Min score: 0.8090	#Pop: 128	#M+: 1384	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 3.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.87 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1991	fail_ct: 1	Time elapsed: 1.09
GA Iter: 0	Max score: 0.6849	Min score: 0.2721	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9730	Min score: 0.7458	#Pop: 128	#M+: 1383	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 4.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.22 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2009	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.6951	Min score: 0.2889	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9832	Min score: 0.6337	#Pop: 128	#M+: 1379	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.19 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2029	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.8010	Min score: 0.2363	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9869	Min score: 0.7240	#Pop: 128	#M+: 1382	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.30
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.66 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.012 |         216.52 |     64 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.560 ms	Trials: 4544	Used time : 1848 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1856.65 |    128 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.557 ms	Trials: 4608	Used time : 1867 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.023 |         944.71 |    128 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.557 ms	Trials: 4672	Used time : 1893 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2009.93 |    128 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.550 ms	Trials: 4736	Used time : 1918 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.007 |        1326.91 |    128 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.7368	Min score: 0.2698	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9359	Min score: 0.7364	#Pop: 128	#M+: 1377	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1758	fail_ct: 1	Time elapsed: 1.40
GA Iter: 0	Max score: 0.9185	Min score: 0.3574	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0807	Min score: 0.8993	#Pop: 128	#M+: 1391	#M-: 30
EvolutionarySearch		#s: 128	Time elapsed: 7.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.79 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2006	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.7965	Min score: 0.2551	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9647	Min score: 0.7803	#Pop: 128	#M+: 1385	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 5.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.75 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.5958	Min score: 0.2242	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9786	Min score: 0.7995	#Pop: 128	#M+: 1380	#M-: 86
EvolutionarySearch		#s: 128	Time elapsed: 5.00
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.15 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.17 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.550 ms	Trials: 4800	Used time : 1942 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.022 |        1043.69 |    128 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.547 ms	Trials: 4864	Used time : 1966 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    320 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.542 ms	Trials: 4928	Used time : 1993 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    448 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.542 ms	Trials: 4992	Used time : 2013 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    192 |
|   26 |        0.020 |        2083.50 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2011	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6749	Min score: 0.2533	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9403	Min score: 0.6879	#Pop: 128	#M+: 1377	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.89
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.08 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2015	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.7937	Min score: 0.2383	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0036	Min score: 0.7367	#Pop: 128	#M+: 1391	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.73
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2026	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6626	Min score: 0.2281	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9959	Min score: 0.6474	#Pop: 128	#M+: 1378	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.49 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1994	fail_ct: 1	Time elapsed: 0.99
GA Iter: 0	Max score: 0.9611	Min score: 0.2462	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0211	Min score: 0.6389	#Pop: 128	#M+: 1392	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.06 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1994	fail_ct: 1	Time elapsed: 0.99
GA Iter: 0	Max score: 0.6084	Min score: 0.2492	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9591	Min score: 0.6772	#Pop: 128	#M+: 1377	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 5.99 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   27 |        0.017 |        2242.67 |    512 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.542 ms	Trials: 5056	Used time : 2037 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.011 |        2078.39 |    256 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    512 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.542 ms	Trials: 5120	Used time : 2061 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    128 |
|   27 |        0.017 |        2242.67 |    512 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.540 ms	Trials: 5184	Used time : 2085 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.019 |        2099.45 |    128 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    512 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.540 ms	Trials: 5248	Used time : 2110 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.010 |        1580.93 |    192 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    512 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.538 ms	Trials: 5312	Used time : 2134 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1931	fail_ct: 3	Time elapsed: 0.97
GA Iter: 0	Max score: 0.6683	Min score: 0.2744	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9202	Min score: 0.6307	#Pop: 128	#M+: 1377	#M-: 83
EvolutionarySearch		#s: 128	Time elapsed: 4.79
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.58 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2022	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.6079	Min score: 0.2231	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9572	Min score: 0.8572	#Pop: 128	#M+: 1383	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.27 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 0.96
GA Iter: 0	Max score: 0.7696	Min score: 0.2596	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9164	Min score: 0.6438	#Pop: 128	#M+: 1385	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.54 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1682	fail_ct: 81	Time elapsed: 1.31
GA Iter: 0	Max score: 0.7991	Min score: 0.3127	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0436	Min score: 0.7989	#Pop: 128	#M+: 1389	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 7.28
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.40 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.27 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.009 |        1619.77 |    128 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1807.08 |    256 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    512 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.535 ms	Trials: 5376	Used time : 2156 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1807.08 |    256 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    512 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.532 ms	Trials: 5440	Used time : 2182 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.017 |        1544.88 |    128 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1807.08 |    256 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    576 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.532 ms	Trials: 5504	Used time : 2212 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1807.08 |    256 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.006 |         527.60 |    128 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    576 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.530 ms	Trials: 5568	Used time : 2242 s	Next ID: 23	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    384 |
|   14 |        0.008 |        1869.71 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2009	fail_ct: 2	Time elapsed: 1.03
GA Iter: 0	Max score: 0.6567	Min score: 0.2310	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9623	Min score: 0.7886	#Pop: 128	#M+: 1382	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.00
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.21 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1992	fail_ct: 1	Time elapsed: 1.00
GA Iter: 0	Max score: 0.5999	Min score: 0.2283	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8936	Min score: 0.6418	#Pop: 128	#M+: 1381	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.80
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.19 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1971	fail_ct: 3	Time elapsed: 0.89
GA Iter: 0	Max score: 0.6219	Min score: 0.2246	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9521	Min score: 0.7392	#Pop: 128	#M+: 1382	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.80 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.08
GA Iter: 0	Max score: 0.8312	Min score: 0.2251	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9864	Min score: 0.8522	#Pop: 128	#M+: 1378	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.52
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1807.08 |    256 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    576 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.524 ms	Trials: 5632	Used time : 2270 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    448 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1807.08 |    256 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    576 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.524 ms	Trials: 5696	Used time : 2294 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    448 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.016 |        1859.97 |    128 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    576 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.524 ms	Trials: 5760	Used time : 2316 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    448 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2242.67 |    576 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.522 ms	Trials: 5824	Used time : 2344 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    448 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.012 |        1880.77 |    192 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2244.84 |    640 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1991	fail_ct: 1	Time elapsed: 1.06
GA Iter: 0	Max score: 0.5889	Min score: 0.2526	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0303	Min score: 0.8119	#Pop: 128	#M+: 1389	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.96
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.53 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1997	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.7438	Min score: 0.2437	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9550	Min score: 0.7947	#Pop: 128	#M+: 1380	#M-: 84
EvolutionarySearch		#s: 128	Time elapsed: 5.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.37 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2025	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7358	Min score: 0.2056	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9697	Min score: 0.7014	#Pop: 128	#M+: 1375	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.43
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.01 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2008	fail_ct: 2	Time elapsed: 1.03
GA Iter: 0	Max score: 0.7826	Min score: 0.2583	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9680	Min score: 0.7970	#Pop: 128	#M+: 1379	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.00
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.97 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 6.60 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2019	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.6184	Min score: 0.2388	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9239	Min score: 0.7350	#Pop: 128	#M+: 1376	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.89
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.522 ms	Trials: 5888	Used time : 2372 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    448 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1939.65 |    256 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2244.84 |    640 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.521 ms	Trials: 5952	Used time : 2401 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    448 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2244.84 |    640 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    192 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.521 ms	Trials: 6016	Used time : 2425 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    448 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2244.84 |    640 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.521 ms	Trials: 6080	Used time : 2451 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    320 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2244.84 |    640 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.521 ms	Trials: 6144	Used time : 2473 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2025	fail_ct: 0	Time elapsed: 1.11
GA Iter: 0	Max score: 0.5325	Min score: 0.2260	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9772	Min score: 0.8669	#Pop: 128	#M+: 1374	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.68
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.21 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.72 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2002	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.7448	Min score: 0.2750	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9048	Min score: 0.7058	#Pop: 128	#M+: 1378	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.74
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.91 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1731	fail_ct: 85	Time elapsed: 1.32
GA Iter: 0	Max score: 0.7389	Min score: 0.2903	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9904	Min score: 0.8362	#Pop: 128	#M+: 1390	#M-: 45
EvolutionarySearch		#s: 128	Time elapsed: 6.68
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2244.84 |    640 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.521 ms	Trials: 6208	Used time : 2495 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2254.12 |    704 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.007 |        1095.78 |     64 |
-------------------------------------------------
Estimated total latency: 0.521 ms	Trials: 6272	Used time : 2520 s	Next ID: 32	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2254.12 |    704 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.007 |         915.45 |    192 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.519 ms	Trials: 6336	Used time : 2547 s	Next ID: 31	
.T***************************************************************Time elapsed for measurement: 23.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1702	fail_ct: 81	Time elapsed: 1.34
GA Iter: 0	Max score: 0.5419	Min score: 0.2768	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9895	Min score: 0.8788	#Pop: 128	#M+: 1384	#M-: 40
EvolutionarySearch		#s: 128	Time elapsed: 6.96
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 24.59 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.01 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2031	fail_ct: 0	Time elapsed: 1.08
GA Iter: 0	Max score: 0.7604	Min score: 0.2335	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9753	Min score: 0.7298	#Pop: 128	#M+: 1378	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 5.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.60 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2029	fail_ct: 0	Time elapsed: 1.11
GA Iter: 0	Max score: 0.5699	Min score: 0.2068	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9877	Min score: 0.7450	#Pop: 128	#M+: 1380	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.45
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.41 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2009	fail_ct: 1	Time elapsed: 1.01
GA Iter: 0	Max score: 0.8749	Min score: 0.2664	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0149	Min score: 0.8098	#Pop: 128	#M+: 1381	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.87
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.91 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.08 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2254.12 |    704 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.006 |         930.19 |    256 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.519 ms	Trials: 6400	Used time : 2587 s	Next ID: 31	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.020 |        2083.50 |    192 |
|   27 |        0.017 |        2254.12 |    704 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.515 ms	Trials: 6464	Used time : 2627 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    256 |
|   27 |        0.017 |        2254.12 |    704 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.514 ms	Trials: 6528	Used time : 2650 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.007 |        1486.40 |    128 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2254.12 |    704 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.514 ms	Trials: 6592	Used time : 2677 s	Next ID: 19	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2025	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.8351	Min score: 0.2171	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9796	Min score: 0.8594	#Pop: 128	#M+: 1373	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.79
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.55 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.42 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2011	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.6925	Min score: 0.2462	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9317	Min score: 0.8067	#Pop: 128	#M+: 1383	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.6105	Min score: 0.2272	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9455	Min score: 0.6386	#Pop: 128	#M+: 1386	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.05
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.09 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 1.00
GA Iter: 0	Max score: 0.6643	Min score: 0.2421	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9414	Min score: 0.7318	#Pop: 128	#M+: 1388	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.38 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2254.12 |    704 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.513 ms	Trials: 6656	Used time : 2707 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    512 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    768 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.512 ms	Trials: 6720	Used time : 2737 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.013 |        1160.06 |    128 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    768 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.512 ms	Trials: 6784	Used time : 2759 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1588.83 |    192 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    768 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.510 ms	Trials: 6848	Used time : 2791 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    256 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.6681	Min score: 0.2469	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9298	Min score: 0.7583	#Pop: 128	#M+: 1377	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1762	fail_ct: 0	Time elapsed: 1.36
GA Iter: 0	Max score: 0.7223	Min score: 0.3155	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9604	Min score: 0.6833	#Pop: 128	#M+: 1397	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 7.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.43 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.77 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2022	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6248	Min score: 0.2060	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9630	Min score: 0.8523	#Pop: 128	#M+: 1386	#M-: 67
EvolutionarySearch		#s: 128	Time elapsed: 5.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.96 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1997	fail_ct: 3	Time elapsed: 0.98
GA Iter: 0	Max score: 0.7194	Min score: 0.1981	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9711	Min score: 0.7561	#Pop: 128	#M+: 1387	#M-: 64
EvolutionarySearch		#s: 128	Time elapsed: 4.80
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.16 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2003	fail_ct: 0	Time elapsed: 0.93
GA Iter: 0	Max score: 0.5687	Min score: 0.2336	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9920	Min score: 0.8091	#Pop: 128	#M+: 1385	#M-: 68
EvolutionarySearch		#s: 128	Time elapsed: 4.71
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.32 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.45 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    768 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.510 ms	Trials: 6912	Used time : 2822 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.012 |         642.26 |    128 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    768 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.510 ms	Trials: 6976	Used time : 2852 s	Next ID: 7	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    768 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.505 ms	Trials: 7040	Used time : 2883 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    192 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.505 ms	Trials: 7104	Used time : 2908 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    256 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.505 ms	Trials: 7168	Used time : 2931 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.08
GA Iter: 0	Max score: 0.6974	Min score: 0.1881	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9617	Min score: 0.7576	#Pop: 128	#M+: 1379	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.18 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.54 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2019	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.7252	Min score: 0.2467	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9488	Min score: 0.8080	#Pop: 128	#M+: 1384	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 5.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.62 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.58 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2008	fail_ct: 0	Time elapsed: 1.09
GA Iter: 0	Max score: 0.5066	Min score: 0.2175	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8765	Min score: 0.6519	#Pop: 128	#M+: 1387	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.34 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2008	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.6395	Min score: 0.2203	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9577	Min score: 0.6818	#Pop: 128	#M+: 1393	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 5.04
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2029.17 |    256 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.505 ms	Trials: 7232	Used time : 2954 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    576 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7296	Used time : 2980 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.79 |    192 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7360	Used time : 3006 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.95 |    256 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7424	Used time : 3035 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    192 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1755	fail_ct: 0	Time elapsed: 1.36
GA Iter: 0	Max score: 0.7055	Min score: 0.2761	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9984	Min score: 0.7969	#Pop: 128	#M+: 1393	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 7.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.58 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.57 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1770	fail_ct: 0	Time elapsed: 1.38
GA Iter: 0	Max score: 0.6811	Min score: 0.2827	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9891	Min score: 0.8493	#Pop: 128	#M+: 1383	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 7.13
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.12 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.6940	Min score: 0.2275	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9660	Min score: 0.8619	#Pop: 128	#M+: 1383	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 5.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.64 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.28 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1951	fail_ct: 3	Time elapsed: 0.92
GA Iter: 0	Max score: 0.6628	Min score: 0.2504	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9392	Min score: 0.6791	#Pop: 128	#M+: 1391	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.62
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 7.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7488	Used time : 3060 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1342.71 |    256 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7552	Used time : 3088 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    832 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7616	Used time : 3117 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1869.71 |    192 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7680	Used time : 3147 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1885.17 |    256 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1944	fail_ct: 3	Time elapsed: 0.91
GA Iter: 0	Max score: 0.7944	Min score: 0.2486	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9730	Min score: 0.7062	#Pop: 128	#M+: 1384	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1708	fail_ct: 85	Time elapsed: 1.26
GA Iter: 0	Max score: 0.7914	Min score: 0.3724	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9984	Min score: 0.7355	#Pop: 128	#M+: 1386	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 6.61
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.32 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1990	fail_ct: 0	Time elapsed: 0.94
GA Iter: 0	Max score: 0.5342	Min score: 0.2088	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8696	Min score: 0.6139	#Pop: 128	#M+: 1378	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.71 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2018	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.6705	Min score: 0.2221	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9462	Min score: 0.7269	#Pop: 128	#M+: 1388	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.83
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.75 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7213	Min score: 0.2387	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9473	Min score: 0.8359	#Pop: 128	#M+: 1384	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 5.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.52 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7744	Used time : 3174 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.005 |         281.05 |     64 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.504 ms	Trials: 7808	Used time : 3199 s	Next ID: 11	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    320 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.501 ms	Trials: 7872	Used time : 3230 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    384 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.501 ms	Trials: 7936	Used time : 3254 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    640 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.501 ms	Trials: 8000	Used time : 3288 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2015	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.8579	Min score: 0.2429	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9983	Min score: 0.7719	#Pop: 128	#M+: 1378	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.72 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.10 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2029	fail_ct: 0	Time elapsed: 1.11
GA Iter: 0	Max score: 0.6916	Min score: 0.2203	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9747	Min score: 0.8648	#Pop: 128	#M+: 1381	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.74
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.42 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1700	fail_ct: 32	Time elapsed: 1.20
GA Iter: 0	Max score: 0.6949	Min score: 0.2705	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0184	Min score: 0.6600	#Pop: 128	#M+: 1386	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 6.74
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.37 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2028	fail_ct: 0	Time elapsed: 1.00
GA Iter: 0	Max score: 0.5969	Min score: 0.2110	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9174	Min score: 0.6739	#Pop: 128	#M+: 1384	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 5.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.16 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1919.11 |    128 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.501 ms	Trials: 8064	Used time : 3317 s	Next ID: 30	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    896 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.501 ms	Trials: 8128	Used time : 3341 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.005 |         456.57 |     64 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.501 ms	Trials: 8192	Used time : 3367 s	Next ID: 24	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.014 |        1827.91 |    192 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.500 ms	Trials: 8256	Used time : 3395 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1679	fail_ct: 82	Time elapsed: 1.06
GA Iter: 0	Max score: 0.7124	Min score: 0.3551	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9656	Min score: 0.7067	#Pop: 128	#M+: 1399	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 5.58
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1977	fail_ct: 4	Time elapsed: 0.89
GA Iter: 0	Max score: 0.6008	Min score: 0.1967	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9498	Min score: 0.7853	#Pop: 128	#M+: 1382	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.80 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1963	fail_ct: 2	Time elapsed: 0.83
GA Iter: 0	Max score: 0.7935	Min score: 0.1684	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9211	Min score: 0.7336	#Pop: 128	#M+: 1375	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 4.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.17 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2015	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.7654	Min score: 0.2549	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9170	Min score: 0.8331	#Pop: 128	#M+: 1378	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.07
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.65 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         295.62 |    128 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.499 ms	Trials: 8320	Used time : 3420 s	Next ID: 22	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.014 |        2135.99 |    192 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.498 ms	Trials: 8384	Used time : 3447 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    256 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.497 ms	Trials: 8448	Used time : 3473 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    704 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.497 ms	Trials: 8512	Used time : 3500 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.005 |         123.50 |     64 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1658	fail_ct: 85	Time elapsed: 1.19
GA Iter: 0	Max score: 0.8451	Min score: 0.4755	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0060	Min score: 0.7727	#Pop: 128	#M+: 1392	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 6.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.84 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2026	fail_ct: 0	Time elapsed: 1.12
GA Iter: 0	Max score: 0.5466	Min score: 0.2056	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9591	Min score: 0.8618	#Pop: 128	#M+: 1380	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.52
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.51 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2005	fail_ct: 0	Time elapsed: 1.00
GA Iter: 0	Max score: 0.7638	Min score: 0.2711	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9633	Min score: 0.7961	#Pop: 128	#M+: 1384	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1981	fail_ct: 2	Time elapsed: 0.95
GA Iter: 0	Max score: 0.5814	Min score: 0.2119	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8729	Min score: 0.6163	#Pop: 128	#M+: 1384	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2013	fail_ct: 1	Time elapsed: 0.94
GA Iter: 0	Max score: 0.6645	Min score: 0.2301	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9603	Min score: 0.7632	#Pop: 128	#M+: 1385	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.29 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.497 ms	Trials: 8576	Used time : 3529 s	Next ID: 18	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |    960 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.496 ms	Trials: 8640	Used time : 3562 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    320 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1024 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.496 ms	Trials: 8704	Used time : 3589 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    384 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1024 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.496 ms	Trials: 8768	Used time : 3617 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2192.23 |    448 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1024 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.496 ms	Trials: 8832	Used time : 3642 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2028	fail_ct: 0	Time elapsed: 1.11
GA Iter: 0	Max score: 0.6823	Min score: 0.1729	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9914	Min score: 0.8024	#Pop: 128	#M+: 1380	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.28 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2004	fail_ct: 2	Time elapsed: 0.92
GA Iter: 0	Max score: 0.7562	Min score: 0.2561	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9609	Min score: 0.8393	#Pop: 128	#M+: 1369	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.11 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.63 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2039	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.6956	Min score: 0.2291	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9730	Min score: 0.7084	#Pop: 128	#M+: 1387	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.17 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.5627	Min score: 0.1984	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9696	Min score: 0.8674	#Pop: 128	#M+: 1387	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.19 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1024 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    320 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.495 ms	Trials: 8896	Used time : 3672 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.009 |        1672.98 |    128 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1024 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.495 ms	Trials: 8960	Used time : 3703 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2012.09 |    256 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1024 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.495 ms	Trials: 9024	Used time : 3728 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1024 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.495 ms	Trials: 9088	Used time : 3759 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.009 |         301.14 |    128 |
|   13 |        0.017 |        2284.47 |    768 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1850	fail_ct: 55	Time elapsed: 0.64
GA Iter: 0	Max score: 0.8395	Min score: 0.4149	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9722	Min score: 0.8057	#Pop: 128	#M+: 1376	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 3.11
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.61 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.20 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6826	Min score: 0.2509	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9606	Min score: 0.8367	#Pop: 128	#M+: 1378	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1688	fail_ct: 89	Time elapsed: 1.21
GA Iter: 0	Max score: 0.6487	Min score: 0.2859	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0004	Min score: 0.8501	#Pop: 128	#M+: 1388	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 5.89
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.67 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2009	fail_ct: 1	Time elapsed: 0.93
GA Iter: 0	Max score: 0.7898	Min score: 0.2778	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9572	Min score: 0.8209	#Pop: 128	#M+: 1374	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.55
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1088 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.495 ms	Trials: 9152	Used time : 3793 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2284.47 |    768 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1088 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.495 ms	Trials: 9216	Used time : 3816 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         551.06 |    128 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1088 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.494 ms	Trials: 9280	Used time : 3843 s	Next ID: 0	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1579.64 |    192 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1088 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.494 ms	Trials: 9344	Used time : 3870 s	Next ID: 19	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    256 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2005	fail_ct: 2	Time elapsed: 0.99
GA Iter: 0	Max score: 0.7138	Min score: 0.2978	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9724	Min score: 0.8243	#Pop: 128	#M+: 1382	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.91
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   27 |        0.017 |        2292.85 |   1088 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.494 ms	Trials: 9408	Used time : 3903 s	Next ID: 19	
.T***************************************************************Time elapsed for measurement: 22.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.02 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2010	fail_ct: 1	Time elapsed: 0.90
GA Iter: 0	Max score: 0.5007	Min score: 0.2341	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9786	Min score: 0.5155	#Pop: 128	#M+: 1390	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.30
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2025	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.5758	Min score: 0.2195	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9639	Min score: 0.8802	#Pop: 128	#M+: 1395	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 5.52
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.54 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1715	fail_ct: 53	Time elapsed: 1.37
GA Iter: 0	Max score: 0.6070	Min score: 0.1961	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.1506	Min score: 0.7425	#Pop: 128	#M+: 1385	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 7.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.36 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2022	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.5873	Min score: 0.2378	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9610	Min score: 0.7902	#Pop: 128	#M+: 1394	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.96 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1599.87 |    128 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1088 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.494 ms	Trials: 9472	Used time : 3942 s	Next ID: 16	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2292.85 |   1088 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.494 ms	Trials: 9536	Used time : 3972 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.008 |         750.85 |    128 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.494 ms	Trials: 9600	Used time : 4001 s	Next ID: 28	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    320 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.493 ms	Trials: 9664	Used time : 4042 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1697	fail_ct: 74	Time elapsed: 1.28
GA Iter: 0	Max score: 0.6887	Min score: 0.2628	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9777	Min score: 0.7815	#Pop: 128	#M+: 1391	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 6.04
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.05 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.43 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2018	fail_ct: 1	Time elapsed: 1.04
GA Iter: 0	Max score: 0.7650	Min score: 0.2505	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9351	Min score: 0.8395	#Pop: 128	#M+: 1396	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.04 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.24 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2017	fail_ct: 0	Time elapsed: 1.00
GA Iter: 0	Max score: 0.5707	Min score: 0.2184	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9463	Min score: 0.7033	#Pop: 128	#M+: 1386	#M-: 81
EvolutionarySearch		#s: 128	Time elapsed: 5.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.21 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.36 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1729	fail_ct: 96	Time elapsed: 1.33
GA Iter: 0	Max score: 0.4679	Min score: 0.2219	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0349	Min score: 0.8207	#Pop: 128	#M+: 1381	#M-: 38
EvolutionarySearch		#s: 128	Time elapsed: 6.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.66 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 8.50 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.004 |         760.00 |    192 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.493 ms	Trials: 9728	Used time : 4072 s	Next ID: 23	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    832 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.491 ms	Trials: 9792	Used time : 4102 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1290.95 |    320 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.491 ms	Trials: 9856	Used time : 4136 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1217.93 |    320 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.491 ms	Trials: 9920	Used time : 4163 s	Next ID: 31	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2026	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.5683	Min score: 0.2326	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9600	Min score: 0.7769	#Pop: 128	#M+: 1383	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.71 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2025	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.6465	Min score: 0.2219	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9674	Min score: 0.8761	#Pop: 128	#M+: 1372	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.53 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1996	fail_ct: 1	Time elapsed: 1.03
GA Iter: 0	Max score: 0.7797	Min score: 0.2631	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9744	Min score: 0.8002	#Pop: 128	#M+: 1375	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.37
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.47 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1745	fail_ct: 0	Time elapsed: 1.35
GA Iter: 0	Max score: 0.6834	Min score: 0.2785	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0004	Min score: 0.8688	#Pop: 128	#M+: 1376	#M-: 32
EvolutionarySearch		#s: 128	Time elapsed: 7.48
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.55 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.76 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1690	fail_ct: 85	Time elapsed: 1.31
GA Iter: 0	Max score: 0.5555	Min score: 0.2265	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9020	Min score: 0.7237	#Pop: 128	#M+: 1389	#M-: 41
EvolutionarySearch		#s: 128	Time elapsed: 7.07
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    320 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.490 ms	Trials: 9984	Used time : 4190 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1152 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.490 ms	Trials: 10048	Used time : 4226 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        1959.35 |    384 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.490 ms	Trials: 10112	Used time : 4259 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    320 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10176	Used time : 4292 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    256 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10240	Used time : 4325 s	Next ID: 23	
.T***************************************************************Time elapsed for measurement: 27.58 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.75 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 1	Time elapsed: 0.92
GA Iter: 0	Max score: 0.6349	Min score: 0.2200	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9250	Min score: 0.7850	#Pop: 128	#M+: 1380	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.46 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.84 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2028	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.6553	Min score: 0.1998	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9921	Min score: 0.8207	#Pop: 128	#M+: 1387	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.84
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 19.69 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.14 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1998	fail_ct: 2	Time elapsed: 0.77
GA Iter: 0	Max score: 0.6273	Min score: 0.2404	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9924	Min score: 0.8508	#Pop: 128	#M+: 1388	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.17
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.50 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2013	fail_ct: 2	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7311	Min score: 0.2313	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9023	Min score: 0.8285	#Pop: 128	#M+: 1380	#M-: 86
EvolutionarySearch		#s: 128	Time elapsed: 4.94
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.49 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    512 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10304	Used time : 4372 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    384 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10368	Used time : 4400 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    320 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10432	Used time : 4435 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    896 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10496	Used time : 4460 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2012	fail_ct: 0	Time elapsed: 0.93
GA Iter: 0	Max score: 0.5434	Min score: 0.1819	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8752	Min score: 0.6662	#Pop: 128	#M+: 1376	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.46 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2012	fail_ct: 0	Time elapsed: 0.90
GA Iter: 0	Max score: 0.4964	Min score: 0.1834	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9119	Min score: 0.7137	#Pop: 128	#M+: 1381	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.39
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.00 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 0	Time elapsed: 0.98
GA Iter: 0	Max score: 0.6264	Min score: 0.2274	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9634	Min score: 0.8802	#Pop: 128	#M+: 1385	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.08 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1980	fail_ct: 3	Time elapsed: 0.93
GA Iter: 0	Max score: 0.5526	Min score: 0.2286	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8362	Min score: 0.6414	#Pop: 128	#M+: 1386	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.63
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.30 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    960 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    192 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10560	Used time : 4488 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    960 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1338.14 |    256 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10624	Used time : 4512 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    960 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1216 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10688	Used time : 4538 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    960 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    448 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1280 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10752	Used time : 4566 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    960 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2031	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.6240	Min score: 0.2179	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9639	Min score: 0.8840	#Pop: 128	#M+: 1384	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.49
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.63 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1947	fail_ct: 8	Time elapsed: 0.95
GA Iter: 0	Max score: 0.7873	Min score: 0.2299	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9697	Min score: 0.7447	#Pop: 128	#M+: 1379	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.78
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.88 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.11 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2011	fail_ct: 0	Time elapsed: 1.00
GA Iter: 0	Max score: 0.6858	Min score: 0.2584	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9595	Min score: 0.8339	#Pop: 128	#M+: 1385	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 4.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.31 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.84 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1696	fail_ct: 46	Time elapsed: 1.22
GA Iter: 0	Max score: 0.6643	Min score: 0.2094	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0464	Min score: 0.7228	#Pop: 128	#M+: 1379	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 6.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 0	Time elapsed: 0.84
GA Iter: 0	Max score: 0.5612	Min score: 0.2103	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9645	Min score: 0.8204	#Pop: 128	#M+: 1381	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.57
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.34 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2302.79 |   1280 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10816	Used time : 4593 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    960 |
|   14 |        0.008 |        1885.17 |    320 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2317.79 |   1344 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10880	Used time : 4619 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |    960 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2317.79 |   1344 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 10944	Used time : 4653 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.007 |        1349.50 |    128 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1024 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2317.79 |   1344 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.489 ms	Trials: 11008	Used time : 4680 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1024 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    576 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2317.79 |   1344 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11072	Used time : 4711 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2012	fail_ct: 0	Time elapsed: 1.00
GA Iter: 0	Max score: 0.8056	Min score: 0.2364	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9660	Min score: 0.8091	#Pop: 128	#M+: 1371	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.47 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.98 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2030	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.5990	Min score: 0.2166	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9624	Min score: 0.8807	#Pop: 128	#M+: 1370	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.71
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.11 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.17 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2031	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6528	Min score: 0.2528	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9705	Min score: 0.7712	#Pop: 128	#M+: 1379	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.11 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2015	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.6819	Min score: 0.2586	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9156	Min score: 0.8321	#Pop: 128	#M+: 1381	#M-: 66
EvolutionarySearch		#s: 128	Time elapsed: 5.25
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.43 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1024 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2317.79 |   1344 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.010 |        1952.52 |    192 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11136	Used time : 4739 s	Next ID: 30	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1024 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2317.79 |   1344 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11200	Used time : 4767 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1024 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    384 |
|   27 |        0.017 |        2317.79 |   1408 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11264	Used time : 4798 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1024 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1408 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11328	Used time : 4827 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2001	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.8096	Min score: 0.2454	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9465	Min score: 0.7800	#Pop: 128	#M+: 1380	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.5799	Min score: 0.1849	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9918	Min score: 0.8171	#Pop: 128	#M+: 1378	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 5.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.75 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2030	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6342	Min score: 0.2227	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9548	Min score: 0.8826	#Pop: 128	#M+: 1385	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 5.49
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1998	fail_ct: 0	Time elapsed: 0.95
GA Iter: 0	Max score: 0.6436	Min score: 0.2050	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8169	Min score: 0.6387	#Pop: 128	#M+: 1383	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.38 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.13 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    448 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1408 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11392	Used time : 4856 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1408 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    448 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11456	Used time : 4887 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1408 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11520	Used time : 4922 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    512 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1472 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11584	Used time : 4952 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1637.97 |    384 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2022	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.8359	Min score: 0.2325	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9525	Min score: 0.8161	#Pop: 128	#M+: 1374	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.11
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.62 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 9.53 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2005	fail_ct: 0	Time elapsed: 0.91
GA Iter: 0	Max score: 0.7605	Min score: 0.2211	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9745	Min score: 0.8190	#Pop: 128	#M+: 1379	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.42
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.94 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.11 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.6788	Min score: 0.2143	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9720	Min score: 0.8816	#Pop: 128	#M+: 1384	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.35
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.78 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2015	fail_ct: 1	Time elapsed: 1.08
GA Iter: 0	Max score: 0.9137	Min score: 0.2382	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9694	Min score: 0.8306	#Pop: 128	#M+: 1386	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 5.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.04 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1661	fail_ct: 92	Time elapsed: 1.17
GA Iter: 0	Max score: 0.7278	Min score: 0.3279	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0293	Min score: 0.8145	#Pop: 128	#M+: 1388	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 5.98
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.64 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 10.94 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1472 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11648	Used time : 4984 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    640 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1472 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11712	Used time : 5013 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2317.79 |   1472 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.488 ms	Trials: 11776	Used time : 5044 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1088 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.487 ms	Trials: 11840	Used time : 5071 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    192 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.487 ms	Trials: 11904	Used time : 5103 s	Next ID: 22	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1662	fail_ct: 91	Time elapsed: 1.14
GA Iter: 0	Max score: 0.6965	Min score: 0.3253	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0205	Min score: 0.8692	#Pop: 128	#M+: 1387	#M-: 29
EvolutionarySearch		#s: 128	Time elapsed: 5.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.6315	Min score: 0.1984	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9588	Min score: 0.7549	#Pop: 128	#M+: 1395	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.19
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.80 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.84 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1935	fail_ct: 13	Time elapsed: 0.91
GA Iter: 0	Max score: 0.7693	Min score: 0.2464	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9509	Min score: 0.7125	#Pop: 128	#M+: 1389	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.27
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.52 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.98 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1970	fail_ct: 2	Time elapsed: 0.91
GA Iter: 0	Max score: 0.8796	Min score: 0.1768	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9505	Min score: 0.7459	#Pop: 128	#M+: 1386	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 4.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.44 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 11.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         317.64 |    256 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.487 ms	Trials: 11968	Used time : 5131 s	Next ID: 22	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.013 |        2029.52 |    320 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.487 ms	Trials: 12032	Used time : 5163 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1532.57 |    128 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.485 ms	Trials: 12096	Used time : 5197 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2252.55 |    320 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.485 ms	Trials: 12160	Used time : 5229 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2312.66 |    384 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1992	fail_ct: 0	Time elapsed: 0.85
GA Iter: 0	Max score: 0.4915	Min score: 0.2319	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9825	Min score: 0.8772	#Pop: 128	#M+: 1393	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.71
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.05 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.20 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2013	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.6976	Min score: 0.1918	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9734	Min score: 0.8809	#Pop: 128	#M+: 1387	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.37 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1724	fail_ct: 81	Time elapsed: 1.30
GA Iter: 0	Max score: 0.5845	Min score: 0.2068	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0094	Min score: 0.8672	#Pop: 128	#M+: 1381	#M-: 43
EvolutionarySearch		#s: 128	Time elapsed: 6.88
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.92 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.30 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2003	fail_ct: 0	Time elapsed: 0.90
GA Iter: 0	Max score: 0.6478	Min score: 0.2097	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9452	Min score: 0.7798	#Pop: 128	#M+: 1384	#M-: 66
EvolutionarySearch		#s: 128	Time elapsed: 4.73
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.34 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.06 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.485 ms	Trials: 12224	Used time : 5262 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1536 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.485 ms	Trials: 12288	Used time : 5293 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1274.18 |    384 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.485 ms	Trials: 12352	Used time : 5326 s	Next ID: 31	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    256 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.484 ms	Trials: 12416	Used time : 5359 s	Next ID: 30	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    384 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 0	Time elapsed: 0.88
GA Iter: 0	Max score: 0.6428	Min score: 0.2099	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.7256	#Pop: 128	#M+: 1374	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.83 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2005	fail_ct: 1	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7769	Min score: 0.2358	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9698	Min score: 0.8276	#Pop: 128	#M+: 1381	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.23 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 0	Time elapsed: 1.40
GA Iter: 0	Max score: 0.5692	Min score: 0.2434	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9894	Min score: 0.8735	#Pop: 128	#M+: 1374	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 7.45
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.69 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1849	fail_ct: 55	Time elapsed: 0.67
GA Iter: 0	Max score: 0.9049	Min score: 0.4021	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9665	Min score: 0.8764	#Pop: 128	#M+: 1376	#M-: 83
EvolutionarySearch		#s: 128	Time elapsed: 3.41
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.05 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1994	fail_ct: 0	Time elapsed: 0.93
GA Iter: 0	Max score: 0.6699	Min score: 0.2329	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9503	Min score: 0.7947	#Pop: 128	#M+: 1381	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.70
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.76 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.484 ms	Trials: 12480	Used time : 5388 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1152 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.484 ms	Trials: 12544	Used time : 5426 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.017 |        1347.61 |    384 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.484 ms	Trials: 12608	Used time : 5460 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.48 |    192 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.484 ms	Trials: 12672	Used time : 5493 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.006 |        1309.92 |    128 |
-------------------------------------------------
Estimated total latency: 0.484 ms	Trials: 12736	Used time : 5521 s	Next ID: 32	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1995	fail_ct: 3	Time elapsed: 0.92
GA Iter: 0	Max score: 0.8486	Min score: 0.2208	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0001	Min score: 0.8596	#Pop: 128	#M+: 1367	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.01 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2000	fail_ct: 1	Time elapsed: 0.97
GA Iter: 0	Max score: 0.5885	Min score: 0.2286	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.7969	Min score: 0.6312	#Pop: 128	#M+: 1379	#M-: 67
EvolutionarySearch		#s: 128	Time elapsed: 4.68
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.72 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1972	fail_ct: 1	Time elapsed: 1.01
GA Iter: 0	Max score: 0.6082	Min score: 0.2600	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9376	Min score: 0.7828	#Pop: 128	#M+: 1385	#M-: 81
EvolutionarySearch		#s: 128	Time elapsed: 5.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2033	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6081	Min score: 0.2294	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9586	Min score: 0.7710	#Pop: 128	#M+: 1380	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 5.19
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.52 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.98 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1755.40 |    192 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 12800	Used time : 5550 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    576 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 12864	Used time : 5581 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    512 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 12928	Used time : 5612 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2153.35 |    448 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 12992	Used time : 5645 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2029	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.7147	Min score: 0.1983	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9600	Min score: 0.8818	#Pop: 128	#M+: 1377	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.58
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.73 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.5246	Min score: 0.2203	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9782	Min score: 0.8264	#Pop: 128	#M+: 1377	#M-: 66
EvolutionarySearch		#s: 128	Time elapsed: 4.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.17 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.5613	Min score: 0.2392	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9958	Min score: 0.6551	#Pop: 128	#M+: 1364	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.55 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.08 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.00
GA Iter: 0	Max score: 0.6238	Min score: 0.2511	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0075	Min score: 0.8257	#Pop: 128	#M+: 1377	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.78
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.03 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1600 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 13056	Used time : 5677 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    704 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 13120	Used time : 5711 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1609.56 |    192 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 13184	Used time : 5740 s	Next ID: 16	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1666.30 |    256 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 13248	Used time : 5777 s	Next ID: 16	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1778.95 |    256 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2000	fail_ct: 3	Time elapsed: 0.93
GA Iter: 0	Max score: 0.7287	Min score: 0.2228	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9914	Min score: 0.8628	#Pop: 128	#M+: 1376	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.83
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.42 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.42 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2028	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.7574	Min score: 0.1675	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9903	Min score: 0.8646	#Pop: 128	#M+: 1385	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.92
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.09 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.58 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1939	fail_ct: 4	Time elapsed: 0.83
GA Iter: 0	Max score: 0.5502	Min score: 0.2215	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9897	Min score: 0.7399	#Pop: 128	#M+: 1373	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2006	fail_ct: 0	Time elapsed: 0.95
GA Iter: 0	Max score: 0.6367	Min score: 0.2546	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9583	Min score: 0.8269	#Pop: 128	#M+: 1387	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 5.05
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.45 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1707	fail_ct: 69	Time elapsed: 1.34
GA Iter: 0	Max score: 0.5314	Min score: 0.2369	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9504	Min score: 0.7603	#Pop: 128	#M+: 1396	#M-: 38
EvolutionarySearch		#s: 128	Time elapsed: 7.55
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.89 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.57 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.483 ms	Trials: 13312	Used time : 5807 s	Next ID: 6	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    512 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13376	Used time : 5836 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    384 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13440	Used time : 5868 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1216 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13504	Used time : 5897 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1280 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         875.12 |    320 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13568	Used time : 5929 s	Next ID: 23	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    192 |
|    1 |        0.006 |        1644.19 |    448 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1720	fail_ct: 85	Time elapsed: 1.26
GA Iter: 0	Max score: 0.6842	Min score: 0.2865	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9790	Min score: 0.9021	#Pop: 128	#M+: 1388	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 6.46
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.19 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.30 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2025	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.7624	Min score: 0.2006	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9657	Min score: 0.8858	#Pop: 128	#M+: 1380	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 5.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2019	fail_ct: 0	Time elapsed: 0.94
GA Iter: 0	Max score: 0.6044	Min score: 0.2180	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9635	Min score: 0.7981	#Pop: 128	#M+: 1389	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.71
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.36 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2009	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.7307	Min score: 0.2478	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9570	Min score: 0.8210	#Pop: 128	#M+: 1382	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.13
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.98 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1280 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13632	Used time : 5962 s	Next ID: 0	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1280 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1664 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13696	Used time : 5999 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    448 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1280 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1728 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13760	Used time : 6033 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1280 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1728 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13824	Used time : 6065 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1993	fail_ct: 1	Time elapsed: 0.97
GA Iter: 0	Max score: 0.7927	Min score: 0.2707	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9660	Min score: 0.8307	#Pop: 128	#M+: 1372	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.92
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.29 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.41 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2030	fail_ct: 0	Time elapsed: 1.11
GA Iter: 0	Max score: 0.8164	Min score: 0.2036	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9718	Min score: 0.8906	#Pop: 128	#M+: 1378	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.44
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2017	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.6364	Min score: 0.2245	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9713	Min score: 0.8333	#Pop: 128	#M+: 1380	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.04
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.85 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.19 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1997	fail_ct: 2	Time elapsed: 0.94
GA Iter: 0	Max score: 0.6008	Min score: 0.2393	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9765	Min score: 0.8777	#Pop: 128	#M+: 1368	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.37
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.48 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1586.86 |    320 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1728 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13888	Used time : 6096 s	Next ID: 19	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1728 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 13952	Used time : 6126 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2208.08 |    768 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14016	Used time : 6167 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    448 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14080	Used time : 6196 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1839.65 |    640 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1996	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.6693	Min score: 0.2228	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8238	Min score: 0.6441	#Pop: 128	#M+: 1383	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.62
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.69 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2000	fail_ct: 1	Time elapsed: 1.04
GA Iter: 0	Max score: 0.6676	Min score: 0.2459	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9330	Min score: 0.7927	#Pop: 128	#M+: 1376	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.03 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1707	fail_ct: 95	Time elapsed: 1.34
GA Iter: 0	Max score: 0.7701	Min score: 0.2092	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9847	Min score: 0.8110	#Pop: 128	#M+: 1378	#M-: 43
EvolutionarySearch		#s: 128	Time elapsed: 7.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14144	Used time : 6231 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    576 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14208	Used time : 6260 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    448 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14272	Used time : 6290 s	Next ID: 31	
.T***************************************************************Time elapsed for measurement: 23.70 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.64 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1743	fail_ct: 0	Time elapsed: 1.17
GA Iter: 0	Max score: 0.6609	Min score: 0.2188	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0177	Min score: 0.6499	#Pop: 128	#M+: 1380	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 6.91
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.13 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1744	fail_ct: 0	Time elapsed: 1.37
GA Iter: 0	Max score: 0.4621	Min score: 0.2010	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9638	Min score: 0.8391	#Pop: 128	#M+: 1392	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 7.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.75 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2002	fail_ct: 0	Time elapsed: 1.08
GA Iter: 0	Max score: 0.6573	Min score: 0.2169	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9861	Min score: 0.7298	#Pop: 128	#M+: 1393	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.38
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2026	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6070	Min score: 0.2042	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9747	Min score: 0.8897	#Pop: 128	#M+: 1393	#M-: 85
EvolutionarySearch		#s: 128	Time elapsed: 5.47
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.46 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1104.97 |    192 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14336	Used time : 6336 s	Next ID: 7	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    256 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14400	Used time : 6373 s	Next ID: 7	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    448 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14464	Used time : 6412 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1792 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14528	Used time : 6445 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2011	fail_ct: 1	Time elapsed: 1.04
GA Iter: 0	Max score: 0.7160	Min score: 0.2352	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9569	Min score: 0.8213	#Pop: 128	#M+: 1379	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.12
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.47 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.70 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.7090	Min score: 0.1794	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9947	Min score: 0.8545	#Pop: 128	#M+: 1375	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.25
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.21 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1842	fail_ct: 46	Time elapsed: 0.67
GA Iter: 0	Max score: 0.8751	Min score: 0.3999	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9691	Min score: 0.8560	#Pop: 128	#M+: 1384	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 3.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.82 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2033	fail_ct: 0	Time elapsed: 0.93
GA Iter: 0	Max score: 0.7040	Min score: 0.1929	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9850	Min score: 0.8163	#Pop: 128	#M+: 1381	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.91
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.95 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.93 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1344 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1856 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14592	Used time : 6477 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1856 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    576 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14656	Used time : 6513 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         306.53 |    256 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1856 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.482 ms	Trials: 14720	Used time : 6550 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2157.62 |    512 |
|   27 |        0.017 |        2329.05 |   1856 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.481 ms	Trials: 14784	Used time : 6579 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    448 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1747	fail_ct: 0	Time elapsed: 1.38
GA Iter: 0	Max score: 0.8183	Min score: 0.2429	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9749	Min score: 0.8543	#Pop: 128	#M+: 1382	#M-: 28
EvolutionarySearch		#s: 128	Time elapsed: 7.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.07 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1684	fail_ct: 95	Time elapsed: 1.29
GA Iter: 0	Max score: 0.8617	Min score: 0.3014	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0126	Min score: 0.9326	#Pop: 128	#M+: 1392	#M-: 19
EvolutionarySearch		#s: 128	Time elapsed: 6.95
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.17 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2032	fail_ct: 0	Time elapsed: 1.12
GA Iter: 0	Max score: 0.6144	Min score: 0.2064	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9721	Min score: 0.8846	#Pop: 128	#M+: 1383	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.42
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1706	fail_ct: 58	Time elapsed: 1.20
GA Iter: 0	Max score: 0.5034	Min score: 0.1835	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0115	Min score: 0.8267	#Pop: 128	#M+: 1383	#M-: 27
EvolutionarySearch		#s: 128	Time elapsed: 6.64
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.75 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1715	fail_ct: 56	Time elapsed: 1.17
GA Iter: 0	Max score: 0.4328	Min score: 0.1717	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9367	Min score: 0.7969	#Pop: 128	#M+: 1388	#M-: 31
EvolutionarySearch		#s: 128	Time elapsed: 6.90
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.60 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1856 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.481 ms	Trials: 14848	Used time : 6610 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         572.94 |    256 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1856 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.481 ms	Trials: 14912	Used time : 6644 s	Next ID: 0	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1856 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.481 ms	Trials: 14976	Used time : 6682 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.007 |         870.04 |    192 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.481 ms	Trials: 15040	Used time : 6711 s	Next ID: 28	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |         991.22 |    256 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.480 ms	Trials: 15104	Used time : 6752 s	Next ID: 28	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2013	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.7679	Min score: 0.2274	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9817	Min score: 0.8361	#Pop: 128	#M+: 1384	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.27
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.28 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 22.49 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2021	fail_ct: 1	Time elapsed: 1.03
GA Iter: 0	Max score: 0.6467	Min score: 0.2438	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9429	Min score: 0.8219	#Pop: 128	#M+: 1375	#M-: 67
EvolutionarySearch		#s: 128	Time elapsed: 5.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.84 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 12.38 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1967	fail_ct: 4	Time elapsed: 0.85
GA Iter: 0	Max score: 0.6014	Min score: 0.1725	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9676	Min score: 0.7524	#Pop: 128	#M+: 1373	#M-: 68
EvolutionarySearch		#s: 128	Time elapsed: 4.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.65 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1950	fail_ct: 6	Time elapsed: 0.78
GA Iter: 0	Max score: 0.7111	Min score: 0.2396	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9828	Min score: 0.7508	#Pop: 128	#M+: 1370	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.29
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.45 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.64 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2210.16 |    832 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.480 ms	Trials: 15168	Used time : 6794 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2301.82 |   1408 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.480 ms	Trials: 15232	Used time : 6836 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    384 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15296	Used time : 6864 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1885.17 |    448 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15360	Used time : 6894 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    512 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2028	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7498	Min score: 0.2239	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9329	Min score: 0.8014	#Pop: 128	#M+: 1381	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.91 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.22 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.5533	Min score: 0.1826	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9305	Min score: 0.6989	#Pop: 128	#M+: 1374	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.75 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1981	fail_ct: 3	Time elapsed: 0.95
GA Iter: 0	Max score: 0.6154	Min score: 0.2110	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8206	Min score: 0.6464	#Pop: 128	#M+: 1383	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.76 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.15 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2021	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.6007	Min score: 0.2079	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9564	Min score: 0.8838	#Pop: 128	#M+: 1383	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.16 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15424	Used time : 6923 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    320 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15488	Used time : 6961 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    704 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15552	Used time : 6991 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1920 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15616	Used time : 7026 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |     64 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 20	fail_ct: 1894	Time elapsed: 0.51
GA Iter: 0	Max score: 0.3719	Min score: 0.3542	#Pop: 2	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.7904	Min score: 0.3247	#Pop: 46	#M+: 433	#M-: 6447
EvolutionarySearch		#s: 46	Time elapsed: 2.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 46 programs to measure:
..............................................**********************************************Time elapsed for measurement: 6.00 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2020	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.7391	Min score: 0.2412	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9432	Min score: 0.8140	#Pop: 128	#M+: 1388	#M-: 83
EvolutionarySearch		#s: 128	Time elapsed: 5.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.84 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.48 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2022	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.6227	Min score: 0.2032	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9670	Min score: 0.8837	#Pop: 128	#M+: 1384	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 5.49
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.59 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.48 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1986	fail_ct: 4	Time elapsed: 0.95
GA Iter: 0	Max score: 0.8946	Min score: 0.2207	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9754	Min score: 0.8710	#Pop: 128	#M+: 1379	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.96 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1987	fail_ct: 1	Time elapsed: 0.89
GA Iter: 0	Max score: 0.6931	Min score: 0.2427	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9451	Min score: 0.8023	#Pop: 128	#M+: 1390	#M-: 87
EvolutionarySearch		#s: 128	Time elapsed: 5.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.76 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.03 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1984 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15680	Used time : 7064 s	Next ID: 9	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1472 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1984 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15726	Used time : 7087 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1536 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   1984 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15790	Used time : 7124 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    512 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1536 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15854	Used time : 7157 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1536 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    640 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15918	Used time : 7188 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2026	fail_ct: 1	Time elapsed: 1.14
GA Iter: 0	Max score: 0.6125	Min score: 0.1542	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9909	Min score: 0.8506	#Pop: 128	#M+: 1388	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.77 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 0.94
GA Iter: 0	Max score: 0.5326	Min score: 0.1983	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9180	Min score: 0.7076	#Pop: 128	#M+: 1373	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.63
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.42 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.67 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2017	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.7004	Min score: 0.2313	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9638	Min score: 0.8332	#Pop: 128	#M+: 1366	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 13.96 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2012	fail_ct: 0	Time elapsed: 1.08
GA Iter: 0	Max score: 0.7562	Min score: 0.2512	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9638	Min score: 0.8143	#Pop: 128	#M+: 1380	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.18
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.69 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.12 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1536 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    640 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 15982	Used time : 7227 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    384 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1536 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16046	Used time : 7264 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1536 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2218.04 |    896 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16110	Used time : 7303 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1536 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16174	Used time : 7333 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.017 |        1306.92 |    512 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.6552	Min score: 0.2119	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9748	Min score: 0.7555	#Pop: 128	#M+: 1379	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.28
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.61 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.30 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.5837	Min score: 0.2024	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9753	Min score: 0.8883	#Pop: 128	#M+: 1386	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.40
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 17.63 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.43 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2030	fail_ct: 0	Time elapsed: 1.03
GA Iter: 0	Max score: 0.5774	Min score: 0.2061	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9923	Min score: 0.8443	#Pop: 128	#M+: 1384	#M-: 67
EvolutionarySearch		#s: 128	Time elapsed: 5.20
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.49 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.06 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1751	fail_ct: 0	Time elapsed: 1.43
GA Iter: 0	Max score: 0.7104	Min score: 0.2425	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9829	Min score: 0.8624	#Pop: 128	#M+: 1383	#M-: 35
EvolutionarySearch		#s: 128	Time elapsed: 7.15
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.14 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.73 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16238	Used time : 7371 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2048 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16302	Used time : 7409 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    576 |
|   27 |        0.017 |        2329.05 |   2112 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16366	Used time : 7450 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    512 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2112 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16430	Used time : 7480 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    768 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1993	fail_ct: 2	Time elapsed: 1.00
GA Iter: 0	Max score: 0.5662	Min score: 0.2425	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8592	Min score: 0.6476	#Pop: 128	#M+: 1383	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2026	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.6163	Min score: 0.2116	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9661	Min score: 0.8837	#Pop: 128	#M+: 1378	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 5.56
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.17 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.34 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1694	fail_ct: 40	Time elapsed: 1.26
GA Iter: 0	Max score: 0.4623	Min score: 0.1696	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9963	Min score: 0.7901	#Pop: 128	#M+: 1392	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 6.94
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.62 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1717	fail_ct: 46	Time elapsed: 1.19
GA Iter: 0	Max score: 0.6517	Min score: 0.1591	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.1067	Min score: 0.8026	#Pop: 128	#M+: 1388	#M-: 34
EvolutionarySearch		#s: 128	Time elapsed: 6.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.57 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.39 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2018	fail_ct: 0	Time elapsed: 0.99
GA Iter: 0	Max score: 0.7710	Min score: 0.2664	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9594	Min score: 0.8295	#Pop: 128	#M+: 1382	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.16
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.54 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.57 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2112 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16494	Used time : 7525 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2112 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16558	Used time : 7563 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1478.37 |    192 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16622	Used time : 7596 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    256 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16686	Used time : 7633 s	Next ID: 4	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    384 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16750	Used time : 7671 s	Next ID: 19	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2013	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.7845	Min score: 0.2383	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9347	Min score: 0.8027	#Pop: 128	#M+: 1372	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.09
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.87 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.04 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7122	Min score: 0.2179	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9480	Min score: 0.8163	#Pop: 128	#M+: 1391	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.93 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.72 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1944	fail_ct: 6	Time elapsed: 0.85
GA Iter: 0	Max score: 0.6946	Min score: 0.2266	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9748	Min score: 0.7412	#Pop: 128	#M+: 1382	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.47
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.33 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.19 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2011	fail_ct: 0	Time elapsed: 0.96
GA Iter: 0	Max score: 0.6212	Min score: 0.2175	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9642	Min score: 0.8238	#Pop: 128	#M+: 1394	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.75
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.12 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1600 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16814	Used time : 7711 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    576 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16878	Used time : 7748 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    512 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 16942	Used time : 7781 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |    960 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 17006	Used time : 7815 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2034	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7503	Min score: 0.1984	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9677	Min score: 0.8857	#Pop: 128	#M+: 1388	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.79 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.55 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1994	fail_ct: 1	Time elapsed: 1.02
GA Iter: 0	Max score: 0.6169	Min score: 0.2409	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9449	Min score: 0.8065	#Pop: 128	#M+: 1379	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.35
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.90 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.89 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2024	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.4479	Min score: 0.1737	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9878	Min score: 0.8729	#Pop: 128	#M+: 1379	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 5.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.12 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.49 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2006	fail_ct: 1	Time elapsed: 0.94
GA Iter: 0	Max score: 0.6564	Min score: 0.2238	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9459	Min score: 0.7944	#Pop: 128	#M+: 1375	#M-: 64
EvolutionarySearch		#s: 128	Time elapsed: 4.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.65 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2176 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 17070	Used time : 7849 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    704 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2240 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 17134	Used time : 7888 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2240 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    704 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 17198	Used time : 7923 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2240 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2035.02 |    320 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.479 ms	Trials: 17262	Used time : 7960 s	Next ID: 30	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    576 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2000	fail_ct: 0	Time elapsed: 0.77
GA Iter: 0	Max score: 0.7749	Min score: 0.2165	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9833	Min score: 0.8762	#Pop: 128	#M+: 1372	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.08
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 22.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2008	fail_ct: 0	Time elapsed: 1.07
GA Iter: 0	Max score: 0.6497	Min score: 0.2290	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9369	Min score: 0.7991	#Pop: 128	#M+: 1375	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.15
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.50 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.47 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2018	fail_ct: 0	Time elapsed: 0.96
GA Iter: 0	Max score: 0.7173	Min score: 0.2068	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9512	Min score: 0.8884	#Pop: 128	#M+: 1382	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.05
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.96 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.48 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1963	fail_ct: 3	Time elapsed: 0.95
GA Iter: 0	Max score: 0.6562	Min score: 0.1706	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9265	Min score: 0.7516	#Pop: 128	#M+: 1370	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.70
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.43 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.85 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1944	fail_ct: 4	Time elapsed: 0.95
GA Iter: 0	Max score: 0.8194	Min score: 0.2498	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9706	Min score: 0.7791	#Pop: 128	#M+: 1372	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.44
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.52 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.59 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   27 |        0.017 |        2329.05 |   2240 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17326	Used time : 7992 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1664 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2240 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17390	Used time : 8029 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2240 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17454	Used time : 8063 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    448 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2304 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17518	Used time : 8103 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1582.24 |    192 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2304 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17582	Used time : 8138 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1933	fail_ct: 9	Time elapsed: 0.91
GA Iter: 0	Max score: 0.8963	Min score: 0.2195	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9828	Min score: 0.8005	#Pop: 128	#M+: 1371	#M-: 66
EvolutionarySearch		#s: 128	Time elapsed: 4.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 23.61 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1997	fail_ct: 1	Time elapsed: 0.99
GA Iter: 0	Max score: 0.5689	Min score: 0.2263	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9107	Min score: 0.6588	#Pop: 128	#M+: 1391	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.70
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.69 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.91 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2035	fail_ct: 0	Time elapsed: 1.15
GA Iter: 0	Max score: 0.5372	Min score: 0.1942	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9889	Min score: 0.8656	#Pop: 128	#M+: 1377	#M-: 66
EvolutionarySearch		#s: 128	Time elapsed: 5.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.29 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2015	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.7639	Min score: 0.2160	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9654	Min score: 0.8812	#Pop: 128	#M+: 1380	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.86 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.24 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1590.80 |    256 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2304 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17646	Used time : 8174 s	Next ID: 10	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    832 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2304 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17710	Used time : 8212 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.019 |        2208.21 |    640 |
|   27 |        0.017 |        2329.05 |   2304 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17774	Used time : 8245 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2304 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17838	Used time : 8277 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2013	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.9216	Min score: 0.2305	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9776	Min score: 0.8352	#Pop: 128	#M+: 1388	#M-: 84
EvolutionarySearch		#s: 128	Time elapsed: 5.39
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 16.74 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.33 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2017	fail_ct: 1	Time elapsed: 1.03
GA Iter: 0	Max score: 0.6835	Min score: 0.2292	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9401	Min score: 0.8033	#Pop: 128	#M+: 1380	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 4.86
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.48 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.83 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2018	fail_ct: 0	Time elapsed: 1.08
GA Iter: 0	Max score: 0.5951	Min score: 0.2191	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9714	Min score: 0.7482	#Pop: 128	#M+: 1378	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.47 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.15 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1702	fail_ct: 71	Time elapsed: 1.36
GA Iter: 0	Max score: 0.6922	Min score: 0.2491	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9515	Min score: 0.7528	#Pop: 128	#M+: 1383	#M-: 42
EvolutionarySearch		#s: 128	Time elapsed: 7.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
...............................................................|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2219.01 |   1024 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17902	Used time : 8311 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1728 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 17966	Used time : 8353 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    576 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18030	Used time : 8389 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    384 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18094	Used time : 8428 s	Next ID: 23	
.T***************************************************************Time elapsed for measurement: 23.56 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1753	fail_ct: 0	Time elapsed: 1.12
GA Iter: 0	Max score: 0.5580	Min score: 0.2494	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0117	Min score: 0.8556	#Pop: 128	#M+: 1378	#M-: 36
EvolutionarySearch		#s: 128	Time elapsed: 7.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.25 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.23 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1762	fail_ct: 0	Time elapsed: 1.26
GA Iter: 0	Max score: 0.5738	Min score: 0.1898	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9868	Min score: 0.8682	#Pop: 128	#M+: 1396	#M-: 43
EvolutionarySearch		#s: 128	Time elapsed: 7.17
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.49 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 22.84 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1662	fail_ct: 83	Time elapsed: 1.21
GA Iter: 0	Max score: 0.7246	Min score: 0.3511	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9836	Min score: 0.8980	#Pop: 128	#M+: 1390	#M-: 26
EvolutionarySearch		#s: 128	Time elapsed: 6.44
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.83 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.05 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1662	fail_ct: 41	Time elapsed: 1.16
GA Iter: 0	Max score: 0.6901	Min score: 0.2289	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9486	Min score: 0.7460	#Pop: 128	#M+: 1385	#M-: 32
EvolutionarySearch		#s: 128	Time elapsed: 6.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 18.99 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    576 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18158	Used time : 8478 s	Next ID: 2	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1180.10 |    320 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18222	Used time : 8516 s	Next ID: 7	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    320 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18286	Used time : 8559 s	Next ID: 22	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         621.32 |    128 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18350	Used time : 8603 s	Next ID: 24	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2023	fail_ct: 0	Time elapsed: 1.09
GA Iter: 0	Max score: 0.7831	Min score: 0.2057	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9583	Min score: 0.8818	#Pop: 128	#M+: 1369	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.68
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.78 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.90 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2027	fail_ct: 0	Time elapsed: 1.02
GA Iter: 0	Max score: 0.5860	Min score: 0.2230	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9327	Min score: 0.8057	#Pop: 128	#M+: 1387	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.13
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1754	fail_ct: 81	Time elapsed: 1.36
GA Iter: 0	Max score: 0.4613	Min score: 0.2036	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9333	Min score: 0.7966	#Pop: 128	#M+: 1387	#M-: 50
EvolutionarySearch		#s: 128	Time elapsed: 7.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.16 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.35 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1996	fail_ct: 0	Time elapsed: 0.92
GA Iter: 0	Max score: 0.7203	Min score: 0.2329	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9436	Min score: 0.7916	#Pop: 128	#M+: 1379	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.82
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 14.18 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2368 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18414	Used time : 8647 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    640 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18478	Used time : 8690 s	Next ID: 1	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    512 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18542	Used time : 8727 s	Next ID: 31	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    768 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18606	Used time : 8770 s	Next ID: 20	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2017	fail_ct: 0	Time elapsed: 0.81
GA Iter: 0	Max score: 0.6247	Min score: 0.1674	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9905	Min score: 0.8814	#Pop: 128	#M+: 1387	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.66
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.35 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.93 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2010	fail_ct: 1	Time elapsed: 1.00
GA Iter: 0	Max score: 0.7553	Min score: 0.2219	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9224	Min score: 0.8063	#Pop: 128	#M+: 1375	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 5.07
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.41 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 26.31 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 1	Time elapsed: 0.91
GA Iter: 0	Max score: 0.5070	Min score: 0.1927	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9015	Min score: 0.7153	#Pop: 128	#M+: 1379	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.89
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.98 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 23.51 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1954	fail_ct: 12	Time elapsed: 0.89
GA Iter: 0	Max score: 0.6836	Min score: 0.2214	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9777	Min score: 0.7402	#Pop: 128	#M+: 1390	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 4.72
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.37 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 22.76 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2022	fail_ct: 0	Time elapsed: 0.97
GA Iter: 0	Max score: 0.7738	Min score: 0.2101	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9537	Min score: 0.8857	#Pop: 128	#M+: 1382	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.26
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 16.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    768 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18670	Used time : 8802 s	Next ID: 29	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1792 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18734	Used time : 8839 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    384 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18798	Used time : 8879 s	Next ID: 21	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    576 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18862	Used time : 8921 s	Next ID: 14	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2432 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18926	Used time : 8959 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2027	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.5648	Min score: 0.1815	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.8842	Min score: 0.7258	#Pop: 128	#M+: 1381	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.03
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.68 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1986	fail_ct: 3	Time elapsed: 0.94
GA Iter: 0	Max score: 0.6618	Min score: 0.2140	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9329	Min score: 0.6617	#Pop: 128	#M+: 1385	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.69
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.44 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 23.88 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2006	fail_ct: 2	Time elapsed: 1.01
GA Iter: 0	Max score: 0.9293	Min score: 0.2158	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9838	Min score: 0.8296	#Pop: 128	#M+: 1382	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.06 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.44 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1992	fail_ct: 3	Time elapsed: 0.97
GA Iter: 0	Max score: 0.7167	Min score: 0.2748	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9587	Min score: 0.8381	#Pop: 128	#M+: 1378	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.97
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 10.36 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 15.27 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    448 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2496 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 18990	Used time : 8991 s	Next ID: 8	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    896 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2496 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 19054	Used time : 9032 s	Next ID: 17	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2227.38 |   1088 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2496 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.478 ms	Trials: 19118	Used time : 9071 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    448 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2496 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19182	Used time : 9104 s	Next ID: 19	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2014	fail_ct: 1	Time elapsed: 0.95
GA Iter: 0	Max score: 0.7065	Min score: 0.2326	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9405	Min score: 0.8114	#Pop: 128	#M+: 1385	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.53
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.50 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.36 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2034	fail_ct: 0	Time elapsed: 1.09
GA Iter: 0	Max score: 0.6135	Min score: 0.2042	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9530	Min score: 0.8774	#Pop: 128	#M+: 1375	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.43
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.10 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.55 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2034	fail_ct: 0	Time elapsed: 1.09
GA Iter: 0	Max score: 0.8511	Min score: 0.1996	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9801	Min score: 0.8864	#Pop: 128	#M+: 1382	#M-: 82
EvolutionarySearch		#s: 128	Time elapsed: 5.27
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 15.48 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.34 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1996	fail_ct: 1	Time elapsed: 0.93
GA Iter: 0	Max score: 0.7508	Min score: 0.2315	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9673	Min score: 0.8741	#Pop: 128	#M+: 1385	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 4.67
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 8.58 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 17.97 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1856 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2496 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19246	Used time : 9135 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1920 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2496 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19310	Used time : 9169 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1920 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2214.63 |    704 |
|   27 |        0.017 |        2329.05 |   2560 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19374	Used time : 9202 s	Next ID: 26	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    640 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1920 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2560 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19438	Used time : 9241 s	Next ID: 5	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1920 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2026	fail_ct: 0	Time elapsed: 1.04
GA Iter: 0	Max score: 0.7507	Min score: 0.2085	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9483	Min score: 0.8810	#Pop: 128	#M+: 1378	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 5.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.82 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 19.26 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1841	fail_ct: 52	Time elapsed: 0.65
GA Iter: 0	Max score: 0.8927	Min score: 0.4003	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9812	Min score: 0.8751	#Pop: 128	#M+: 1385	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 3.43
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 14.03 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.25 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1959	fail_ct: 3	Time elapsed: 0.87
GA Iter: 0	Max score: 0.4057	Min score: 0.1512	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9656	Min score: 0.7452	#Pop: 128	#M+: 1384	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 4.59
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.36 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.29 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2009	fail_ct: 0	Time elapsed: 1.06
GA Iter: 0	Max score: 0.8280	Min score: 0.2414	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9351	Min score: 0.8185	#Pop: 128	#M+: 1381	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.06
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 13.30 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 21.92 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2009	fail_ct: 0	Time elapsed: 1.05
GA Iter: 0	Max score: 0.7009	Min score: 0.2134	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9741	Min score: 0.7663	#Pop: 128	#M+: 1378	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 5.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 21.47 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 18.71 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2560 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19502	Used time : 9274 s	Next ID: 27	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    320 |
|   13 |        0.017 |        2318.15 |   1920 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2624 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19566	Used time : 9311 s	Next ID: 12	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    384 |
|   13 |        0.017 |        2318.15 |   1920 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2262.11 |    512 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2624 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19630	Used time : 9350 s	Next ID: 15	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    384 |
|   13 |        0.017 |        2318.15 |   1920 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2265.99 |    576 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2624 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19694	Used time : 9383 s	Next ID: 13	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1336.66 |    640 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    384 |
|   13 |        0.017 |        2318.15 |   1984 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2265.99 |    576 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2624 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.477 ms	Trials: 19758	Used time : 9425 s	Next ID: 3	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 2016	fail_ct: 0	Time elapsed: 1.01
GA Iter: 0	Max score: 0.6243	Min score: 0.2297	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9799	Min score: 0.8310	#Pop: 128	#M+: 1373	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.10
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 9.08 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.99 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1991	fail_ct: 1	Time elapsed: 0.89
GA Iter: 0	Max score: 0.6561	Min score: 0.2244	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9061	Min score: 0.7700	#Pop: 128	#M+: 1393	#M-: 74
EvolutionarySearch		#s: 128	Time elapsed: 4.55
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 12.81 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 20.81 s
----------------------------------------------------------------------
------------------------------  [ Task Scheduler ]
----------------------------------------------------------------------
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1989	fail_ct: 2	Time elapsed: 1.02
GA Iter: 0	Max score: 0.5986	Min score: 0.2332	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9360	Min score: 0.8070	#Pop: 128	#M+: 1374	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.22
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................................................................****************************************************************Time elapsed for measurement: 11.00 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 23.96 s
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1386.04 |    704 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    384 |
|   13 |        0.017 |        2318.15 |   1984 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2265.99 |    576 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2259.94 |   1152 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2624 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.476 ms	Trials: 19822	Used time : 9471 s	Next ID: 25	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1386.04 |    704 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    384 |
|   13 |        0.017 |        2318.15 |   1984 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2265.99 |    576 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2282.31 |   1216 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2624 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    192 |
-------------------------------------------------
Estimated total latency: 0.476 ms	Trials: 19886	Used time : 9508 s	Next ID: 32	

|  ID  | Latency (ms) | Speed (GFLOPS) | Trials |
-------------------------------------------------
|    0 |        0.004 |         586.80 |    320 |
|    1 |        0.006 |        1644.19 |    704 |
|    2 |        0.016 |        1387.68 |    640 |
|    3 |        0.016 |        1386.04 |    704 |
|    4 |        0.006 |        1522.57 |    320 |
|    5 |        0.017 |        2343.39 |    704 |
|    6 |        0.008 |        1852.47 |    320 |
|    7 |        0.007 |        1231.43 |    384 |
|    8 |        0.011 |        2388.29 |    512 |
|    9 |        0.002 |          -0.00 |    128 |
|   10 |        0.006 |        1616.01 |    320 |
|   11 |        0.003 |         472.67 |    128 |
|   12 |        0.008 |         308.41 |    384 |
|   13 |        0.017 |        2318.15 |   1984 |
|   14 |        0.008 |        1894.03 |    640 |
|   15 |        0.013 |        2265.99 |    576 |
|   16 |        0.008 |        1688.42 |    320 |
|   17 |        0.008 |        1850.34 |    960 |
|   18 |        0.003 |         184.87 |    128 |
|   19 |        0.006 |        1594.77 |    512 |
|   20 |        0.011 |        2023.06 |    832 |
|   21 |        0.011 |        1383.27 |    448 |
|   22 |        0.003 |         318.36 |    384 |
|   23 |        0.003 |         885.28 |    448 |
|   24 |        0.004 |         635.27 |    192 |
|   25 |        0.010 |        2282.31 |   1216 |
|   26 |        0.018 |        2273.65 |    768 |
|   27 |        0.017 |        2329.05 |   2624 |
|   28 |        0.006 |        1014.53 |    320 |
|   29 |        0.011 |        2106.07 |    832 |
|   30 |        0.009 |        2118.92 |    384 |
|   31 |        0.005 |        1328.33 |    576 |
|   32 |        0.005 |        1456.03 |    256 |
-------------------------------------------------
Estimated total latency: 0.476 ms	Trials: 19950	Used time : 9547 s	Next ID: 20	

==== Task 0: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_7 (weight 2 key: ["193974b73c385510c28dcb191affa8cd", [1, 36, 14, 14, 16], [36, 1, 3, 3, 1, 16], [1, 36, 1, 1, 16], [1, 36, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 14, 14, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [36, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 36, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=1)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=1)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=14)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=1)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=7)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=1)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=1)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=3)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax1_o, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax2_o, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=14)
T_relu_ax3_o, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=7)
T_relu_ax4_o, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
s[T_relu].reorder(T_relu_ax0_o, T_relu_ax1_o, T_relu_ax2_o, T_relu_ax3_o, T_relu_ax4_o, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kh_o)
T_relu_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused = s[T_relu].fuse(T_relu_ax0_o, T_relu_ax1_o, T_relu_ax2_o, T_relu_ax3_o, T_relu_ax4_o)
s[T_relu].parallel(T_relu_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 64)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [112896], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [5184], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [576], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [112896], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 36, 14, 14, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [36, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 36, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 36, 14, 14, 16], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused: int32, 0, 72) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [98]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [9]), storage_scope = global {
      for (oh.outer.outer.inner: int32, 0, 14) {
        let cse_var_1: int32 = (oh.outer.outer.inner*7)
         {
          DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [98], [])[cse_var_1] = broadcast(0f32, 16)
          DepthwiseConv2d_1[(cse_var_1 + 1)] = broadcast(0f32, 16)
          DepthwiseConv2d_1[(cse_var_1 + 2)] = broadcast(0f32, 16)
          DepthwiseConv2d_1[(cse_var_1 + 3)] = broadcast(0f32, 16)
          DepthwiseConv2d_1[(cse_var_1 + 4)] = broadcast(0f32, 16)
          DepthwiseConv2d_1[(cse_var_1 + 5)] = broadcast(0f32, 16)
          DepthwiseConv2d_1[(cse_var_1 + 6)] = broadcast(0f32, 16)
          for (kh.outer: int32, 0, 3) {
            let cse_var_15: int32 = floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)
            let cse_var_14: int32 = (oh.outer.outer.inner + kh.outer)
            let cse_var_13: int32 = floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)
            let cse_var_12: int32 = (cse_var_1 + 6)
            let cse_var_11: int32 = (cse_var_1 + 5)
            let cse_var_10: int32 = (cse_var_1 + 4)
            let cse_var_9: int32 = (cse_var_1 + 3)
            let cse_var_8: int32 = (cse_var_1 + 2)
            let cse_var_7: int32 = (cse_var_1 + 1)
            let cse_var_6: int32 = ((cse_var_15*144) + (kh.outer*48))
            let cse_var_5: bool = ((1 <= cse_var_14) && (cse_var_14 < 15))
            let cse_var_4: int32 = (cse_var_6 + 32)
            let cse_var_3: int32 = (cse_var_6 + 16)
            let cse_var_2: int32 = ((((cse_var_15*3136) + (oh.outer.outer.inner*224)) + (kh.outer*224)) + (cse_var_13*112))
             {
              PaddedInput_1: Buffer(PaddedInput, float32x16, [9], [])[0] = @tir.if_then_else((cse_var_5 && (1 <= cse_var_13)), placeholder[ramp((cse_var_2 - 240), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[1] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_2 - 224), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[2] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_2 - 208), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[3] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_2 - 192), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[4] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_2 - 176), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[5] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_2 - 160), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[6] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_2 - 144), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[7] = @tir.if_then_else(cse_var_5, placeholder[ramp((cse_var_2 - 128), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              PaddedInput_1[8] = @tir.if_then_else((cse_var_5 && (cse_var_13 < 1)), placeholder[ramp((cse_var_2 - 112), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
              DepthwiseConv2d_1[cse_var_1] = (DepthwiseConv2d_1[cse_var_1] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_6, 1, 16)]))
              DepthwiseConv2d_1[cse_var_1] = (DepthwiseConv2d_1[cse_var_1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_3, 1, 16)]))
              DepthwiseConv2d_1[cse_var_1] = (DepthwiseConv2d_1[cse_var_1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[cse_var_7] = (DepthwiseConv2d_1[cse_var_7] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_6, 1, 16)]))
              DepthwiseConv2d_1[cse_var_7] = (DepthwiseConv2d_1[cse_var_7] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_3, 1, 16)]))
              DepthwiseConv2d_1[cse_var_7] = (DepthwiseConv2d_1[cse_var_7] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[cse_var_8] = (DepthwiseConv2d_1[cse_var_8] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_6, 1, 16)]))
              DepthwiseConv2d_1[cse_var_8] = (DepthwiseConv2d_1[cse_var_8] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_3, 1, 16)]))
              DepthwiseConv2d_1[cse_var_8] = (DepthwiseConv2d_1[cse_var_8] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[cse_var_9] = (DepthwiseConv2d_1[cse_var_9] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_6, 1, 16)]))
              DepthwiseConv2d_1[cse_var_9] = (DepthwiseConv2d_1[cse_var_9] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_3, 1, 16)]))
              DepthwiseConv2d_1[cse_var_9] = (DepthwiseConv2d_1[cse_var_9] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[cse_var_10] = (DepthwiseConv2d_1[cse_var_10] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_6, 1, 16)]))
              DepthwiseConv2d_1[cse_var_10] = (DepthwiseConv2d_1[cse_var_10] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_3, 1, 16)]))
              DepthwiseConv2d_1[cse_var_10] = (DepthwiseConv2d_1[cse_var_10] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[cse_var_11] = (DepthwiseConv2d_1[cse_var_11] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_6, 1, 16)]))
              DepthwiseConv2d_1[cse_var_11] = (DepthwiseConv2d_1[cse_var_11] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_3, 1, 16)]))
              DepthwiseConv2d_1[cse_var_11] = (DepthwiseConv2d_1[cse_var_11] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[cse_var_12] = (DepthwiseConv2d_1[cse_var_12] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_6, 1, 16)]))
              DepthwiseConv2d_1[cse_var_12] = (DepthwiseConv2d_1[cse_var_12] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_3, 1, 16)]))
              DepthwiseConv2d_1[cse_var_12] = (DepthwiseConv2d_1[cse_var_12] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_4, 1, 16)]))
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 14) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_16: int32 = floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)
          T_relu[ramp(((((cse_var_16*3136) + (ax2.inner*224)) + (floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 2)*112)) + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[((ax2.inner*7) + ax3.inner)] + placeholder_2[ramp((cse_var_16*16), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 1: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4 (weight 3 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 2, 28, 28, 16], [12, 2, 1, 1, 16, 16], [1, 12, 1, 1, 16], [1, 12, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 28, 28, 16]
placeholder = PLACEHOLDER [12, 2, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 12, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=3)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=2)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=28)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=4)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=7)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=3)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=2)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=1)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=28)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=4)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=7)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [25088], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [6144], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [192], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [150528], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [12, 2, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 12, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 12, 28, 28, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 784) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [12]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [12], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 2) {
        for (ic.inner: int32, 0, 16) {
          let cse_var_7: int32 = (((ic.outer*12544) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196)*64)) + ic.inner)
          let cse_var_6: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196)*1536) + (ic.outer*256)) + (ic.inner*16))
          let cse_var_5: int32 = (cse_var_7 + 48)
          let cse_var_4: int32 = (cse_var_7 + 32)
          let cse_var_3: int32 = (cse_var_7 + 16)
          let cse_var_2: int32 = (cse_var_6 + 512)
          let cse_var_1: int32 = (cse_var_6 + 1024)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_1, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_1, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_1, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_1, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 3) {
        for (ax3.inner: int32, 0, 4) {
          let cse_var_8: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196)
          T_relu[ramp(((((cse_var_8*37632) + (ax1.inner*12544)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 196)*64)) + (ax3.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[((ax1.inner*4) + ax3.inner)] + placeholder_2[ramp(((cse_var_8*48) + (ax1.inner*16)), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 2: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu (weight 1 key: ["8de29ce92833b18f317071115f796b28", [1, 1, 224, 224, 3], [2, 1, 3, 3, 3, 16], [1, 2, 1, 1, 16], [1, 2, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 1, 224, 224, 3]
data_pad(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 225)) && (i3 >= 1)) && (i3 < 225)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 3, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (data_pad[n, floordiv(ic, 3), ((oh*2) + kh), ((ow*2) + kw), floormod(ic, 3)]*placeholder[oc_chunk, floordiv(ic, 3), kh, kw, floormod(ic, 3), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
data_pad_i0, data_pad_i1, data_pad_i2, data_pad_i3, data_pad_i4 = tuple(data_pad.op.axis) + tuple(data_pad.op.reduce_axis)
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=28)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=56)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=3)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=3)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=4)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=28)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=2)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=56)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
s[data_pad].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_oc_chunk_o_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[data_pad].vectorize(data_pad_i4)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [150528], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [864], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [32], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [401408], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 1, 224, 224, 3], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [2, 1, 3, 3, 3, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 2, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 2, 112, 112, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 3136) "parallel" {
    let cse_var_5: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 1568)
    let cse_var_4: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 56)
    let cse_var_3: bool = (56 <= cse_var_5)
    let cse_var_2: bool = (1 <= cse_var_4)
    let cse_var_1: int32 = ((floordiv(cse_var_5, 56)*5376) + (cse_var_4*12))
    allocate(data_pad: Pointer(global float32), float32, [135]), storage_scope = global;
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [8]), storage_scope = global {
      data_pad_1: Buffer(data_pad, float32, [135], [])[ramp(0, 1, 3)] = @tir.if_then_else((cse_var_3 && cse_var_2), placeholder[ramp((cse_var_1 - 675), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(3, 1, 3)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 672), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(6, 1, 3)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 669), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(9, 1, 3)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 666), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(12, 1, 3)] = @tir.if_then_else(cse_var_3, placeholder[ramp((cse_var_1 - 663), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(15, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 3), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(18, 1, 3)] = placeholder[ramp(cse_var_1, 1, 3)]
      data_pad_1[ramp(21, 1, 3)] = placeholder[ramp((cse_var_1 + 3), 1, 3)]
      data_pad_1[ramp(24, 1, 3)] = placeholder[ramp((cse_var_1 + 6), 1, 3)]
      data_pad_1[ramp(27, 1, 3)] = placeholder[ramp((cse_var_1 + 9), 1, 3)]
      data_pad_1[ramp(30, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 669), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(33, 1, 3)] = placeholder[ramp((cse_var_1 + 672), 1, 3)]
      data_pad_1[ramp(36, 1, 3)] = placeholder[ramp((cse_var_1 + 675), 1, 3)]
      data_pad_1[ramp(39, 1, 3)] = placeholder[ramp((cse_var_1 + 678), 1, 3)]
      data_pad_1[ramp(42, 1, 3)] = placeholder[ramp((cse_var_1 + 681), 1, 3)]
      data_pad_1[ramp(45, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 1341), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(48, 1, 3)] = placeholder[ramp((cse_var_1 + 1344), 1, 3)]
      data_pad_1[ramp(51, 1, 3)] = placeholder[ramp((cse_var_1 + 1347), 1, 3)]
      data_pad_1[ramp(54, 1, 3)] = placeholder[ramp((cse_var_1 + 1350), 1, 3)]
      data_pad_1[ramp(57, 1, 3)] = placeholder[ramp((cse_var_1 + 1353), 1, 3)]
      data_pad_1[ramp(60, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2013), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(63, 1, 3)] = placeholder[ramp((cse_var_1 + 2016), 1, 3)]
      data_pad_1[ramp(66, 1, 3)] = placeholder[ramp((cse_var_1 + 2019), 1, 3)]
      data_pad_1[ramp(69, 1, 3)] = placeholder[ramp((cse_var_1 + 2022), 1, 3)]
      data_pad_1[ramp(72, 1, 3)] = placeholder[ramp((cse_var_1 + 2025), 1, 3)]
      data_pad_1[ramp(75, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2685), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(78, 1, 3)] = placeholder[ramp((cse_var_1 + 2688), 1, 3)]
      data_pad_1[ramp(81, 1, 3)] = placeholder[ramp((cse_var_1 + 2691), 1, 3)]
      data_pad_1[ramp(84, 1, 3)] = placeholder[ramp((cse_var_1 + 2694), 1, 3)]
      data_pad_1[ramp(87, 1, 3)] = placeholder[ramp((cse_var_1 + 2697), 1, 3)]
      data_pad_1[ramp(90, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 3357), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(93, 1, 3)] = placeholder[ramp((cse_var_1 + 3360), 1, 3)]
      data_pad_1[ramp(96, 1, 3)] = placeholder[ramp((cse_var_1 + 3363), 1, 3)]
      data_pad_1[ramp(99, 1, 3)] = placeholder[ramp((cse_var_1 + 3366), 1, 3)]
      data_pad_1[ramp(102, 1, 3)] = placeholder[ramp((cse_var_1 + 3369), 1, 3)]
      data_pad_1[ramp(105, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 4029), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(108, 1, 3)] = placeholder[ramp((cse_var_1 + 4032), 1, 3)]
      data_pad_1[ramp(111, 1, 3)] = placeholder[ramp((cse_var_1 + 4035), 1, 3)]
      data_pad_1[ramp(114, 1, 3)] = placeholder[ramp((cse_var_1 + 4038), 1, 3)]
      data_pad_1[ramp(117, 1, 3)] = placeholder[ramp((cse_var_1 + 4041), 1, 3)]
      data_pad_1[ramp(120, 1, 3)] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 4701), 1, 3)], broadcast(0f32, 3), dtype=float32x3)
      data_pad_1[ramp(123, 1, 3)] = placeholder[ramp((cse_var_1 + 4704), 1, 3)]
      data_pad_1[ramp(126, 1, 3)] = placeholder[ramp((cse_var_1 + 4707), 1, 3)]
      data_pad_1[ramp(129, 1, 3)] = placeholder[ramp((cse_var_1 + 4710), 1, 3)]
      data_pad_1[ramp(132, 1, 3)] = placeholder[ramp((cse_var_1 + 4713), 1, 3)]
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [8], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      for (kw.outer: int32, 0, 3) {
        for (ic.inner: int32, 0, 3) {
          let cse_var_15: int32 = ((kw.outer*3) + ic.inner)
          let cse_var_14: int32 = (cse_var_15 + 30)
          let cse_var_13: int32 = (cse_var_15 + 60)
          let cse_var_12: int32 = (cse_var_15 + 66)
          let cse_var_11: int32 = (cse_var_15 + 90)
          let cse_var_10: int32 = (cse_var_15 + 96)
          let cse_var_9: int32 = (cse_var_15 + 36)
          let cse_var_8: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 1568)*432) + (kw.outer*48)) + (ic.inner*16))
          let cse_var_7: int32 = (cse_var_8 + 144)
          let cse_var_6: int32 = (cse_var_8 + 288)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_15], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[(cse_var_15 + 6)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_9], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[cse_var_10], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[(cse_var_15 + 15)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[(cse_var_15 + 21)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[(cse_var_15 + 45)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[(cse_var_15 + 51)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[(cse_var_15 + 75)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[(cse_var_15 + 81)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[(cse_var_15 + 105)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[(cse_var_15 + 111)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(data_pad_1[cse_var_14], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(data_pad_1[cse_var_9], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(data_pad_1[cse_var_13], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(data_pad_1[cse_var_12], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(data_pad_1[cse_var_11], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(data_pad_1[cse_var_10], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(data_pad_1[(cse_var_15 + 120)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(data_pad_1[(cse_var_15 + 126)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          }
        }
      }
      for (ax2.inner: int32, 0, 4) {
        for (ax3.inner: int32, 0, 2) {
          T_relu[ramp(((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 56)*7168) + (ax2.inner*1792)) + (cse_var_4*32)) + (ax3.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 1568)*16), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 3: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add (weight 1 key: ["391e6c60071e32afd1852974e92f294e", [1, 12, 56, 56, 12], [2, 12, 1, 1, 12, 12], [1, 2, 1, 1, 12], [1, 2, 56, 56, 12], [1, 2, 56, 56, 12]]) =====
placeholder = PLACEHOLDER [1, 12, 56, 56, 12]
placeholder = PLACEHOLDER [2, 12, 1, 1, 12, 12]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 12), (oh + kh), (ow + kw), floormod(ic, 12)]*placeholder[oc_chunk, floordiv(ic, 12), kh, kw, floormod(ic, 12), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 12]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 2, 56, 56, 12]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=8)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=12)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=12)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=7)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=8)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=12)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [451584], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [3456], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [24], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [75264], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [75264], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_6: placeholder_12: Buffer(placeholder_10, float32, [1, 2, 1, 1, 12], []), placeholder_4: placeholder_13: Buffer(placeholder_8, float32, [1, 12, 56, 56, 12], []), placeholder_5: placeholder_14: Buffer(placeholder_9, float32, [2, 12, 1, 1, 12, 12], []), placeholder_7: placeholder_15: Buffer(placeholder_11, float32, [1, 2, 56, 56, 12], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 2, 56, 56, 12], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 896) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x12), float32x12, [7]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x12, [7], [])[0] = broadcast(0f32, 12)
      conv2d_NCHWc_1[1] = broadcast(0f32, 12)
      conv2d_NCHWc_1[2] = broadcast(0f32, 12)
      conv2d_NCHWc_1[3] = broadcast(0f32, 12)
      conv2d_NCHWc_1[4] = broadcast(0f32, 12)
      conv2d_NCHWc_1[5] = broadcast(0f32, 12)
      conv2d_NCHWc_1[6] = broadcast(0f32, 12)
      for (ic.outer: int32, 0, 12) {
        let cse_var_13: int32 = ((ic.outer*37632) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 448)*84))
        let cse_var_12: int32 = ((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 448)*1728) + (ic.outer*144))
        let cse_var_11: int32 = (cse_var_12 + 108)
        let cse_var_10: int32 = (cse_var_12 + 120)
        let cse_var_9: int32 = (cse_var_12 + 132)
        let cse_var_8: int32 = (cse_var_12 + 24)
        let cse_var_7: int32 = (cse_var_12 + 36)
        let cse_var_6: int32 = (cse_var_12 + 48)
        let cse_var_5: int32 = (cse_var_12 + 60)
        let cse_var_4: int32 = (cse_var_12 + 72)
        let cse_var_3: int32 = (cse_var_12 + 84)
        let cse_var_2: int32 = (cse_var_12 + 96)
        let cse_var_1: int32 = (cse_var_12 + 12)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_13], 12)*placeholder_1[ramp(cse_var_12, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 12)], 12)*placeholder_1[ramp(cse_var_12, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 24)], 12)*placeholder_1[ramp(cse_var_12, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 36)], 12)*placeholder_1[ramp(cse_var_12, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 48)], 12)*placeholder_1[ramp(cse_var_12, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 60)], 12)*placeholder_1[ramp(cse_var_12, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 72)], 12)*placeholder_1[ramp(cse_var_12, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 1)], 12)*placeholder_1[ramp(cse_var_1, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 13)], 12)*placeholder_1[ramp(cse_var_1, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 25)], 12)*placeholder_1[ramp(cse_var_1, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 37)], 12)*placeholder_1[ramp(cse_var_1, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 49)], 12)*placeholder_1[ramp(cse_var_1, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 61)], 12)*placeholder_1[ramp(cse_var_1, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 73)], 12)*placeholder_1[ramp(cse_var_1, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 2)], 12)*placeholder_1[ramp(cse_var_8, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 14)], 12)*placeholder_1[ramp(cse_var_8, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 26)], 12)*placeholder_1[ramp(cse_var_8, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 38)], 12)*placeholder_1[ramp(cse_var_8, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 50)], 12)*placeholder_1[ramp(cse_var_8, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 62)], 12)*placeholder_1[ramp(cse_var_8, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 74)], 12)*placeholder_1[ramp(cse_var_8, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 3)], 12)*placeholder_1[ramp(cse_var_7, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 15)], 12)*placeholder_1[ramp(cse_var_7, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 27)], 12)*placeholder_1[ramp(cse_var_7, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 39)], 12)*placeholder_1[ramp(cse_var_7, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 51)], 12)*placeholder_1[ramp(cse_var_7, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 63)], 12)*placeholder_1[ramp(cse_var_7, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 75)], 12)*placeholder_1[ramp(cse_var_7, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 4)], 12)*placeholder_1[ramp(cse_var_6, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 16)], 12)*placeholder_1[ramp(cse_var_6, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 28)], 12)*placeholder_1[ramp(cse_var_6, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 40)], 12)*placeholder_1[ramp(cse_var_6, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 52)], 12)*placeholder_1[ramp(cse_var_6, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 64)], 12)*placeholder_1[ramp(cse_var_6, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 76)], 12)*placeholder_1[ramp(cse_var_6, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 5)], 12)*placeholder_1[ramp(cse_var_5, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 17)], 12)*placeholder_1[ramp(cse_var_5, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 29)], 12)*placeholder_1[ramp(cse_var_5, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 41)], 12)*placeholder_1[ramp(cse_var_5, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 53)], 12)*placeholder_1[ramp(cse_var_5, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 65)], 12)*placeholder_1[ramp(cse_var_5, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 77)], 12)*placeholder_1[ramp(cse_var_5, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 6)], 12)*placeholder_1[ramp(cse_var_4, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 18)], 12)*placeholder_1[ramp(cse_var_4, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 30)], 12)*placeholder_1[ramp(cse_var_4, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 42)], 12)*placeholder_1[ramp(cse_var_4, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 54)], 12)*placeholder_1[ramp(cse_var_4, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 66)], 12)*placeholder_1[ramp(cse_var_4, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 78)], 12)*placeholder_1[ramp(cse_var_4, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 7)], 12)*placeholder_1[ramp(cse_var_3, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 19)], 12)*placeholder_1[ramp(cse_var_3, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 31)], 12)*placeholder_1[ramp(cse_var_3, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 43)], 12)*placeholder_1[ramp(cse_var_3, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 55)], 12)*placeholder_1[ramp(cse_var_3, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 67)], 12)*placeholder_1[ramp(cse_var_3, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 79)], 12)*placeholder_1[ramp(cse_var_3, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 8)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 20)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 32)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 44)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 56)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 68)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 80)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 9)], 12)*placeholder_1[ramp(cse_var_11, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 21)], 12)*placeholder_1[ramp(cse_var_11, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 33)], 12)*placeholder_1[ramp(cse_var_11, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 45)], 12)*placeholder_1[ramp(cse_var_11, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 57)], 12)*placeholder_1[ramp(cse_var_11, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 69)], 12)*placeholder_1[ramp(cse_var_11, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 81)], 12)*placeholder_1[ramp(cse_var_11, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 10)], 12)*placeholder_1[ramp(cse_var_10, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 22)], 12)*placeholder_1[ramp(cse_var_10, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 34)], 12)*placeholder_1[ramp(cse_var_10, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 46)], 12)*placeholder_1[ramp(cse_var_10, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 58)], 12)*placeholder_1[ramp(cse_var_10, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 70)], 12)*placeholder_1[ramp(cse_var_10, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 82)], 12)*placeholder_1[ramp(cse_var_10, 1, 12)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_13 + 11)], 12)*placeholder_1[ramp(cse_var_9, 1, 12)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_13 + 23)], 12)*placeholder_1[ramp(cse_var_9, 1, 12)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_13 + 35)], 12)*placeholder_1[ramp(cse_var_9, 1, 12)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_13 + 47)], 12)*placeholder_1[ramp(cse_var_9, 1, 12)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_13 + 59)], 12)*placeholder_1[ramp(cse_var_9, 1, 12)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_13 + 71)], 12)*placeholder_1[ramp(cse_var_9, 1, 12)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_13 + 83)], 12)*placeholder_1[ramp(cse_var_9, 1, 12)]))
        }
      }
      for (ax3.inner: int32, 0, 7) {
        let cse_var_14: int32 = ((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*84) + (ax3.inner*12))
        T_add[ramp(cse_var_14, 1, 12)] = ((conv2d_NCHWc_1[ax3.inner] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 448)*12), 1, 12)]) + placeholder_3[ramp(cse_var_14, 1, 12)])
      }
    }
  }
}


==== Task 4: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_2 (weight 1 key: ["193974b73c385510c28dcb191affa8cd", [1, 9, 56, 56, 16], [9, 1, 3, 3, 1, 16], [1, 9, 1, 1, 16], [1, 9, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 9, 56, 56, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [9, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 9, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=1)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=1)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=56)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=2)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=4)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=7)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=1)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=3)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=1)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=56)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=8)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=7)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o_i)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kw_o)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 64)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [451584], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [1296], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [144], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [451584], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 9, 56, 56, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [9, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 9, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 9, 56, 56, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 504) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [8]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [10]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 7) {
      DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [8], [])[0] = broadcast(0f32, 16)
      DepthwiseConv2d_1[1] = broadcast(0f32, 16)
      DepthwiseConv2d_1[2] = broadcast(0f32, 16)
      DepthwiseConv2d_1[3] = broadcast(0f32, 16)
      DepthwiseConv2d_1[4] = broadcast(0f32, 16)
      DepthwiseConv2d_1[5] = broadcast(0f32, 16)
      DepthwiseConv2d_1[6] = broadcast(0f32, 16)
      DepthwiseConv2d_1[7] = broadcast(0f32, 16)
      for (kh.outer: int32, 0, 3) {
        let cse_var_6: int32 = (kh.outer + floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56))
        let cse_var_5: int32 = ((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56)*144) + (kh.outer*48))
        let cse_var_4: int32 = (((kh.outer*896) + (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused*896)) + (ax3.outer.inner*128))
        let cse_var_3: int32 = (cse_var_5 + 32)
        let cse_var_2: int32 = (cse_var_5 + 16)
        let cse_var_1: bool = ((1 <= cse_var_6) && (cse_var_6 < 57))
         {
          PaddedInput_1: Buffer(PaddedInput, float32x16, [10], [])[0] = @tir.if_then_else((cse_var_1 && (1 <= ax3.outer.inner)), placeholder[ramp((cse_var_4 - 912), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[1] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 896), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[2] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[3] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 864), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[4] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 848), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[5] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 832), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[6] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 816), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[7] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 800), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[8] = @tir.if_then_else(cse_var_1, placeholder[ramp((cse_var_4 - 784), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[9] = @tir.if_then_else((cse_var_1 && (ax3.outer.inner < 6)), placeholder[ramp((cse_var_4 - 768), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_3, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_3, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_3, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_3, 1, 16)]))
          DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_3, 1, 16)]))
          DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_3, 1, 16)]))
          DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_5, 1, 16)]))
          DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_2, 1, 16)]))
          DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_3, 1, 16)]))
          DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_3, 1, 16)]))
        }
      }
      for (ax3.inner: int32, 0, 8) {
        T_relu[ramp((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused*896) + (ax3.outer.inner*128)) + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[ax3.inner] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56)*16), 1, 16)]), broadcast(0f32, 16))
      }
    }
  }
}


==== Task 5: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8 (weight 1 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 20, 7, 7, 16], [80, 20, 1, 1, 16, 16], [1, 80, 1, 1, 16], [1, 80, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 20, 7, 7, 16]
placeholder = PLACEHOLDER [80, 20, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 80, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=40)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=4)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=2)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=40)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=1)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=7)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=7)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=1)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [15680], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [409600], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [1280], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [62720], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 20, 7, 7, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [80, 20, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 80, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 80, 7, 7, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 280) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 80) {
        for (ic.inner: int32, 0, 4) {
          let cse_var_9: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7)*10240) + (ic.outer*64)) + (ic.inner*16))
          let cse_var_8: int32 = (cse_var_9 + 5120)
          let cse_var_7: int32 = ((((floordiv(ic.outer, 4)*784) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7)*112)) + (floormod(ic.outer, 4)*4)) + ic.inner)
          let cse_var_6: int32 = (cse_var_7 + 96)
          let cse_var_5: int32 = (cse_var_7 + 80)
          let cse_var_4: int32 = (cse_var_7 + 64)
          let cse_var_3: int32 = (cse_var_7 + 48)
          let cse_var_2: int32 = (cse_var_7 + 32)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_10: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7)
          T_relu[ramp(((((cse_var_10*1568) + (ax1.inner*784)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7)*112)) + (ax3.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_10*32) + (ax1.inner*16)), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 6: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_4 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 24, 14, 14, 16], [6, 24, 1, 1, 16, 16], [1, 6, 1, 1, 16], [1, 6, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 24, 14, 14, 16]
placeholder = PLACEHOLDER [6, 24, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=8)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [75264], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [36864], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [96], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [18816], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 24, 14, 14, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [6, 24, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 6, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 6, 14, 14, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused: int32, 0, 84) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 48) {
        for (ic.inner: int32, 0, 8) {
          let cse_var_9: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 28)*12288) + (ic.outer*128)) + (ic.inner*16))
          let cse_var_8: int32 = (cse_var_9 + 6144)
          let cse_var_7: int32 = ((((floordiv(ic.outer, 2)*3136) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 28)*112)) + (floormod(ic.outer, 2)*8)) + ic.inner)
          let cse_var_6: int32 = (cse_var_7 + 96)
          let cse_var_5: int32 = (cse_var_7 + 80)
          let cse_var_4: int32 = (cse_var_7 + 64)
          let cse_var_3: int32 = (cse_var_7 + 48)
          let cse_var_2: int32 = (cse_var_7 + 32)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_10: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 28)
          T_add[ramp(((((cse_var_10*6272) + (ax1.inner*3136)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 28)*112)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_10*32) + (ax1.inner*16)), 1, 16)])
        }
      }
    }
  }
}


==== Task 7: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu (weight 1 key: ["193974b73c385510c28dcb191affa8cd", [1, 2, 112, 112, 16], [2, 1, 3, 3, 1, 16], [1, 2, 1, 1, 16], [1, 2, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 112, 112, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [2, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=1)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=2)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=7)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=1)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=2)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=2)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=1)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=3)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=2)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=7)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=2)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=2)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o_i)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kh_o)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 512)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [401408], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [288], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [32], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [401408], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 112, 112, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [2, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 2, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 2, 112, 112, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused: int32, 0, 448) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [4]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [8]), storage_scope = global;
    for (ax2.outer.inner: int32, 0, 7) {
      for (ax3.outer.inner: int32, 0, 2) {
        let cse_var_24: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused, 28)
        let cse_var_23: int32 = ((cse_var_24*4) + (ax3.outer.inner*2))
        let cse_var_22: int32 = ((floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused, 224), 28)*14) + (ax2.outer.inner*2))
        let cse_var_21: int32 = (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused, 224)*144)
        let cse_var_20: int32 = (cse_var_21 + 112)
        let cse_var_19: int32 = (cse_var_21 + 128)
        let cse_var_18: int32 = (cse_var_21 + 32)
        let cse_var_17: int32 = (cse_var_21 + 48)
        let cse_var_16: int32 = (cse_var_21 + 64)
        let cse_var_15: int32 = (cse_var_21 + 80)
        let cse_var_14: int32 = (cse_var_21 + 96)
        let cse_var_13: int32 = (cse_var_21 + 16)
        let cse_var_12: bool = (1 <= cse_var_23)
        let cse_var_11: bool = (cse_var_23 < 110)
        let cse_var_10: bool = (1 <= cse_var_22)
        let cse_var_9: bool = (cse_var_22 < 110)
        let cse_var_8: int32 = ((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused, 28)*25088) + (ax2.outer.inner*3584)) + (cse_var_24*64)) + (ax3.outer.inner*32))
        let cse_var_7: int32 = (cse_var_8 + 32)
        let cse_var_6: int32 = (cse_var_8 + 1824)
        let cse_var_5: int32 = (cse_var_8 + 1808)
        let cse_var_4: int32 = (cse_var_8 + 1792)
        let cse_var_3: int32 = (cse_var_8 + 16)
        let cse_var_2: int32 = (cse_var_8 - 16)
        let cse_var_1: int32 = (cse_var_8 + 1776)
         {
          DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [4], [])[0] = broadcast(0f32, 16)
          DepthwiseConv2d_1[2] = broadcast(0f32, 16)
          DepthwiseConv2d_1[1] = broadcast(0f32, 16)
          DepthwiseConv2d_1[3] = broadcast(0f32, 16)
          PaddedInput_1: Buffer(PaddedInput, float32x16, [8], [])[0] = @tir.if_then_else((cse_var_10 && cse_var_12), placeholder[ramp((cse_var_8 - 1808), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[1] = @tir.if_then_else(cse_var_10, placeholder[ramp((cse_var_8 - 1792), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[2] = @tir.if_then_else(cse_var_10, placeholder[ramp((cse_var_8 - 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[3] = @tir.if_then_else((cse_var_10 && cse_var_11), placeholder[ramp((cse_var_8 - 1760), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[4] = @tir.if_then_else(cse_var_12, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[5] = placeholder[ramp(cse_var_8, 1, 16)]
          PaddedInput_1[6] = placeholder[ramp(cse_var_3, 1, 16)]
          PaddedInput_1[7] = @tir.if_then_else(cse_var_11, placeholder[ramp(cse_var_7, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_21, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_21, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_13, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_13, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_18, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_18, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_21, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_21, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_13, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_13, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_18, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_18, 1, 16)]))
          PaddedInput_1[0] = @tir.if_then_else(cse_var_12, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[1] = placeholder[ramp(cse_var_8, 1, 16)]
          PaddedInput_1[2] = placeholder[ramp(cse_var_3, 1, 16)]
          PaddedInput_1[3] = @tir.if_then_else(cse_var_11, placeholder[ramp(cse_var_7, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[4] = @tir.if_then_else(cse_var_12, placeholder[ramp(cse_var_1, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[5] = placeholder[ramp(cse_var_4, 1, 16)]
          PaddedInput_1[6] = placeholder[ramp(cse_var_5, 1, 16)]
          PaddedInput_1[7] = @tir.if_then_else(cse_var_11, placeholder[ramp(cse_var_6, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_17, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_17, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_16, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_16, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_15, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_15, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_17, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_17, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_16, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_16, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_15, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_15, 1, 16)]))
          PaddedInput_1[0] = @tir.if_then_else(cse_var_12, placeholder[ramp(cse_var_1, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[1] = placeholder[ramp(cse_var_4, 1, 16)]
          PaddedInput_1[2] = placeholder[ramp(cse_var_5, 1, 16)]
          PaddedInput_1[3] = @tir.if_then_else(cse_var_11, placeholder[ramp(cse_var_6, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[4] = @tir.if_then_else((cse_var_9 && cse_var_12), placeholder[ramp((cse_var_8 + 3568), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[5] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_8 + 3584), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[6] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_8 + 3600), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[7] = @tir.if_then_else((cse_var_9 && cse_var_11), placeholder[ramp((cse_var_8 + 3616), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_14, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_14, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_20, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_20, 1, 16)]))
          DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_19, 1, 16)]))
          DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_19, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_14, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_14, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_20, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_20, 1, 16)]))
          DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_19, 1, 16)]))
          DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_19, 1, 16)]))
          for (ax2.inner: int32, 0, 2) {
            for (ax3.inner: int32, 0, 2) {
              T_relu[ramp(((((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused, 28)*25088) + (ax2.outer.inner*3584)) + (ax2.inner*1792)) + (cse_var_24*64)) + (ax3.outer.inner*32)) + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused, 224)*16), 1, 16)]), broadcast(0f32, 16))
            }
          }
        }
      }
    }
  }
}


==== Task 8: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1 (weight 1 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 2, 112, 112, 16], [2, 2, 1, 1, 16, 16], [1, 2, 1, 1, 16], [1, 2, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 112, 112, 16]
placeholder = PLACEHOLDER [2, 2, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=7)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=16)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=2)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=1)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=7)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=7)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=16)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [401408], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [1024], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [32], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [401408], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 112, 112, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [2, 2, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 2, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 2, 112, 112, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 1792) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 2) {
        for (ic.inner: int32, 0, 16) {
          let cse_var_9: int32 = ((ic.outer*256) + (ic.inner*16))
          let cse_var_8: int32 = (cse_var_9 + 512)
          let cse_var_7: int32 = (((ic.outer*200704) + (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused*112)) + ic.inner)
          let cse_var_6: int32 = (cse_var_7 + 96)
          let cse_var_5: int32 = (cse_var_7 + 80)
          let cse_var_4: int32 = (cse_var_7 + 64)
          let cse_var_3: int32 = (cse_var_7 + 48)
          let cse_var_2: int32 = (cse_var_7 + 32)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          T_relu[ramp((((ax1.inner*200704) + (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused*112)) + (ax3.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp((ax1.inner*16), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 9: vm_mod_fused_nn_global_avg_pool2d (weight 1 key: ["1a84dfec89b63813d3461d4863fb7041", [1, 80, 7, 7, 16], [1, 80, 1, 1, 16]]) =====
placeholder = PLACEHOLDER [1, 80, 7, 7, 16]
tensor(ax0, ax1, ax2, ax3, ax4) += placeholder[ax0, ax1, ((ax2*7) + rv0), ((ax3*7) + rv1), ax4]
tensor(ax0, ax1, ax2, ax3, ax4) = (tensor[ax0, ax1, ax2, ax3, ax4]/(float32((select((bool)1, ((ax2 + 1)*7), (((ax2 + 1)*7) + 1)) - (ax2*7)))*float32((select((bool)1, ((ax3 + 1)*7), (((ax3 + 1)*7) + 1)) - (ax3*7)))))


Trace for this task is: 
tensor_ax0, tensor_ax1, tensor_ax2, tensor_ax3, tensor_ax4, tensor_rv0, tensor_rv1 = tuple(tensor.op.axis) + tuple(tensor.op.reduce_axis)
tensor_ax0, tensor_ax1, tensor_ax2, tensor_ax3, tensor_ax4 = tuple(tensor.op.axis) + tuple(tensor.op.reduce_axis)
s[tensor].compute_root()
s[tensor].compute_at(s[tensor], tensor_ax4)
tensor_ax0 = s[tensor].fuse(tensor_ax0)
s[tensor].parallel(tensor_ax0)
s[tensor].pragma(tensor_ax0, "auto_unroll_max_step", 512)
s[tensor].pragma(tensor_ax0, "unroll_explicit", True)
s[tensor].vectorize(tensor_ax4)


The best replacement found is:
@main = primfn(placeholder_1: handle, tensor_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_2: Pointer(float32), float32, [62720], []),
             tensor: Buffer(tensor_2: Pointer(float32), float32, [1280], [])}
  buffer_map = {placeholder_1: placeholder, tensor_1: tensor}
  preflattened_buffer_map = {placeholder_1: placeholder_3: Buffer(placeholder_2, float32, [1, 80, 7, 7, 16], []), tensor_1: tensor_3: Buffer(tensor_2, float32, [1, 80, 1, 1, 16], [])} {
  allocate(tensor_4: Pointer(global float32x16), float32x16, [1]), storage_scope = global;
  for (ax1: int32, 0, 80) {
    let cse_var_1: int32 = (ax1*784)
     {
      tensor_5: Buffer(tensor_4, float32x16, [1], [], align=4)[0] = broadcast(0f32, 16)
      tensor_6: Buffer(tensor_4, float32x16, [1], [], align=4)[0] = (tensor_7: Buffer(tensor_4, float32x16, [1], [], align=4)[0] + placeholder[ramp(cse_var_1, 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 16), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 32), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 48), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 64), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 80), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 96), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 112), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 128), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 144), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 160), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 176), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 192), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 208), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 224), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 240), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 256), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 272), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 288), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 304), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 320), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 336), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 352), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 368), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 384), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 400), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 416), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 432), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 448), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 464), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 480), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 496), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 512), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 528), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 544), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 560), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 576), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 592), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 608), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 624), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 640), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 656), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 672), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 688), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 704), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 720), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 736), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 752), 1, 16)])
      tensor_6[0] = (tensor_7[0] + placeholder[ramp((cse_var_1 + 768), 1, 16)])
      tensor[ramp((ax1*16), 1, 16)] = (tensor_8: Buffer(tensor_4, float32x16, [1], [], align=4)[0]*broadcast(0.0204082f32, 16))
    }
  }
}


==== Task 10: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_5 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 36, 7, 7, 16], [10, 36, 1, 1, 16, 16], [1, 10, 1, 1, 16], [1, 10, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 7, 7, 16]
placeholder = PLACEHOLDER [10, 36, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 10, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=4)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [28224], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [92160], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [160], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [7840], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 36, 7, 7, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [10, 36, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 10, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 10, 7, 7, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused: int32, 0, 35) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 144) {
        for (ic.inner: int32, 0, 4) {
          let cse_var_9: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused, 7)*18432) + (ic.outer*64)) + (ic.inner*16))
          let cse_var_8: int32 = (cse_var_9 + 9216)
          let cse_var_7: int32 = ((((floordiv(ic.outer, 4)*784) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused, 7)*112)) + (floormod(ic.outer, 4)*4)) + ic.inner)
          let cse_var_6: int32 = (cse_var_7 + 96)
          let cse_var_5: int32 = (cse_var_7 + 80)
          let cse_var_4: int32 = (cse_var_7 + 64)
          let cse_var_3: int32 = (cse_var_7 + 48)
          let cse_var_2: int32 = (cse_var_7 + 32)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_10: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused, 7)
          T_add[ramp(((((cse_var_10*1568) + (ax1.inner*784)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused, 7)*112)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_10*32) + (ax1.inner*16)), 1, 16)])
        }
      }
    }
  }
}


==== Task 11: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_6 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 24, 28, 28, 16], [24, 1, 3, 3, 1, 16], [1, 24, 1, 1, 16], [1, 24, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 24, 28, 28, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [24, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 24, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=6)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=1)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=2)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=7)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=1)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=2)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=7)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=1)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=3)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=6)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=2)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=7)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=2)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=7)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o_i)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kh_o)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 512)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [301056], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [3456], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [384], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [75264], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 24, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [24, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 24, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 24, 14, 14, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 168) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [4]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [15]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 7) {
      let cse_var_26: bool = (1 <= ax3.outer.inner)
      let cse_var_25: int32 = (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7)*144)
      let cse_var_24: bool = (1 <= floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7))
      let cse_var_23: int32 = (cse_var_25 + 112)
      let cse_var_22: int32 = (cse_var_25 + 128)
      let cse_var_21: int32 = (cse_var_25 + 16)
      let cse_var_20: int32 = (cse_var_25 + 32)
      let cse_var_19: int32 = (cse_var_25 + 48)
      let cse_var_18: int32 = (cse_var_25 + 64)
      let cse_var_17: int32 = (cse_var_25 + 80)
      let cse_var_16: int32 = (cse_var_25 + 96)
      let cse_var_15: int32 = ((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused*1792) + (ax3.outer.inner*64))
      let cse_var_14: int32 = (cse_var_15 + 48)
      let cse_var_13: int32 = (cse_var_15 + 464)
      let cse_var_12: int32 = (cse_var_15 + 448)
      let cse_var_11: int32 = (cse_var_15 + 432)
      let cse_var_10: int32 = (cse_var_15 + 32)
      let cse_var_9: int32 = (cse_var_15 + 16)
      let cse_var_8: int32 = (cse_var_15 + 496)
      let cse_var_7: int32 = (cse_var_15 + 480)
      let cse_var_6: int32 = (cse_var_15 + 880)
      let cse_var_5: int32 = (cse_var_15 + 896)
      let cse_var_4: int32 = (cse_var_15 + 912)
      let cse_var_3: int32 = (cse_var_15 + 928)
      let cse_var_2: int32 = (cse_var_15 + 944)
      let cse_var_1: int32 = (cse_var_15 - 16)
       {
        DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [4], [])[0] = broadcast(0f32, 16)
        DepthwiseConv2d_1[1] = broadcast(0f32, 16)
        DepthwiseConv2d_1[2] = broadcast(0f32, 16)
        DepthwiseConv2d_1[3] = broadcast(0f32, 16)
        PaddedInput_1: Buffer(PaddedInput, float32x16, [15], [])[0] = @tir.if_then_else((cse_var_24 && cse_var_26), placeholder[ramp((cse_var_15 - 464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_15 - 448), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_15 - 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[3] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_15 - 416), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_15 - 400), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[5] = @tir.if_then_else(cse_var_26, placeholder[ramp(cse_var_1, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = placeholder[ramp(cse_var_15, 1, 16)]
        PaddedInput_1[7] = placeholder[ramp(cse_var_9, 1, 16)]
        PaddedInput_1[8] = placeholder[ramp(cse_var_10, 1, 16)]
        PaddedInput_1[9] = placeholder[ramp(cse_var_14, 1, 16)]
        PaddedInput_1[10] = @tir.if_then_else(cse_var_26, placeholder[ramp(cse_var_11, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = placeholder[ramp(cse_var_12, 1, 16)]
        PaddedInput_1[12] = placeholder[ramp(cse_var_13, 1, 16)]
        PaddedInput_1[13] = placeholder[ramp(cse_var_7, 1, 16)]
        PaddedInput_1[14] = placeholder[ramp(cse_var_8, 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_20, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_20, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[12]*placeholder_1[ramp(cse_var_20, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[12]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[13]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[14]*placeholder_1[ramp(cse_var_20, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_26, placeholder[ramp(cse_var_1, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = placeholder[ramp(cse_var_15, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_9, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_10, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_14, 1, 16)]
        PaddedInput_1[5] = @tir.if_then_else(cse_var_26, placeholder[ramp(cse_var_11, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = placeholder[ramp(cse_var_12, 1, 16)]
        PaddedInput_1[7] = placeholder[ramp(cse_var_13, 1, 16)]
        PaddedInput_1[8] = placeholder[ramp(cse_var_7, 1, 16)]
        PaddedInput_1[9] = placeholder[ramp(cse_var_8, 1, 16)]
        PaddedInput_1[10] = @tir.if_then_else(cse_var_26, placeholder[ramp(cse_var_6, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = placeholder[ramp(cse_var_5, 1, 16)]
        PaddedInput_1[12] = placeholder[ramp(cse_var_4, 1, 16)]
        PaddedInput_1[13] = placeholder[ramp(cse_var_3, 1, 16)]
        PaddedInput_1[14] = placeholder[ramp(cse_var_2, 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[12]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[12]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[13]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[14]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_26, placeholder[ramp(cse_var_11, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = placeholder[ramp(cse_var_12, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_13, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_7, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_8, 1, 16)]
        PaddedInput_1[5] = @tir.if_then_else(cse_var_26, placeholder[ramp(cse_var_6, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = placeholder[ramp(cse_var_5, 1, 16)]
        PaddedInput_1[7] = placeholder[ramp(cse_var_4, 1, 16)]
        PaddedInput_1[8] = placeholder[ramp(cse_var_3, 1, 16)]
        PaddedInput_1[9] = placeholder[ramp(cse_var_2, 1, 16)]
        PaddedInput_1[10] = @tir.if_then_else(cse_var_26, placeholder[ramp((cse_var_15 + 1328), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = placeholder[ramp((cse_var_15 + 1344), 1, 16)]
        PaddedInput_1[12] = placeholder[ramp((cse_var_15 + 1360), 1, 16)]
        PaddedInput_1[13] = placeholder[ramp((cse_var_15 + 1376), 1, 16)]
        PaddedInput_1[14] = placeholder[ramp((cse_var_15 + 1392), 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[12]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[12]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[13]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[14]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        for (ax2.inner: int32, 0, 2) {
          for (ax3.inner: int32, 0, 2) {
            T_relu[ramp(((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused*448) + (ax2.inner*224)) + (ax3.outer.inner*32)) + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 7)*16), 1, 16)]), broadcast(0f32, 16))
          }
        }
      }
    }
  }
}


==== Task 12: vm_mod_fused_nn_contrib_conv2d_NCHWc (weight 1 key: ["98ddc69ad82d13fc6b5cb15924426ace", [1, 128, 1, 1, 10], [100, 128, 1, 1, 10, 10], [1, 100, 1, 1, 10]]) =====
placeholder = PLACEHOLDER [1, 128, 1, 1, 10]
placeholder = PLACEHOLDER [100, 128, 1, 1, 10, 10]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 10), (oh + kh), (ow + kw), floormod(ic, 10)]*placeholder[oc_chunk, floordiv(ic, 10), kh, kw, floormod(ic, 10), oc_block])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
conv2d_NCHWc_local, = s.cache_write([conv2d_NCHWc], "local")
conv2d_NCHWc_local_n_c, conv2d_NCHWc_local_oc_chunk_c, conv2d_NCHWc_local_oh_c, conv2d_NCHWc_local_ow_c, conv2d_NCHWc_local_oc_block_c, conv2d_NCHWc_local_ic, conv2d_NCHWc_local_kh, conv2d_NCHWc_local_kw = tuple(conv2d_NCHWc_local.op.axis) + tuple(conv2d_NCHWc_local.op.reduce_axis)
conv2d_NCHWc_local_n_c_o_i, conv2d_NCHWc_local_n_c_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_n_c, factor=1)
conv2d_NCHWc_local_n_c_o_o_i, conv2d_NCHWc_local_n_c_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_n_c_o_i, factor=1)
conv2d_NCHWc_local_n_c_o_o_o, conv2d_NCHWc_local_n_c_o_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_n_c_o_o_i, factor=1)
conv2d_NCHWc_local_oc_chunk_c_o_i, conv2d_NCHWc_local_oc_chunk_c_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oc_chunk_c, factor=2)
conv2d_NCHWc_local_oc_chunk_c_o_o_i, conv2d_NCHWc_local_oc_chunk_c_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oc_chunk_c_o_i, factor=1)
conv2d_NCHWc_local_oc_chunk_c_o_o_o, conv2d_NCHWc_local_oc_chunk_c_o_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oc_chunk_c_o_o_i, factor=2)
conv2d_NCHWc_local_oh_c_o_i, conv2d_NCHWc_local_oh_c_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oh_c, factor=1)
conv2d_NCHWc_local_oh_c_o_o_i, conv2d_NCHWc_local_oh_c_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oh_c_o_i, factor=1)
conv2d_NCHWc_local_oh_c_o_o_o, conv2d_NCHWc_local_oh_c_o_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oh_c_o_o_i, factor=1)
conv2d_NCHWc_local_ow_c_o_i, conv2d_NCHWc_local_ow_c_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_ow_c, factor=1)
conv2d_NCHWc_local_ow_c_o_o_i, conv2d_NCHWc_local_ow_c_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_ow_c_o_i, factor=1)
conv2d_NCHWc_local_ow_c_o_o_o, conv2d_NCHWc_local_ow_c_o_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_ow_c_o_o_i, factor=1)
conv2d_NCHWc_local_oc_block_c_o_i, conv2d_NCHWc_local_oc_block_c_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oc_block_c, factor=10)
conv2d_NCHWc_local_oc_block_c_o_o_i, conv2d_NCHWc_local_oc_block_c_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oc_block_c_o_i, factor=1)
conv2d_NCHWc_local_oc_block_c_o_o_o, conv2d_NCHWc_local_oc_block_c_o_o_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_oc_block_c_o_o_i, factor=1)
conv2d_NCHWc_local_ic_o, conv2d_NCHWc_local_ic_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_ic, factor=10)
conv2d_NCHWc_local_kh_o, conv2d_NCHWc_local_kh_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_kh, factor=1)
conv2d_NCHWc_local_kw_o, conv2d_NCHWc_local_kw_i = s[conv2d_NCHWc_local].split(conv2d_NCHWc_local_kw, factor=1)
s[conv2d_NCHWc_local].reorder(conv2d_NCHWc_local_n_c_o_o_o, conv2d_NCHWc_local_oc_chunk_c_o_o_o, conv2d_NCHWc_local_oh_c_o_o_o, conv2d_NCHWc_local_ow_c_o_o_o, conv2d_NCHWc_local_oc_block_c_o_o_o, conv2d_NCHWc_local_n_c_o_o_i, conv2d_NCHWc_local_oc_chunk_c_o_o_i, conv2d_NCHWc_local_oh_c_o_o_i, conv2d_NCHWc_local_ow_c_o_o_i, conv2d_NCHWc_local_oc_block_c_o_o_i, conv2d_NCHWc_local_ic_o, conv2d_NCHWc_local_kh_o, conv2d_NCHWc_local_kw_o, conv2d_NCHWc_local_n_c_o_i, conv2d_NCHWc_local_oc_chunk_c_o_i, conv2d_NCHWc_local_oh_c_o_i, conv2d_NCHWc_local_ow_c_o_i, conv2d_NCHWc_local_oc_block_c_o_i, conv2d_NCHWc_local_ic_i, conv2d_NCHWc_local_kh_i, conv2d_NCHWc_local_kw_i, conv2d_NCHWc_local_n_c_i, conv2d_NCHWc_local_oc_chunk_c_i, conv2d_NCHWc_local_oh_c_i, conv2d_NCHWc_local_ow_c_i, conv2d_NCHWc_local_oc_block_c_i)
conv2d_NCHWc_n_o, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_oc_chunk_o, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=4)
conv2d_NCHWc_oh_o, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_ow_o, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_oc_block_o, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=10)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o, conv2d_NCHWc_oc_chunk_o, conv2d_NCHWc_oh_o, conv2d_NCHWc_ow_o, conv2d_NCHWc_oc_block_o, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
s[conv2d_NCHWc_local].compute_at(s[conv2d_NCHWc], conv2d_NCHWc_oc_block_o)
conv2d_NCHWc_n_o_oc_chunk_o_fused_oh_o_fused_ow_o_fused_oc_block_o_fused = s[conv2d_NCHWc].fuse(conv2d_NCHWc_n_o, conv2d_NCHWc_oc_chunk_o, conv2d_NCHWc_oh_o, conv2d_NCHWc_ow_o, conv2d_NCHWc_oc_block_o)
s[conv2d_NCHWc].parallel(conv2d_NCHWc_n_o_oc_chunk_o_fused_oh_o_fused_ow_o_fused_oc_block_o_fused)
s[conv2d_NCHWc_local].pragma(conv2d_NCHWc_local_n_c_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc_local].pragma(conv2d_NCHWc_local_n_c_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc_local].vectorize(conv2d_NCHWc_local_oc_block_c_i)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)


The best replacement found is:
@main = primfn(placeholder_2: handle, placeholder_3: handle, conv2d_NCHWc_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_4: Pointer(float32), float32, [1280], []),
             placeholder_1: Buffer(placeholder_5: Pointer(float32), float32, [1280000], []),
             conv2d_NCHWc: Buffer(conv2d_NCHWc_2: Pointer(float32), float32, [1000], [])}
  buffer_map = {placeholder_2: placeholder, placeholder_3: placeholder_1, conv2d_NCHWc_1: conv2d_NCHWc}
  preflattened_buffer_map = {placeholder_2: placeholder_6: Buffer(placeholder_4, float32, [1, 128, 1, 1, 10], []), placeholder_3: placeholder_7: Buffer(placeholder_5, float32, [100, 128, 1, 1, 10, 10], []), conv2d_NCHWc_1: conv2d_NCHWc_3: Buffer(conv2d_NCHWc_2, float32, [1, 100, 1, 1, 10], [])} {
  for (n.outer.oc_chunk.outer.fused.oh.outer.fused.ow.outer.fused.oc_block.outer.fused: int32, 0, 25) "parallel" {
    allocate(conv2d_NCHWc.local: Pointer(local float32x10), float32x10, [4]), storage_scope = local {
      for (oc_chunk.c.outer.outer.inner: int32, 0, 2) {
        let cse_var_1: int32 = (oc_chunk.c.outer.outer.inner*2)
         {
          conv2d_NCHWc.local_1: Buffer(conv2d_NCHWc.local, float32x10, [4], [], scope="local")[cse_var_1] = broadcast(0f32, 10)
          conv2d_NCHWc.local_1[(cse_var_1 + 1)] = broadcast(0f32, 10)
          for (ic.outer: int32, 0, 128) {
            let cse_var_13: int32 = (ic.outer*10)
            let cse_var_12: int32 = (cse_var_1 + 1)
            let cse_var_11: int32 = (cse_var_13 + 2)
            let cse_var_10: int32 = (cse_var_13 + 3)
            let cse_var_9: int32 = (cse_var_13 + 4)
            let cse_var_8: int32 = (cse_var_13 + 5)
            let cse_var_7: int32 = (cse_var_13 + 6)
            let cse_var_6: int32 = (cse_var_13 + 7)
            let cse_var_5: int32 = (cse_var_13 + 8)
            let cse_var_4: int32 = (cse_var_13 + 9)
            let cse_var_3: int32 = (cse_var_13 + 1)
            let cse_var_2: int32 = (((n.outer.oc_chunk.outer.fused.oh.outer.fused.ow.outer.fused.oc_block.outer.fused*51200) + (oc_chunk.c.outer.outer.inner*25600)) + (ic.outer*100))
             {
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_13], 10)*placeholder_1[ramp(cse_var_2, 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_13], 10)*placeholder_1[ramp((cse_var_2 + 12800), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_3], 10)*placeholder_1[ramp((cse_var_2 + 10), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_3], 10)*placeholder_1[ramp((cse_var_2 + 12810), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_11], 10)*placeholder_1[ramp((cse_var_2 + 20), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_11], 10)*placeholder_1[ramp((cse_var_2 + 12820), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_10], 10)*placeholder_1[ramp((cse_var_2 + 30), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_10], 10)*placeholder_1[ramp((cse_var_2 + 12830), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_9], 10)*placeholder_1[ramp((cse_var_2 + 40), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_9], 10)*placeholder_1[ramp((cse_var_2 + 12840), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_8], 10)*placeholder_1[ramp((cse_var_2 + 50), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_8], 10)*placeholder_1[ramp((cse_var_2 + 12850), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_7], 10)*placeholder_1[ramp((cse_var_2 + 60), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_7], 10)*placeholder_1[ramp((cse_var_2 + 12860), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_6], 10)*placeholder_1[ramp((cse_var_2 + 70), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_6], 10)*placeholder_1[ramp((cse_var_2 + 12870), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_5], 10)*placeholder_1[ramp((cse_var_2 + 80), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_5], 10)*placeholder_1[ramp((cse_var_2 + 12880), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_1] = (conv2d_NCHWc.local_1[cse_var_1] + (broadcast(placeholder[cse_var_4], 10)*placeholder_1[ramp((cse_var_2 + 90), 1, 10)]))
              conv2d_NCHWc.local_1[cse_var_12] = (conv2d_NCHWc.local_1[cse_var_12] + (broadcast(placeholder[cse_var_4], 10)*placeholder_1[ramp((cse_var_2 + 12890), 1, 10)]))
            }
          }
        }
      }
      for (oc_chunk.inner: int32, 0, 4) {
        conv2d_NCHWc[ramp(((n.outer.oc_chunk.outer.fused.oh.outer.fused.ow.outer.fused.oc_block.outer.fused*40) + (oc_chunk.inner*10)), 1, 10)] = conv2d_NCHWc.local_1[oc_chunk.inner]
      }
    }
  }
}


==== Task 13: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_2 (weight 3 key: ["9b33493c1055e7d356de27daf0a24610", [1, 24, 28, 28, 16], [4, 24, 1, 1, 16, 16], [1, 4, 1, 1, 16], [1, 4, 28, 28, 16], [1, 4, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 24, 28, 28, 16]
placeholder = PLACEHOLDER [4, 24, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 4, 28, 28, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax1_o, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax2_o, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax3_o, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax4_o, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
s[T_add].reorder(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o)
T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused = s[T_add].fuse(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o)
s[T_add].parallel(T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [301056], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [24576], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [64], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [50176], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [50176], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_7: placeholder_12: Buffer(placeholder_11, float32, [1, 4, 28, 28, 16], []), placeholder_6: placeholder_13: Buffer(placeholder_10, float32, [1, 4, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 28, 28, 16], []), placeholder_4: placeholder_14: Buffer(placeholder_8, float32, [1, 24, 28, 28, 16], []), placeholder_5: placeholder_15: Buffer(placeholder_9, float32, [4, 24, 1, 1, 16, 16], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused: int32, 0, 224) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 24) {
        let cse_var_144: int32 = ((ic.outer*12544) + (floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 112)*112))
        let cse_var_143: int32 = ((floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 112)*12288) + (ic.outer*256))
        let cse_var_142: int32 = (cse_var_144 + 19)
        let cse_var_141: int32 = (cse_var_144 + 17)
        let cse_var_140: int32 = (cse_var_144 + 16)
        let cse_var_139: int32 = (cse_var_144 + 15)
        let cse_var_138: int32 = (cse_var_144 + 14)
        let cse_var_137: int32 = (cse_var_144 + 13)
        let cse_var_136: int32 = (cse_var_144 + 12)
        let cse_var_135: int32 = (cse_var_144 + 111)
        let cse_var_134: int32 = (cse_var_144 + 110)
        let cse_var_133: int32 = (cse_var_144 + 11)
        let cse_var_132: int32 = (cse_var_144 + 109)
        let cse_var_131: int32 = (cse_var_144 + 108)
        let cse_var_130: int32 = (cse_var_144 + 107)
        let cse_var_129: int32 = (cse_var_144 + 106)
        let cse_var_128: int32 = (cse_var_144 + 105)
        let cse_var_127: int32 = (cse_var_144 + 103)
        let cse_var_126: int32 = (cse_var_144 + 18)
        let cse_var_125: int32 = (cse_var_144 + 35)
        let cse_var_124: int32 = (cse_var_144 + 33)
        let cse_var_123: int32 = (cse_var_144 + 32)
        let cse_var_122: int32 = (cse_var_144 + 31)
        let cse_var_121: int32 = (cse_var_144 + 30)
        let cse_var_120: int32 = (cse_var_144 + 3)
        let cse_var_119: int32 = (cse_var_144 + 29)
        let cse_var_118: int32 = (cse_var_144 + 28)
        let cse_var_117: int32 = (cse_var_144 + 104)
        let cse_var_116: int32 = (cse_var_144 + 26)
        let cse_var_115: int32 = (cse_var_144 + 25)
        let cse_var_114: int32 = (cse_var_144 + 24)
        let cse_var_113: int32 = (cse_var_144 + 23)
        let cse_var_112: int32 = (cse_var_144 + 22)
        let cse_var_111: int32 = (cse_var_144 + 21)
        let cse_var_110: int32 = (cse_var_144 + 20)
        let cse_var_109: int32 = (cse_var_144 + 2)
        let cse_var_108: int32 = (cse_var_144 + 27)
        let cse_var_107: int32 = (cse_var_143 + 6224)
        let cse_var_106: int32 = (cse_var_143 + 6208)
        let cse_var_105: int32 = (cse_var_143 + 6192)
        let cse_var_104: int32 = (cse_var_143 + 6176)
        let cse_var_103: int32 = (cse_var_143 + 6160)
        let cse_var_102: int32 = (cse_var_143 + 6144)
        let cse_var_101: int32 = (cse_var_143 + 48)
        let cse_var_100: int32 = (cse_var_143 + 32)
        let cse_var_99: int32 = (cse_var_144 + 34)
        let cse_var_98: int32 = (cse_var_143 + 224)
        let cse_var_97: int32 = (cse_var_143 + 208)
        let cse_var_96: int32 = (cse_var_143 + 192)
        let cse_var_95: int32 = (cse_var_143 + 176)
        let cse_var_94: int32 = (cse_var_143 + 160)
        let cse_var_93: int32 = (cse_var_143 + 16)
        let cse_var_92: int32 = (cse_var_143 + 144)
        let cse_var_91: int32 = (cse_var_143 + 112)
        let cse_var_90: int32 = (cse_var_143 + 240)
        let cse_var_89: int32 = (cse_var_144 + 102)
        let cse_var_88: int32 = (cse_var_144 + 101)
        let cse_var_87: int32 = (cse_var_144 + 100)
        let cse_var_86: int32 = (cse_var_144 + 10)
        let cse_var_85: int32 = (cse_var_144 + 1)
        let cse_var_84: int32 = (cse_var_143 + 96)
        let cse_var_83: int32 = (cse_var_143 + 80)
        let cse_var_82: int32 = (cse_var_143 + 64)
        let cse_var_81: int32 = (cse_var_143 + 6240)
        let cse_var_80: int32 = (cse_var_143 + 6368)
        let cse_var_79: int32 = (cse_var_143 + 6352)
        let cse_var_78: int32 = (cse_var_143 + 6336)
        let cse_var_77: int32 = (cse_var_143 + 6320)
        let cse_var_76: int32 = (cse_var_143 + 6304)
        let cse_var_75: int32 = (cse_var_143 + 6288)
        let cse_var_74: int32 = (cse_var_143 + 6272)
        let cse_var_73: int32 = (cse_var_143 + 6256)
        let cse_var_72: int32 = (cse_var_143 + 6384)
        let cse_var_71: int32 = (cse_var_144 + 82)
        let cse_var_70: int32 = (cse_var_144 + 81)
        let cse_var_69: int32 = (cse_var_144 + 80)
        let cse_var_68: int32 = (cse_var_144 + 8)
        let cse_var_67: int32 = (cse_var_144 + 79)
        let cse_var_66: int32 = (cse_var_144 + 78)
        let cse_var_65: int32 = (cse_var_144 + 77)
        let cse_var_64: int32 = (cse_var_143 + 128)
        let cse_var_63: int32 = (cse_var_144 + 75)
        let cse_var_62: int32 = (cse_var_144 + 74)
        let cse_var_61: int32 = (cse_var_144 + 73)
        let cse_var_60: int32 = (cse_var_144 + 72)
        let cse_var_59: int32 = (cse_var_144 + 71)
        let cse_var_58: int32 = (cse_var_144 + 70)
        let cse_var_57: int32 = (cse_var_144 + 7)
        let cse_var_56: int32 = (cse_var_144 + 69)
        let cse_var_55: int32 = (cse_var_144 + 76)
        let cse_var_54: int32 = (cse_var_144 + 99)
        let cse_var_53: int32 = (cse_var_144 + 98)
        let cse_var_52: int32 = (cse_var_144 + 97)
        let cse_var_51: int32 = (cse_var_144 + 96)
        let cse_var_50: int32 = (cse_var_144 + 95)
        let cse_var_49: int32 = (cse_var_144 + 94)
        let cse_var_48: int32 = (cse_var_144 + 93)
        let cse_var_47: int32 = (cse_var_144 + 92)
        let cse_var_46: int32 = (cse_var_144 + 83)
        let cse_var_45: int32 = (cse_var_144 + 90)
        let cse_var_44: int32 = (cse_var_144 + 9)
        let cse_var_43: int32 = (cse_var_144 + 89)
        let cse_var_42: int32 = (cse_var_144 + 88)
        let cse_var_41: int32 = (cse_var_144 + 87)
        let cse_var_40: int32 = (cse_var_144 + 86)
        let cse_var_39: int32 = (cse_var_144 + 85)
        let cse_var_38: int32 = (cse_var_144 + 84)
        let cse_var_37: int32 = (cse_var_144 + 91)
        let cse_var_36: int32 = (cse_var_144 + 50)
        let cse_var_35: int32 = (cse_var_144 + 5)
        let cse_var_34: int32 = (cse_var_144 + 49)
        let cse_var_33: int32 = (cse_var_144 + 48)
        let cse_var_32: int32 = (cse_var_144 + 47)
        let cse_var_31: int32 = (cse_var_144 + 46)
        let cse_var_30: int32 = (cse_var_144 + 45)
        let cse_var_29: int32 = (cse_var_144 + 44)
        let cse_var_28: int32 = (cse_var_144 + 68)
        let cse_var_27: int32 = (cse_var_144 + 42)
        let cse_var_26: int32 = (cse_var_144 + 41)
        let cse_var_25: int32 = (cse_var_144 + 40)
        let cse_var_24: int32 = (cse_var_144 + 4)
        let cse_var_23: int32 = (cse_var_144 + 39)
        let cse_var_22: int32 = (cse_var_144 + 38)
        let cse_var_21: int32 = (cse_var_144 + 37)
        let cse_var_20: int32 = (cse_var_144 + 36)
        let cse_var_19: int32 = (cse_var_144 + 43)
        let cse_var_18: int32 = (cse_var_144 + 67)
        let cse_var_17: int32 = (cse_var_144 + 66)
        let cse_var_16: int32 = (cse_var_144 + 65)
        let cse_var_15: int32 = (cse_var_144 + 64)
        let cse_var_14: int32 = (cse_var_144 + 63)
        let cse_var_13: int32 = (cse_var_144 + 62)
        let cse_var_12: int32 = (cse_var_144 + 61)
        let cse_var_11: int32 = (cse_var_144 + 60)
        let cse_var_10: int32 = (cse_var_144 + 51)
        let cse_var_9: int32 = (cse_var_144 + 59)
        let cse_var_8: int32 = (cse_var_144 + 58)
        let cse_var_7: int32 = (cse_var_144 + 57)
        let cse_var_6: int32 = (cse_var_144 + 56)
        let cse_var_5: int32 = (cse_var_144 + 55)
        let cse_var_4: int32 = (cse_var_144 + 54)
        let cse_var_3: int32 = (cse_var_144 + 53)
        let cse_var_2: int32 = (cse_var_144 + 52)
        let cse_var_1: int32 = (cse_var_144 + 6)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_144], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_140], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_123], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_69], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_144], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_140], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_123], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_69], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_85], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_141], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_124], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_70], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_85], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_141], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_124], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_70], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_109], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_126], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_99], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_71], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_109], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_126], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_99], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_71], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_120], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_142], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_125], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_120], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_142], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_125], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_110], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_87], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_110], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_87], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_111], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_88], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_111], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_88], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_112], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_58], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_89], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_112], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_58], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_89], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_57], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_113], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_59], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_127], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_57], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_113], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_59], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_127], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_68], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_114], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_60], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_117], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_68], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_114], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_60], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_117], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_115], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_61], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_128], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_115], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_61], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_128], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_86], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_116], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_62], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_129], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_86], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_116], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_62], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_129], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_133], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_108], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_63], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_130], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_133], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_108], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_63], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_130], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_136], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_118], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_131], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_136], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_118], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_131], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_137], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_119], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_65], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_132], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_137], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_119], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_65], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_132], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_138], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_121], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_66], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_134], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_138], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_121], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_66], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_134], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_139], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_122], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_67], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_135], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_139], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_122], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_67], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_135], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_146: int32 = floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 112)
          let cse_var_145: int32 = ((((cse_var_146*25088) + (ax1.inner*12544)) + (floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 112)*112)) + (ax3.inner*16))
          T_add[ramp(cse_var_145, 1, 16)] = ((conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_146*32) + (ax1.inner*16)), 1, 16)]) + placeholder_3[ramp(cse_var_145, 1, 16)])
        }
      }
    }
  }
}


==== Task 14: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_4 (weight 2 key: ["9b33493c1055e7d356de27daf0a24610", [1, 60, 7, 7, 16], [10, 60, 1, 1, 16, 16], [1, 10, 1, 1, 16], [1, 10, 7, 7, 16], [1, 10, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 60, 7, 7, 16]
placeholder = PLACEHOLDER [10, 60, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 10, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 10, 7, 7, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=4)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax1_o, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax2_o, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax3_o, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax4_o, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
s[T_add].reorder(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o)
T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused = s[T_add].fuse(T_add_ax0_o, T_add_ax1_o, T_add_ax2_o, T_add_ax3_o, T_add_ax4_o)
s[T_add].parallel(T_add_ax0_o_ax1_o_fused_ax2_o_fused_ax3_o_fused_ax4_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [47040], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [153600], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [160], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [7840], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [7840], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_4: placeholder_12: Buffer(placeholder_8, float32, [1, 60, 7, 7, 16], []), placeholder_5: placeholder_13: Buffer(placeholder_9, float32, [10, 60, 1, 1, 16, 16], []), placeholder_6: placeholder_14: Buffer(placeholder_10, float32, [1, 10, 1, 1, 16], []), placeholder_7: placeholder_15: Buffer(placeholder_11, float32, [1, 10, 7, 7, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 10, 7, 7, 16], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused: int32, 0, 35) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 240) {
        for (ic.inner: int32, 0, 4) {
          let cse_var_9: int32 = (((floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 7)*30720) + (ic.outer*64)) + (ic.inner*16))
          let cse_var_8: int32 = (cse_var_9 + 15360)
          let cse_var_7: int32 = ((((floordiv(ic.outer, 4)*784) + (floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 7)*112)) + (floormod(ic.outer, 4)*4)) + ic.inner)
          let cse_var_6: int32 = (cse_var_7 + 96)
          let cse_var_5: int32 = (cse_var_7 + 80)
          let cse_var_4: int32 = (cse_var_7 + 64)
          let cse_var_3: int32 = (cse_var_7 + 48)
          let cse_var_2: int32 = (cse_var_7 + 32)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_11: int32 = floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 7)
          let cse_var_10: int32 = ((((cse_var_11*1568) + (ax1.inner*784)) + (floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused.ax3.outer.fused.ax4.outer.fused, 7)*112)) + (ax3.inner*16))
          T_add[ramp(cse_var_10, 1, 16)] = ((conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_11*32) + (ax1.inner*16)), 1, 16)]) + placeholder_3[ramp(cse_var_10, 1, 16)])
        }
      }
    }
  }
}


==== Task 15: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_6 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 60, 7, 7, 16], [20, 60, 1, 1, 16, 16], [1, 20, 1, 1, 16], [1, 20, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 60, 7, 7, 16]
placeholder = PLACEHOLDER [20, 60, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 20, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [47040], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [307200], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [320], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [15680], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 60, 7, 7, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [20, 60, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 20, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 20, 7, 7, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused: int32, 0, 70) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 60) {
        let cse_var_144: int32 = ((ic.outer*784) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 7)*112))
        let cse_var_143: int32 = ((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 7)*30720) + (ic.outer*256))
        let cse_var_142: int32 = (cse_var_144 + 19)
        let cse_var_141: int32 = (cse_var_144 + 17)
        let cse_var_140: int32 = (cse_var_144 + 16)
        let cse_var_139: int32 = (cse_var_144 + 15)
        let cse_var_138: int32 = (cse_var_144 + 14)
        let cse_var_137: int32 = (cse_var_144 + 13)
        let cse_var_136: int32 = (cse_var_144 + 12)
        let cse_var_135: int32 = (cse_var_144 + 111)
        let cse_var_134: int32 = (cse_var_144 + 110)
        let cse_var_133: int32 = (cse_var_144 + 11)
        let cse_var_132: int32 = (cse_var_144 + 109)
        let cse_var_131: int32 = (cse_var_144 + 108)
        let cse_var_130: int32 = (cse_var_144 + 107)
        let cse_var_129: int32 = (cse_var_144 + 106)
        let cse_var_128: int32 = (cse_var_144 + 105)
        let cse_var_127: int32 = (cse_var_144 + 103)
        let cse_var_126: int32 = (cse_var_144 + 18)
        let cse_var_125: int32 = (cse_var_144 + 35)
        let cse_var_124: int32 = (cse_var_144 + 33)
        let cse_var_123: int32 = (cse_var_144 + 32)
        let cse_var_122: int32 = (cse_var_144 + 31)
        let cse_var_121: int32 = (cse_var_144 + 30)
        let cse_var_120: int32 = (cse_var_144 + 3)
        let cse_var_119: int32 = (cse_var_144 + 29)
        let cse_var_118: int32 = (cse_var_144 + 28)
        let cse_var_117: int32 = (cse_var_144 + 104)
        let cse_var_116: int32 = (cse_var_144 + 26)
        let cse_var_115: int32 = (cse_var_144 + 25)
        let cse_var_114: int32 = (cse_var_144 + 24)
        let cse_var_113: int32 = (cse_var_144 + 23)
        let cse_var_112: int32 = (cse_var_144 + 22)
        let cse_var_111: int32 = (cse_var_144 + 21)
        let cse_var_110: int32 = (cse_var_144 + 20)
        let cse_var_109: int32 = (cse_var_144 + 2)
        let cse_var_108: int32 = (cse_var_144 + 27)
        let cse_var_107: int32 = (cse_var_143 + 15584)
        let cse_var_106: int32 = (cse_var_143 + 15568)
        let cse_var_105: int32 = (cse_var_143 + 15552)
        let cse_var_104: int32 = (cse_var_143 + 15536)
        let cse_var_103: int32 = (cse_var_143 + 15520)
        let cse_var_102: int32 = (cse_var_143 + 15504)
        let cse_var_101: int32 = (cse_var_143 + 15488)
        let cse_var_100: int32 = (cse_var_143 + 15472)
        let cse_var_99: int32 = (cse_var_144 + 34)
        let cse_var_98: int32 = (cse_var_143 + 15440)
        let cse_var_97: int32 = (cse_var_143 + 15424)
        let cse_var_96: int32 = (cse_var_143 + 15408)
        let cse_var_95: int32 = (cse_var_143 + 15392)
        let cse_var_94: int32 = (cse_var_143 + 15376)
        let cse_var_93: int32 = (cse_var_143 + 15360)
        let cse_var_92: int32 = (cse_var_143 + 144)
        let cse_var_91: int32 = (cse_var_143 + 112)
        let cse_var_90: int32 = (cse_var_143 + 15456)
        let cse_var_89: int32 = (cse_var_144 + 102)
        let cse_var_88: int32 = (cse_var_144 + 101)
        let cse_var_87: int32 = (cse_var_144 + 100)
        let cse_var_86: int32 = (cse_var_144 + 10)
        let cse_var_85: int32 = (cse_var_144 + 1)
        let cse_var_84: int32 = (cse_var_143 + 96)
        let cse_var_83: int32 = (cse_var_143 + 80)
        let cse_var_82: int32 = (cse_var_143 + 64)
        let cse_var_81: int32 = (cse_var_143 + 15600)
        let cse_var_80: int32 = (cse_var_143 + 32)
        let cse_var_79: int32 = (cse_var_143 + 240)
        let cse_var_78: int32 = (cse_var_143 + 224)
        let cse_var_77: int32 = (cse_var_143 + 208)
        let cse_var_76: int32 = (cse_var_143 + 192)
        let cse_var_75: int32 = (cse_var_143 + 176)
        let cse_var_74: int32 = (cse_var_143 + 160)
        let cse_var_73: int32 = (cse_var_143 + 16)
        let cse_var_72: int32 = (cse_var_143 + 48)
        let cse_var_71: int32 = (cse_var_144 + 82)
        let cse_var_70: int32 = (cse_var_144 + 81)
        let cse_var_69: int32 = (cse_var_144 + 80)
        let cse_var_68: int32 = (cse_var_144 + 8)
        let cse_var_67: int32 = (cse_var_144 + 79)
        let cse_var_66: int32 = (cse_var_144 + 78)
        let cse_var_65: int32 = (cse_var_144 + 77)
        let cse_var_64: int32 = (cse_var_143 + 128)
        let cse_var_63: int32 = (cse_var_144 + 75)
        let cse_var_62: int32 = (cse_var_144 + 74)
        let cse_var_61: int32 = (cse_var_144 + 73)
        let cse_var_60: int32 = (cse_var_144 + 72)
        let cse_var_59: int32 = (cse_var_144 + 71)
        let cse_var_58: int32 = (cse_var_144 + 70)
        let cse_var_57: int32 = (cse_var_144 + 7)
        let cse_var_56: int32 = (cse_var_144 + 69)
        let cse_var_55: int32 = (cse_var_144 + 76)
        let cse_var_54: int32 = (cse_var_144 + 99)
        let cse_var_53: int32 = (cse_var_144 + 98)
        let cse_var_52: int32 = (cse_var_144 + 97)
        let cse_var_51: int32 = (cse_var_144 + 96)
        let cse_var_50: int32 = (cse_var_144 + 95)
        let cse_var_49: int32 = (cse_var_144 + 94)
        let cse_var_48: int32 = (cse_var_144 + 93)
        let cse_var_47: int32 = (cse_var_144 + 92)
        let cse_var_46: int32 = (cse_var_144 + 83)
        let cse_var_45: int32 = (cse_var_144 + 90)
        let cse_var_44: int32 = (cse_var_144 + 9)
        let cse_var_43: int32 = (cse_var_144 + 89)
        let cse_var_42: int32 = (cse_var_144 + 88)
        let cse_var_41: int32 = (cse_var_144 + 87)
        let cse_var_40: int32 = (cse_var_144 + 86)
        let cse_var_39: int32 = (cse_var_144 + 85)
        let cse_var_38: int32 = (cse_var_144 + 84)
        let cse_var_37: int32 = (cse_var_144 + 91)
        let cse_var_36: int32 = (cse_var_144 + 50)
        let cse_var_35: int32 = (cse_var_144 + 5)
        let cse_var_34: int32 = (cse_var_144 + 49)
        let cse_var_33: int32 = (cse_var_144 + 48)
        let cse_var_32: int32 = (cse_var_144 + 47)
        let cse_var_31: int32 = (cse_var_144 + 46)
        let cse_var_30: int32 = (cse_var_144 + 45)
        let cse_var_29: int32 = (cse_var_144 + 44)
        let cse_var_28: int32 = (cse_var_144 + 68)
        let cse_var_27: int32 = (cse_var_144 + 42)
        let cse_var_26: int32 = (cse_var_144 + 41)
        let cse_var_25: int32 = (cse_var_144 + 40)
        let cse_var_24: int32 = (cse_var_144 + 4)
        let cse_var_23: int32 = (cse_var_144 + 39)
        let cse_var_22: int32 = (cse_var_144 + 38)
        let cse_var_21: int32 = (cse_var_144 + 37)
        let cse_var_20: int32 = (cse_var_144 + 36)
        let cse_var_19: int32 = (cse_var_144 + 43)
        let cse_var_18: int32 = (cse_var_144 + 67)
        let cse_var_17: int32 = (cse_var_144 + 66)
        let cse_var_16: int32 = (cse_var_144 + 65)
        let cse_var_15: int32 = (cse_var_144 + 64)
        let cse_var_14: int32 = (cse_var_144 + 63)
        let cse_var_13: int32 = (cse_var_144 + 62)
        let cse_var_12: int32 = (cse_var_144 + 61)
        let cse_var_11: int32 = (cse_var_144 + 60)
        let cse_var_10: int32 = (cse_var_144 + 51)
        let cse_var_9: int32 = (cse_var_144 + 59)
        let cse_var_8: int32 = (cse_var_144 + 58)
        let cse_var_7: int32 = (cse_var_144 + 57)
        let cse_var_6: int32 = (cse_var_144 + 56)
        let cse_var_5: int32 = (cse_var_144 + 55)
        let cse_var_4: int32 = (cse_var_144 + 54)
        let cse_var_3: int32 = (cse_var_144 + 53)
        let cse_var_2: int32 = (cse_var_144 + 52)
        let cse_var_1: int32 = (cse_var_144 + 6)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_144], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_140], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_123], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_69], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_144], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_140], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_123], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_69], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_85], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_141], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_124], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_70], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_85], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_141], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_124], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_70], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_109], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_126], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_99], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_71], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_109], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_126], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_99], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_71], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_120], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_142], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_125], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_120], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_142], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_125], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_110], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_87], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_110], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_87], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_111], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_88], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_111], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_88], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_112], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_58], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_89], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_112], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_58], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_89], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_57], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_113], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_59], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_127], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_57], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_113], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_59], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_127], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_68], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_114], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_60], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_117], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_68], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_114], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_60], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_117], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_115], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_61], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_128], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_115], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_61], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_128], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_86], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_116], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_62], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_129], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_86], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_116], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_62], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_129], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_133], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_108], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_63], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_130], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_133], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_108], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_63], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_130], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_136], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_118], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_131], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_136], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_118], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_131], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_137], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_119], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_65], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_132], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_137], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_119], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_65], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_132], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_138], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_121], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_66], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_134], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_138], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_121], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_66], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_134], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_139], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_122], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_67], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_135], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_139], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_122], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_67], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_135], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_145: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 7)
          T_add[ramp(((((cse_var_145*1568) + (ax1.inner*784)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 7)*112)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_145*32) + (ax1.inner*16)), 1, 16)])
        }
      }
    }
  }
}


==== Task 16: vm_mod_fused_nn_contrib_conv2d_NCHWc_add (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 2, 112, 112, 16], [1, 2, 1, 1, 16, 16], [1, 1, 1, 1, 16], [1, 1, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 112, 112, 16]
placeholder = PLACEHOLDER [1, 2, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 1, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=4)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=2)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=1)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=4)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=2)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=2)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [401408], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [512], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [16], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [200704], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 112, 112, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [1, 2, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 1, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 1, 112, 112, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 784) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [8]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 2) {
      let cse_var_1: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28)*7168) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28)*64)) + (ax3.outer.inner*32))
       {
        conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [8], [])[0] = broadcast(0f32, 16)
        conv2d_NCHWc_1[1] = broadcast(0f32, 16)
        conv2d_NCHWc_1[2] = broadcast(0f32, 16)
        conv2d_NCHWc_1[3] = broadcast(0f32, 16)
        conv2d_NCHWc_1[4] = broadcast(0f32, 16)
        conv2d_NCHWc_1[5] = broadcast(0f32, 16)
        conv2d_NCHWc_1[6] = broadcast(0f32, 16)
        conv2d_NCHWc_1[7] = broadcast(0f32, 16)
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 16)], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1792)], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1808)], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3584)], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3600)], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5376)], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5392)], 16)*placeholder_1[ramp(0, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 1)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 17)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1793)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1809)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3585)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3601)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5377)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5393)], 16)*placeholder_1[ramp(16, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 2)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 18)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1794)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1810)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3586)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3602)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5378)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5394)], 16)*placeholder_1[ramp(32, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 3)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 19)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1795)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1811)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3587)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3603)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5379)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5395)], 16)*placeholder_1[ramp(48, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 4)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 20)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1796)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1812)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3588)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3604)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5380)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5396)], 16)*placeholder_1[ramp(64, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 5)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 21)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1797)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1813)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3589)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3605)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5381)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5397)], 16)*placeholder_1[ramp(80, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 6)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 22)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1798)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1814)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3590)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3606)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5382)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5398)], 16)*placeholder_1[ramp(96, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 7)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 23)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1799)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1815)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3591)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3607)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5383)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5399)], 16)*placeholder_1[ramp(112, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 8)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 24)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1800)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1816)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3592)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3608)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5384)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5400)], 16)*placeholder_1[ramp(128, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 9)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 25)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1801)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1817)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3593)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3609)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5385)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5401)], 16)*placeholder_1[ramp(144, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 10)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 26)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1802)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1818)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3594)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3610)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5386)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5402)], 16)*placeholder_1[ramp(160, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 11)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 27)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1803)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1819)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3595)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3611)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5387)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5403)], 16)*placeholder_1[ramp(176, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 12)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 28)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1804)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1820)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3596)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3612)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5388)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5404)], 16)*placeholder_1[ramp(192, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 13)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 29)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1805)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1821)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3597)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3613)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5389)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5405)], 16)*placeholder_1[ramp(208, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 14)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 30)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1806)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1822)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3598)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3614)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5390)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5406)], 16)*placeholder_1[ramp(224, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 15)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 31)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1807)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 1823)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 3599)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3615)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 5391)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 5407)], 16)*placeholder_1[ramp(240, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200704)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200720)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202496)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202512)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204288)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204304)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206080)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206096)], 16)*placeholder_1[ramp(256, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200705)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200721)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202497)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202513)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204289)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204305)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206081)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206097)], 16)*placeholder_1[ramp(272, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200706)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200722)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202498)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202514)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204290)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204306)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206082)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206098)], 16)*placeholder_1[ramp(288, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200707)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200723)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202499)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202515)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204291)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204307)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206083)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206099)], 16)*placeholder_1[ramp(304, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200708)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200724)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202500)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202516)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204292)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204308)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206084)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206100)], 16)*placeholder_1[ramp(320, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200709)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200725)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202501)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202517)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204293)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204309)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206085)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206101)], 16)*placeholder_1[ramp(336, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200710)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200726)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202502)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202518)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204294)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204310)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206086)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206102)], 16)*placeholder_1[ramp(352, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200711)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200727)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202503)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202519)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204295)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204311)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206087)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206103)], 16)*placeholder_1[ramp(368, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200712)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200728)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202504)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202520)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204296)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204312)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206088)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206104)], 16)*placeholder_1[ramp(384, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200713)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200729)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202505)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202521)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204297)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204313)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206089)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206105)], 16)*placeholder_1[ramp(400, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200714)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200730)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202506)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202522)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204298)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204314)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206090)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206106)], 16)*placeholder_1[ramp(416, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200715)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200731)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202507)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202523)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204299)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204315)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206091)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206107)], 16)*placeholder_1[ramp(432, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200716)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200732)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202508)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202524)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204300)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204316)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206092)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206108)], 16)*placeholder_1[ramp(448, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200717)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200733)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202509)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202525)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204301)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204317)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206093)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206109)], 16)*placeholder_1[ramp(464, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200718)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200734)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202510)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202526)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204302)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204318)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206094)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206110)], 16)*placeholder_1[ramp(480, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 200719)], 16)*placeholder_1[ramp(496, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 200735)], 16)*placeholder_1[ramp(496, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 202511)], 16)*placeholder_1[ramp(496, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 202527)], 16)*placeholder_1[ramp(496, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 204303)], 16)*placeholder_1[ramp(496, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 204319)], 16)*placeholder_1[ramp(496, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 206095)], 16)*placeholder_1[ramp(496, 1, 16)]))
        conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 206111)], 16)*placeholder_1[ramp(496, 1, 16)]))
        for (ax2.inner: int32, 0, 4) {
          for (ax3.inner: int32, 0, 2) {
            T_add[ramp((((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28)*7168) + (ax2.inner*1792)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 28)*64)) + (ax3.outer.inner*32)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp(0, 1, 16)])
          }
        }
      }
    }
  }
}


==== Task 17: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7 (weight 3 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 10, 7, 7, 16], [60, 10, 1, 1, 16, 16], [1, 60, 1, 1, 16], [1, 60, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 10, 7, 7, 16]
placeholder = PLACEHOLDER [60, 10, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 60, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=2)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=10)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=4)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=2)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=10)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=1)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=7)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=1)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [7840], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [153600], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [960], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [47040], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 10, 7, 7, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [60, 10, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 60, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 60, 7, 7, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 210) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 40) {
        let cse_var_36: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 70)*51200) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 10)*5120)) + (ic.outer*64))
        let cse_var_35: int32 = (cse_var_36 + 16)
        let cse_var_34: int32 = (cse_var_36 + 2560)
        let cse_var_33: int32 = (cse_var_36 + 2576)
        let cse_var_32: int32 = (cse_var_36 + 2592)
        let cse_var_31: int32 = (cse_var_36 + 2608)
        let cse_var_30: int32 = (cse_var_36 + 32)
        let cse_var_29: int32 = (cse_var_36 + 48)
        let cse_var_28: int32 = (((floordiv(ic.outer, 4)*784) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 70), 10)*112)) + (floormod(ic.outer, 4)*4))
        let cse_var_27: int32 = (cse_var_28 + 99)
        let cse_var_26: int32 = (cse_var_28 + 98)
        let cse_var_25: int32 = (cse_var_28 + 97)
        let cse_var_24: int32 = (cse_var_28 + 96)
        let cse_var_23: int32 = (cse_var_28 + 83)
        let cse_var_22: int32 = (cse_var_28 + 82)
        let cse_var_21: int32 = (cse_var_28 + 1)
        let cse_var_20: int32 = (cse_var_28 + 16)
        let cse_var_19: int32 = (cse_var_28 + 17)
        let cse_var_18: int32 = (cse_var_28 + 18)
        let cse_var_17: int32 = (cse_var_28 + 19)
        let cse_var_16: int32 = (cse_var_28 + 2)
        let cse_var_15: int32 = (cse_var_28 + 3)
        let cse_var_14: int32 = (cse_var_28 + 33)
        let cse_var_13: int32 = (cse_var_28 + 34)
        let cse_var_12: int32 = (cse_var_28 + 35)
        let cse_var_11: int32 = (cse_var_28 + 48)
        let cse_var_10: int32 = (cse_var_28 + 49)
        let cse_var_9: int32 = (cse_var_28 + 50)
        let cse_var_8: int32 = (cse_var_28 + 51)
        let cse_var_7: int32 = (cse_var_28 + 64)
        let cse_var_6: int32 = (cse_var_28 + 65)
        let cse_var_5: int32 = (cse_var_28 + 66)
        let cse_var_4: int32 = (cse_var_28 + 67)
        let cse_var_3: int32 = (cse_var_28 + 80)
        let cse_var_2: int32 = (cse_var_28 + 81)
        let cse_var_1: int32 = (cse_var_28 + 32)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_38: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 10)
          let cse_var_37: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 70)
          T_relu[ramp((((((cse_var_37*15680) + (cse_var_38*1568)) + (ax1.inner*784)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 70), 10)*112)) + (ax3.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp((((cse_var_37*320) + (cse_var_38*32)) + (ax1.inner*16)), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 18: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_8 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 36, 14, 14, 16], [36, 1, 3, 3, 1, 16], [1, 36, 1, 1, 16], [1, 36, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 14, 14, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 15)) && (i3 >= 1)) && (i3 < 15)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [36, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 36, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=3)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=7)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=1)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=1)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=1)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=7)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=3)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=1)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=3)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=7)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=1)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=7)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o_i)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kw_o)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 16)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [112896], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [5184], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [576], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [28224], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 36, 14, 14, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [36, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 36, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 36, 7, 7, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 252) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [7]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [15]), storage_scope = global {
      DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [7], [])[0] = broadcast(0f32, 16)
      DepthwiseConv2d_1[1] = broadcast(0f32, 16)
      DepthwiseConv2d_1[2] = broadcast(0f32, 16)
      DepthwiseConv2d_1[3] = broadcast(0f32, 16)
      DepthwiseConv2d_1[4] = broadcast(0f32, 16)
      DepthwiseConv2d_1[5] = broadcast(0f32, 16)
      DepthwiseConv2d_1[6] = broadcast(0f32, 16)
      for (kw.outer: int32, 0, 3) {
        let cse_var_3: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)
        let cse_var_2: bool = (1 <= ((cse_var_3*2) + kw.outer))
        let cse_var_1: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)*3136) + (cse_var_3*32)) + (kw.outer*16))
         {
          PaddedInput_1: Buffer(PaddedInput, float32x16, [15], [])[0] = broadcast(0f32, 16)
          PaddedInput_1[1] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[2] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 208), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[3] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[4] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 656), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[5] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[6] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 1104), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[7] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 1328), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[8] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 1552), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[9] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[10] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2000), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[11] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2224), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[12] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2448), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[13] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2672), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          PaddedInput_1[14] = @tir.if_then_else(cse_var_2, placeholder[ramp((cse_var_1 + 2896), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
          for (kh.inner: int32, 0, 3) {
            let cse_var_4: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)*144) + (kh.inner*48)) + (kw.outer*16))
             {
              DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[kh.inner]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[(kh.inner + 2)]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[(kh.inner + 4)]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[(kh.inner + 6)]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[(kh.inner + 8)]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[(kh.inner + 10)]*placeholder_1[ramp(cse_var_4, 1, 16)]))
              DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[(kh.inner + 12)]*placeholder_1[ramp(cse_var_4, 1, 16)]))
            }
          }
        }
      }
      for (ax2.inner: int32, 0, 7) {
        let cse_var_5: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)
        T_relu[ramp((((cse_var_5*784) + (ax2.inner*112)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 7)*16)), 1, 16)] = max((DepthwiseConv2d_1[ax2.inner] + placeholder_2[ramp((cse_var_5*16), 1, 16)]), broadcast(0f32, 16))
      }
    }
  }
}


==== Task 19: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_1 (weight 2 key: ["9b33493c1055e7d356de27daf0a24610", [1, 12, 28, 28, 16], [2, 12, 1, 1, 16, 16], [1, 2, 1, 1, 16], [1, 2, 28, 28, 16], [1, 2, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 12, 28, 28, 16]
placeholder = PLACEHOLDER [2, 12, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 2, 28, 28, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=2)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=4)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=2)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=4)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [150528], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [6144], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [32], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [25088], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [25088], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 2, 28, 28, 16], []), placeholder_4: placeholder_12: Buffer(placeholder_8, float32, [1, 12, 28, 28, 16], []), placeholder_6: placeholder_13: Buffer(placeholder_10, float32, [1, 2, 1, 1, 16], []), placeholder_7: placeholder_14: Buffer(placeholder_11, float32, [1, 2, 28, 28, 16], []), placeholder_5: placeholder_15: Buffer(placeholder_9, float32, [2, 12, 1, 1, 16, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 112) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 12) {
        for (ic.inner: int32, 0, 16) {
          let cse_var_9: int32 = ((ic.outer*256) + (ic.inner*16))
          let cse_var_8: int32 = (cse_var_9 + 3072)
          let cse_var_7: int32 = (((ic.outer*12544) + (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*112)) + ic.inner)
          let cse_var_6: int32 = (cse_var_7 + 96)
          let cse_var_5: int32 = (cse_var_7 + 80)
          let cse_var_4: int32 = (cse_var_7 + 64)
          let cse_var_3: int32 = (cse_var_7 + 48)
          let cse_var_2: int32 = (cse_var_7 + 32)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_10: int32 = (((ax1.inner*12544) + (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused*112)) + (ax3.inner*16))
          T_add[ramp(cse_var_10, 1, 16)] = ((conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp((ax1.inner*16), 1, 16)]) + placeholder_3[ramp(cse_var_10, 1, 16)])
        }
      }
    }
  }
}


==== Task 20: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_add_3 (weight 2 key: ["9b33493c1055e7d356de27daf0a24610", [1, 36, 14, 14, 16], [6, 36, 1, 1, 16, 16], [1, 6, 1, 1, 16], [1, 6, 14, 14, 16], [1, 6, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 36, 14, 14, 16]
placeholder = PLACEHOLDER [6, 36, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
placeholder = PLACEHOLDER [1, 6, 14, 14, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (T_add[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, ax2, ax3, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=3)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=3)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_4: handle, placeholder_5: handle, placeholder_6: handle, placeholder_7: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_8: Pointer(float32), float32, [112896], []),
             placeholder_1: Buffer(placeholder_9: Pointer(float32), float32, [55296], []),
             placeholder_2: Buffer(placeholder_10: Pointer(float32), float32, [96], []),
             placeholder_3: Buffer(placeholder_11: Pointer(float32), float32, [18816], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [18816], [])}
  buffer_map = {placeholder_4: placeholder, placeholder_5: placeholder_1, placeholder_6: placeholder_2, placeholder_7: placeholder_3, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_4: placeholder_12: Buffer(placeholder_8, float32, [1, 36, 14, 14, 16], []), placeholder_7: placeholder_13: Buffer(placeholder_11, float32, [1, 6, 14, 14, 16], []), placeholder_6: placeholder_14: Buffer(placeholder_10, float32, [1, 6, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 6, 14, 14, 16], []), placeholder_5: placeholder_15: Buffer(placeholder_9, float32, [6, 36, 1, 1, 16, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 84) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 36) {
        let cse_var_144: int32 = ((ic.outer*3136) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 3)*112))
        let cse_var_143: int32 = ((floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 3)*18432) + (ic.outer*256))
        let cse_var_142: int32 = (cse_var_144 + 19)
        let cse_var_141: int32 = (cse_var_144 + 17)
        let cse_var_140: int32 = (cse_var_144 + 16)
        let cse_var_139: int32 = (cse_var_144 + 15)
        let cse_var_138: int32 = (cse_var_144 + 14)
        let cse_var_137: int32 = (cse_var_144 + 13)
        let cse_var_136: int32 = (cse_var_144 + 12)
        let cse_var_135: int32 = (cse_var_144 + 111)
        let cse_var_134: int32 = (cse_var_144 + 110)
        let cse_var_133: int32 = (cse_var_144 + 11)
        let cse_var_132: int32 = (cse_var_144 + 109)
        let cse_var_131: int32 = (cse_var_144 + 108)
        let cse_var_130: int32 = (cse_var_144 + 107)
        let cse_var_129: int32 = (cse_var_144 + 106)
        let cse_var_128: int32 = (cse_var_144 + 105)
        let cse_var_127: int32 = (cse_var_144 + 103)
        let cse_var_126: int32 = (cse_var_144 + 18)
        let cse_var_125: int32 = (cse_var_144 + 35)
        let cse_var_124: int32 = (cse_var_144 + 33)
        let cse_var_123: int32 = (cse_var_144 + 32)
        let cse_var_122: int32 = (cse_var_144 + 31)
        let cse_var_121: int32 = (cse_var_144 + 30)
        let cse_var_120: int32 = (cse_var_144 + 3)
        let cse_var_119: int32 = (cse_var_144 + 29)
        let cse_var_118: int32 = (cse_var_144 + 28)
        let cse_var_117: int32 = (cse_var_144 + 104)
        let cse_var_116: int32 = (cse_var_144 + 26)
        let cse_var_115: int32 = (cse_var_144 + 25)
        let cse_var_114: int32 = (cse_var_144 + 24)
        let cse_var_113: int32 = (cse_var_144 + 23)
        let cse_var_112: int32 = (cse_var_144 + 22)
        let cse_var_111: int32 = (cse_var_144 + 21)
        let cse_var_110: int32 = (cse_var_144 + 20)
        let cse_var_109: int32 = (cse_var_144 + 2)
        let cse_var_108: int32 = (cse_var_144 + 27)
        let cse_var_107: int32 = (cse_var_143 + 9264)
        let cse_var_106: int32 = (cse_var_143 + 9248)
        let cse_var_105: int32 = (cse_var_143 + 9232)
        let cse_var_104: int32 = (cse_var_143 + 9216)
        let cse_var_103: int32 = (cse_var_143 + 80)
        let cse_var_102: int32 = (cse_var_143 + 64)
        let cse_var_101: int32 = (cse_var_143 + 48)
        let cse_var_100: int32 = (cse_var_143 + 32)
        let cse_var_99: int32 = (cse_var_144 + 34)
        let cse_var_98: int32 = (cse_var_143 + 224)
        let cse_var_97: int32 = (cse_var_143 + 208)
        let cse_var_96: int32 = (cse_var_143 + 192)
        let cse_var_95: int32 = (cse_var_143 + 176)
        let cse_var_94: int32 = (cse_var_143 + 160)
        let cse_var_93: int32 = (cse_var_143 + 16)
        let cse_var_92: int32 = (cse_var_143 + 144)
        let cse_var_91: int32 = (cse_var_143 + 112)
        let cse_var_90: int32 = (cse_var_143 + 240)
        let cse_var_89: int32 = (cse_var_144 + 102)
        let cse_var_88: int32 = (cse_var_144 + 101)
        let cse_var_87: int32 = (cse_var_144 + 100)
        let cse_var_86: int32 = (cse_var_144 + 10)
        let cse_var_85: int32 = (cse_var_144 + 1)
        let cse_var_84: int32 = (cse_var_143 + 96)
        let cse_var_83: int32 = (cse_var_143 + 9456)
        let cse_var_82: int32 = (cse_var_143 + 9440)
        let cse_var_81: int32 = (cse_var_143 + 9280)
        let cse_var_80: int32 = (cse_var_143 + 9408)
        let cse_var_79: int32 = (cse_var_143 + 9392)
        let cse_var_78: int32 = (cse_var_143 + 9376)
        let cse_var_77: int32 = (cse_var_143 + 9360)
        let cse_var_76: int32 = (cse_var_143 + 9344)
        let cse_var_75: int32 = (cse_var_143 + 9328)
        let cse_var_74: int32 = (cse_var_143 + 9312)
        let cse_var_73: int32 = (cse_var_143 + 9296)
        let cse_var_72: int32 = (cse_var_143 + 9424)
        let cse_var_71: int32 = (cse_var_144 + 82)
        let cse_var_70: int32 = (cse_var_144 + 81)
        let cse_var_69: int32 = (cse_var_144 + 80)
        let cse_var_68: int32 = (cse_var_144 + 8)
        let cse_var_67: int32 = (cse_var_144 + 79)
        let cse_var_66: int32 = (cse_var_144 + 78)
        let cse_var_65: int32 = (cse_var_144 + 77)
        let cse_var_64: int32 = (cse_var_143 + 128)
        let cse_var_63: int32 = (cse_var_144 + 75)
        let cse_var_62: int32 = (cse_var_144 + 74)
        let cse_var_61: int32 = (cse_var_144 + 73)
        let cse_var_60: int32 = (cse_var_144 + 72)
        let cse_var_59: int32 = (cse_var_144 + 71)
        let cse_var_58: int32 = (cse_var_144 + 70)
        let cse_var_57: int32 = (cse_var_144 + 7)
        let cse_var_56: int32 = (cse_var_144 + 69)
        let cse_var_55: int32 = (cse_var_144 + 76)
        let cse_var_54: int32 = (cse_var_144 + 99)
        let cse_var_53: int32 = (cse_var_144 + 98)
        let cse_var_52: int32 = (cse_var_144 + 97)
        let cse_var_51: int32 = (cse_var_144 + 96)
        let cse_var_50: int32 = (cse_var_144 + 95)
        let cse_var_49: int32 = (cse_var_144 + 94)
        let cse_var_48: int32 = (cse_var_144 + 93)
        let cse_var_47: int32 = (cse_var_144 + 92)
        let cse_var_46: int32 = (cse_var_144 + 83)
        let cse_var_45: int32 = (cse_var_144 + 90)
        let cse_var_44: int32 = (cse_var_144 + 9)
        let cse_var_43: int32 = (cse_var_144 + 89)
        let cse_var_42: int32 = (cse_var_144 + 88)
        let cse_var_41: int32 = (cse_var_144 + 87)
        let cse_var_40: int32 = (cse_var_144 + 86)
        let cse_var_39: int32 = (cse_var_144 + 85)
        let cse_var_38: int32 = (cse_var_144 + 84)
        let cse_var_37: int32 = (cse_var_144 + 91)
        let cse_var_36: int32 = (cse_var_144 + 50)
        let cse_var_35: int32 = (cse_var_144 + 5)
        let cse_var_34: int32 = (cse_var_144 + 49)
        let cse_var_33: int32 = (cse_var_144 + 48)
        let cse_var_32: int32 = (cse_var_144 + 47)
        let cse_var_31: int32 = (cse_var_144 + 46)
        let cse_var_30: int32 = (cse_var_144 + 45)
        let cse_var_29: int32 = (cse_var_144 + 44)
        let cse_var_28: int32 = (cse_var_144 + 68)
        let cse_var_27: int32 = (cse_var_144 + 42)
        let cse_var_26: int32 = (cse_var_144 + 41)
        let cse_var_25: int32 = (cse_var_144 + 40)
        let cse_var_24: int32 = (cse_var_144 + 4)
        let cse_var_23: int32 = (cse_var_144 + 39)
        let cse_var_22: int32 = (cse_var_144 + 38)
        let cse_var_21: int32 = (cse_var_144 + 37)
        let cse_var_20: int32 = (cse_var_144 + 36)
        let cse_var_19: int32 = (cse_var_144 + 43)
        let cse_var_18: int32 = (cse_var_144 + 67)
        let cse_var_17: int32 = (cse_var_144 + 66)
        let cse_var_16: int32 = (cse_var_144 + 65)
        let cse_var_15: int32 = (cse_var_144 + 64)
        let cse_var_14: int32 = (cse_var_144 + 63)
        let cse_var_13: int32 = (cse_var_144 + 62)
        let cse_var_12: int32 = (cse_var_144 + 61)
        let cse_var_11: int32 = (cse_var_144 + 60)
        let cse_var_10: int32 = (cse_var_144 + 51)
        let cse_var_9: int32 = (cse_var_144 + 59)
        let cse_var_8: int32 = (cse_var_144 + 58)
        let cse_var_7: int32 = (cse_var_144 + 57)
        let cse_var_6: int32 = (cse_var_144 + 56)
        let cse_var_5: int32 = (cse_var_144 + 55)
        let cse_var_4: int32 = (cse_var_144 + 54)
        let cse_var_3: int32 = (cse_var_144 + 53)
        let cse_var_2: int32 = (cse_var_144 + 52)
        let cse_var_1: int32 = (cse_var_144 + 6)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_144], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_140], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_123], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_69], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_143, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_144], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_140], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_123], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_33], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_69], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_51], 16)*placeholder_1[ramp(cse_var_104, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_85], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_141], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_124], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_70], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_93, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_85], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_141], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_124], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_34], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_70], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_52], 16)*placeholder_1[ramp(cse_var_105, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_109], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_126], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_99], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_71], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_100, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_109], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_126], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_99], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_36], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_71], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_53], 16)*placeholder_1[ramp(cse_var_106, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_120], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_142], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_125], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_101, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_120], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_142], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_125], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_46], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_54], 16)*placeholder_1[ramp(cse_var_107, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_110], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_87], 16)*placeholder_1[ramp(cse_var_102, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_110], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_38], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_87], 16)*placeholder_1[ramp(cse_var_81, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_111], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_88], 16)*placeholder_1[ramp(cse_var_103, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_35], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_111], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_56], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_39], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_88], 16)*placeholder_1[ramp(cse_var_73, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_112], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_58], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_89], 16)*placeholder_1[ramp(cse_var_84, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_112], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_58], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_40], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_89], 16)*placeholder_1[ramp(cse_var_74, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_57], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_113], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_59], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_127], 16)*placeholder_1[ramp(cse_var_91, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_57], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_113], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_59], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_41], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_127], 16)*placeholder_1[ramp(cse_var_75, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_68], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_114], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_60], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_117], 16)*placeholder_1[ramp(cse_var_64, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_68], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_114], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_60], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_42], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_117], 16)*placeholder_1[ramp(cse_var_76, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_115], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_61], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_128], 16)*placeholder_1[ramp(cse_var_92, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_44], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_115], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_61], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_43], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_128], 16)*placeholder_1[ramp(cse_var_77, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_86], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_116], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_62], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_129], 16)*placeholder_1[ramp(cse_var_94, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_86], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_116], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_62], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_45], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_129], 16)*placeholder_1[ramp(cse_var_78, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_133], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_108], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_63], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_130], 16)*placeholder_1[ramp(cse_var_95, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_133], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_108], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_63], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_37], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_130], 16)*placeholder_1[ramp(cse_var_79, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_136], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_118], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_131], 16)*placeholder_1[ramp(cse_var_96, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_136], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_118], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_29], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_55], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_47], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_131], 16)*placeholder_1[ramp(cse_var_80, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_137], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_119], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_65], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_132], 16)*placeholder_1[ramp(cse_var_97, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_137], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_119], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_30], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_65], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_48], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_132], 16)*placeholder_1[ramp(cse_var_72, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_138], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_121], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_66], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_134], 16)*placeholder_1[ramp(cse_var_98, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_138], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_121], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_31], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_66], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_49], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_134], 16)*placeholder_1[ramp(cse_var_82, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_139], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_122], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_67], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_135], 16)*placeholder_1[ramp(cse_var_90, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_139], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_122], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_32], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_67], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_50], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_135], 16)*placeholder_1[ramp(cse_var_83, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_146: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 3)
          let cse_var_145: int32 = ((((cse_var_146*6272) + (ax1.inner*3136)) + (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 3)*112)) + (ax3.inner*16))
          T_add[ramp(cse_var_145, 1, 16)] = ((conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_146*32) + (ax1.inner*16)), 1, 16)]) + placeholder_3[ramp(cse_var_145, 1, 16)])
        }
      }
    }
  }
}


==== Task 21: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_1 (weight 1 key: ["f32a181d1c966eb8dcb0f07fc0212143", [1, 8, 56, 56, 12], [2, 8, 1, 1, 12, 12], [1, 2, 1, 1, 12], [1, 2, 56, 56, 12]]) =====
placeholder = PLACEHOLDER [1, 8, 56, 56, 12]
placeholder = PLACEHOLDER [2, 8, 1, 1, 12, 12]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 12), (oh + kh), (ow + kw), floormod(ic, 12)]*placeholder[oc_chunk, floordiv(ic, 12), kh, kw, floormod(ic, 12), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 12]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=2)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=14)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=8)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=12)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=12)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=1)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=2)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=14)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=8)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=12)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused_ax4_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [301056], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [2304], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [24], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [75264], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 8, 56, 56, 12], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [2, 8, 1, 1, 12, 12], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 2, 1, 1, 12], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 2, 56, 56, 12], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused: int32, 0, 448) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x12), float32x12, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x12, [14], [])[0] = broadcast(0f32, 12)
      conv2d_NCHWc_1[1] = broadcast(0f32, 12)
      conv2d_NCHWc_1[2] = broadcast(0f32, 12)
      conv2d_NCHWc_1[3] = broadcast(0f32, 12)
      conv2d_NCHWc_1[4] = broadcast(0f32, 12)
      conv2d_NCHWc_1[5] = broadcast(0f32, 12)
      conv2d_NCHWc_1[6] = broadcast(0f32, 12)
      conv2d_NCHWc_1[7] = broadcast(0f32, 12)
      conv2d_NCHWc_1[8] = broadcast(0f32, 12)
      conv2d_NCHWc_1[9] = broadcast(0f32, 12)
      conv2d_NCHWc_1[10] = broadcast(0f32, 12)
      conv2d_NCHWc_1[11] = broadcast(0f32, 12)
      conv2d_NCHWc_1[12] = broadcast(0f32, 12)
      conv2d_NCHWc_1[13] = broadcast(0f32, 12)
      for (ic.outer: int32, 0, 8) {
        for (ic.inner: int32, 0, 12) {
          let cse_var_2: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 224)*1152) + (ic.outer*144)) + (ic.inner*12))
          let cse_var_1: int32 = ((((ic.outer*37632) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 224), 8)*1344)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 8)*84)) + ic.inner)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_1], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 12)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 24)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 36)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 48)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 60)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 72)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[(cse_var_1 + 672)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[(cse_var_1 + 684)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[(cse_var_1 + 696)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[(cse_var_1 + 708)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[(cse_var_1 + 720)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[(cse_var_1 + 732)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[(cse_var_1 + 744)], 12)*placeholder_1[ramp(cse_var_2, 1, 12)]))
          }
        }
      }
      for (ax2.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          T_add[ramp(((((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 8)*1344) + (ax2.inner*672)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 8)*84)) + (ax3.inner*12)), 1, 12)] = (conv2d_NCHWc_1[((ax2.inner*7) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused.ax4.outer.inner.fused, 224)*12), 1, 12)])
        }
      }
    }
  }
}


==== Task 22: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_9 (weight 3 key: ["193974b73c385510c28dcb191affa8cd", [1, 60, 7, 7, 16], [60, 1, 3, 3, 1, 16], [1, 60, 1, 1, 16], [1, 60, 7, 7, 16]]) =====
placeholder = PLACEHOLDER [1, 60, 7, 7, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [60, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 60, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=1)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=1)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=1)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=1)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=7)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=1)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=1)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=3)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=1)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=7)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=1)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o_i)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kh_o)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 512)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [47040], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [8640], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [960], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [47040], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 60, 7, 7, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [60, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 60, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 60, 7, 7, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused: int32, 0, 420) "parallel" {
    let cse_var_13: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused, 7)
    let cse_var_12: int32 = (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused*112)
    let cse_var_11: bool = (1 <= cse_var_13)
    let cse_var_10: int32 = (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused, 7)*144)
    let cse_var_9: bool = (cse_var_13 < 6)
    let cse_var_8: int32 = (cse_var_10 + 112)
    let cse_var_7: int32 = (cse_var_10 + 128)
    let cse_var_6: int32 = (cse_var_10 + 16)
    let cse_var_5: int32 = (cse_var_10 + 32)
    let cse_var_4: int32 = (cse_var_10 + 48)
    let cse_var_3: int32 = (cse_var_10 + 64)
    let cse_var_2: int32 = (cse_var_10 + 80)
    let cse_var_1: int32 = (cse_var_10 + 96)
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [7]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [9]), storage_scope = global {
      DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [7], [])[0] = broadcast(0f32, 16)
      DepthwiseConv2d_1[1] = broadcast(0f32, 16)
      DepthwiseConv2d_1[2] = broadcast(0f32, 16)
      DepthwiseConv2d_1[3] = broadcast(0f32, 16)
      DepthwiseConv2d_1[4] = broadcast(0f32, 16)
      DepthwiseConv2d_1[5] = broadcast(0f32, 16)
      DepthwiseConv2d_1[6] = broadcast(0f32, 16)
      PaddedInput_1: Buffer(PaddedInput, float32x16, [9], [])[0] = broadcast(0f32, 16)
      PaddedInput_1[1] = @tir.if_then_else(cse_var_11, placeholder[ramp((cse_var_12 - 112), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[2] = @tir.if_then_else(cse_var_11, placeholder[ramp((cse_var_12 - 96), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[3] = @tir.if_then_else(cse_var_11, placeholder[ramp((cse_var_12 - 80), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[4] = @tir.if_then_else(cse_var_11, placeholder[ramp((cse_var_12 - 64), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[5] = @tir.if_then_else(cse_var_11, placeholder[ramp((cse_var_12 - 48), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[6] = @tir.if_then_else(cse_var_11, placeholder[ramp((cse_var_12 - 32), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[7] = @tir.if_then_else(cse_var_11, placeholder[ramp((cse_var_12 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[8] = broadcast(0f32, 16)
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_10, 1, 16)]))
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_6, 1, 16)]))
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_5, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_10, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_6, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_5, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_10, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_6, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_5, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_10, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_6, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_5, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_10, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_6, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_5, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_10, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_6, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_5, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_10, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_6, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_5, 1, 16)]))
      PaddedInput_1[0] = broadcast(0f32, 16)
      PaddedInput_1[1] = placeholder[ramp(cse_var_12, 1, 16)]
      PaddedInput_1[2] = placeholder[ramp((cse_var_12 + 16), 1, 16)]
      PaddedInput_1[3] = placeholder[ramp((cse_var_12 + 32), 1, 16)]
      PaddedInput_1[4] = placeholder[ramp((cse_var_12 + 48), 1, 16)]
      PaddedInput_1[5] = placeholder[ramp((cse_var_12 + 64), 1, 16)]
      PaddedInput_1[6] = placeholder[ramp((cse_var_12 + 80), 1, 16)]
      PaddedInput_1[7] = placeholder[ramp((cse_var_12 + 96), 1, 16)]
      PaddedInput_1[8] = broadcast(0f32, 16)
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_4, 1, 16)]))
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_3, 1, 16)]))
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_2, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_4, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_3, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_2, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_4, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_3, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_2, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_4, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_3, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_2, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_4, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_3, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_2, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_4, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_3, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_2, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_4, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_3, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_2, 1, 16)]))
      PaddedInput_1[0] = broadcast(0f32, 16)
      PaddedInput_1[1] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_12 + 112), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[2] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_12 + 128), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[3] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_12 + 144), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[4] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_12 + 160), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[5] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_12 + 176), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[6] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_12 + 192), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[7] = @tir.if_then_else(cse_var_9, placeholder[ramp((cse_var_12 + 208), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
      PaddedInput_1[8] = broadcast(0f32, 16)
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_1, 1, 16)]))
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_8, 1, 16)]))
      DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_7, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_1, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_8, 1, 16)]))
      DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_7, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_1, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_8, 1, 16)]))
      DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_7, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_1, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_8, 1, 16)]))
      DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_7, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_1, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_8, 1, 16)]))
      DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_7, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_1, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_8, 1, 16)]))
      DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_7, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_1, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_8, 1, 16)]))
      DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_7, 1, 16)]))
      for (ax3.inner: int32, 0, 7) {
        T_relu[ramp((cse_var_12 + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[ax3.inner] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused, 7)*16), 1, 16)]), broadcast(0f32, 16))
      }
    }
  }
}


==== Task 23: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_4 (weight 3 key: ["193974b73c385510c28dcb191affa8cd", [1, 12, 28, 28, 16], [12, 1, 3, 3, 1, 16], [1, 12, 1, 1, 16], [1, 12, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 12, 28, 28, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [12, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 12, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=1)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=1)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=4)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=1)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=2)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=1)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=14)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=3)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=1)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=4)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=2)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=14)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o_i)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kw_o)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 512)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [150528], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [1728], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [192], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [150528], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 12, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [12, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 12, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 12, 28, 28, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused: int32, 0, 84) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [8]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [12]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 14) {
      let cse_var_26: int32 = floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 7)
      let cse_var_25: bool = (ax3.outer.inner < 13)
      let cse_var_24: bool = (1 <= ax3.outer.inner)
      let cse_var_23: bool = (cse_var_26 < 6)
      let cse_var_22: int32 = (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 7)*144)
      let cse_var_21: bool = (1 <= cse_var_26)
      let cse_var_20: int32 = ((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused*1792) + (ax3.outer.inner*32))
      let cse_var_19: int32 = (cse_var_22 + 112)
      let cse_var_18: int32 = (cse_var_22 + 16)
      let cse_var_17: int32 = (cse_var_22 + 32)
      let cse_var_16: int32 = (cse_var_22 + 48)
      let cse_var_15: int32 = (cse_var_22 + 64)
      let cse_var_14: int32 = (cse_var_22 + 80)
      let cse_var_13: int32 = (cse_var_22 + 96)
      let cse_var_12: int32 = (cse_var_22 + 128)
      let cse_var_11: int32 = (cse_var_20 + 448)
      let cse_var_10: int32 = (cse_var_20 + 1808)
      let cse_var_9: int32 = (cse_var_20 + 1792)
      let cse_var_8: int32 = (cse_var_20 + 16)
      let cse_var_7: int32 = (cse_var_20 + 1360)
      let cse_var_6: int32 = (cse_var_20 + 464)
      let cse_var_5: int32 = (cse_var_20 + 896)
      let cse_var_4: int32 = (cse_var_20 + 912)
      let cse_var_3: int32 = (cse_var_20 - 432)
      let cse_var_2: int32 = (cse_var_20 - 448)
      let cse_var_1: int32 = (cse_var_20 + 1344)
       {
        DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [8], [])[0] = broadcast(0f32, 16)
        DepthwiseConv2d_1[1] = broadcast(0f32, 16)
        DepthwiseConv2d_1[2] = broadcast(0f32, 16)
        DepthwiseConv2d_1[3] = broadcast(0f32, 16)
        DepthwiseConv2d_1[4] = broadcast(0f32, 16)
        DepthwiseConv2d_1[5] = broadcast(0f32, 16)
        DepthwiseConv2d_1[6] = broadcast(0f32, 16)
        DepthwiseConv2d_1[7] = broadcast(0f32, 16)
        PaddedInput_1: Buffer(PaddedInput, float32x16, [12], [])[0] = @tir.if_then_else((cse_var_21 && cse_var_24), placeholder[ramp((cse_var_20 - 464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[3] = placeholder[ramp(cse_var_20, 1, 16)]
        PaddedInput_1[4] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 + 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[5] = placeholder[ramp(cse_var_11, 1, 16)]
        PaddedInput_1[6] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 + 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[7] = placeholder[ramp(cse_var_5, 1, 16)]
        PaddedInput_1[8] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 + 1328), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[9] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[10] = @tir.if_then_else((cse_var_23 && cse_var_24), placeholder[ramp((cse_var_20 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_9, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = placeholder[ramp(cse_var_20, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_8, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_11, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_6, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp(cse_var_5, 1, 16)]
        PaddedInput_1[7] = placeholder[ramp(cse_var_4, 1, 16)]
        PaddedInput_1[8] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[9] = placeholder[ramp(cse_var_7, 1, 16)]
        PaddedInput_1[10] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_9, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_10, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else((cse_var_21 && cse_var_25), placeholder[ramp((cse_var_20 - 416), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = placeholder[ramp(cse_var_8, 1, 16)]
        PaddedInput_1[3] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 32), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = placeholder[ramp(cse_var_6, 1, 16)]
        PaddedInput_1[5] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 480), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = placeholder[ramp(cse_var_4, 1, 16)]
        PaddedInput_1[7] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 928), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[8] = placeholder[ramp(cse_var_7, 1, 16)]
        PaddedInput_1[9] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 1376), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[10] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_10, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = @tir.if_then_else((cse_var_23 && cse_var_25), placeholder[ramp((cse_var_20 + 1824), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        for (ax2.inner: int32, 0, 4) {
          for (ax3.inner: int32, 0, 2) {
            T_relu[ramp(((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused*1792) + (ax2.inner*448)) + (ax3.outer.inner*32)) + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 7)*16), 1, 16)]), broadcast(0f32, 16))
          }
        }
      }
    }
  }
}


==== Task 24: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_3 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 9, 56, 56, 16], [9, 1, 3, 3, 1, 16], [1, 9, 1, 1, 16], [1, 9, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 9, 56, 56, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 57)) && (i3 >= 1)) && (i3 < 57)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [9, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 9, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=1)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=1)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=2)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=1)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=1)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=1)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=3)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=3)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax1_o, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax2_o, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=2)
T_relu_ax3_o, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=1)
T_relu_ax4_o, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
s[T_relu].reorder(T_relu_ax0_o, T_relu_ax1_o, T_relu_ax2_o, T_relu_ax3_o, T_relu_ax4_o, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_oh_o_o_i)
T_relu_ax0_o_ax1_o_fused_ax2_o_fused = s[T_relu].fuse(T_relu_ax0_o, T_relu_ax1_o, T_relu_ax2_o)
s[T_relu].parallel(T_relu_ax0_o_ax1_o_fused_ax2_o_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 64)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [451584], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [1296], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [144], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [112896], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 9, 56, 56, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [9, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 9, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 9, 28, 28, 16], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused: int32, 0, 126) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [2]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [9]), storage_scope = global;
    for (ax3.outer: int32, 0, 28) {
      let cse_var_15: bool = (1 <= ax3.outer)
      let cse_var_14: int32 = (floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused, 14)*144)
      let cse_var_13: bool = (1 <= floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused, 14))
      let cse_var_12: int32 = ((ax0.outer.ax1.outer.fused.ax2.outer.fused*3584) + (ax3.outer*32))
      let cse_var_11: int32 = (cse_var_14 + 112)
      let cse_var_10: int32 = (cse_var_14 + 16)
      let cse_var_9: int32 = (cse_var_14 + 32)
      let cse_var_8: int32 = (cse_var_14 + 48)
      let cse_var_7: int32 = (cse_var_14 + 64)
      let cse_var_6: int32 = (cse_var_14 + 80)
      let cse_var_5: int32 = (cse_var_14 + 96)
      let cse_var_4: int32 = (cse_var_14 + 128)
      let cse_var_3: int32 = (cse_var_12 + 880)
      let cse_var_2: int32 = (cse_var_12 + 896)
      let cse_var_1: int32 = (cse_var_12 + 912)
       {
        PaddedInput_1: Buffer(PaddedInput, float32x16, [9], [])[0] = @tir.if_then_else((cse_var_13 && cse_var_15), placeholder[ramp((cse_var_12 - 912), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_13, placeholder[ramp((cse_var_12 - 896), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = @tir.if_then_else(cse_var_13, placeholder[ramp((cse_var_12 - 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[3] = @tir.if_then_else(cse_var_15, placeholder[ramp((cse_var_12 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = placeholder[ramp(cse_var_12, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp((cse_var_12 + 16), 1, 16)]
        PaddedInput_1[6] = @tir.if_then_else(cse_var_15, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[7] = placeholder[ramp(cse_var_2, 1, 16)]
        PaddedInput_1[8] = placeholder[ramp(cse_var_1, 1, 16)]
        DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [2], [])[0] = broadcast(0f32, 16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_10, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_9, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_8, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_7, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_6, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_5, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_11, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_4, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_15, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = placeholder[ramp(cse_var_2, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[3] = @tir.if_then_else(cse_var_15, placeholder[ramp((cse_var_12 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = placeholder[ramp((cse_var_12 + 1792), 1, 16)]
        PaddedInput_1[5] = placeholder[ramp((cse_var_12 + 1808), 1, 16)]
        PaddedInput_1[6] = @tir.if_then_else(cse_var_15, placeholder[ramp((cse_var_12 + 2672), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[7] = placeholder[ramp((cse_var_12 + 2688), 1, 16)]
        PaddedInput_1[8] = placeholder[ramp((cse_var_12 + 2704), 1, 16)]
        DepthwiseConv2d_1[1] = broadcast(0f32, 16)
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_10, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_9, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_8, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_7, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_6, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_5, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_11, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_4, 1, 16)]))
        for (ax2.inner: int32, 0, 2) {
          T_relu[ramp((((ax0.outer.ax1.outer.fused.ax2.outer.fused*896) + (ax2.inner*448)) + (ax3.outer*16)), 1, 16)] = max((DepthwiseConv2d_1[ax2.inner] + placeholder_2[ramp((floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused, 14)*16), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 25: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6 (weight 3 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 6, 14, 14, 16], [36, 6, 1, 1, 16, 16], [1, 36, 1, 1, 16], [1, 36, 14, 14, 16]]) =====
placeholder = PLACEHOLDER [1, 6, 14, 14, 16]
placeholder = PLACEHOLDER [36, 6, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 36, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=2)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=7)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=4)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=2)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=7)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=1)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=1)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [18816], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [55296], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [576], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [112896], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 6, 14, 14, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [36, 6, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 36, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 36, 14, 14, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused: int32, 0, 504) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 24) {
        let cse_var_36: int32 = ((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 28)*3072) + (ic.outer*64))
        let cse_var_35: int32 = (cse_var_36 + 48)
        let cse_var_34: int32 = (cse_var_36 + 32)
        let cse_var_33: int32 = (cse_var_36 + 16)
        let cse_var_32: int32 = (cse_var_36 + 1584)
        let cse_var_31: int32 = (cse_var_36 + 1568)
        let cse_var_30: int32 = (cse_var_36 + 1552)
        let cse_var_29: int32 = (cse_var_36 + 1536)
        let cse_var_28: int32 = ((((floordiv(ic.outer, 4)*3136) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 28), 14)*1568)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 14)*16)) + (floormod(ic.outer, 4)*4))
        let cse_var_27: int32 = (cse_var_28 + 227)
        let cse_var_26: int32 = (cse_var_28 + 225)
        let cse_var_25: int32 = (cse_var_28 + 224)
        let cse_var_24: int32 = (cse_var_28 + 2)
        let cse_var_23: int32 = (cse_var_28 + 1347)
        let cse_var_22: int32 = (cse_var_28 + 1346)
        let cse_var_21: int32 = (cse_var_28 + 1345)
        let cse_var_20: int32 = (cse_var_28 + 1344)
        let cse_var_19: int32 = (cse_var_28 + 1123)
        let cse_var_18: int32 = (cse_var_28 + 1122)
        let cse_var_17: int32 = (cse_var_28 + 1121)
        let cse_var_16: int32 = (cse_var_28 + 1)
        let cse_var_15: int32 = (cse_var_28 + 226)
        let cse_var_14: int32 = (cse_var_28 + 3)
        let cse_var_13: int32 = (cse_var_28 + 448)
        let cse_var_12: int32 = (cse_var_28 + 449)
        let cse_var_11: int32 = (cse_var_28 + 450)
        let cse_var_10: int32 = (cse_var_28 + 451)
        let cse_var_9: int32 = (cse_var_28 + 672)
        let cse_var_8: int32 = (cse_var_28 + 673)
        let cse_var_7: int32 = (cse_var_28 + 674)
        let cse_var_6: int32 = (cse_var_28 + 675)
        let cse_var_5: int32 = (cse_var_28 + 896)
        let cse_var_4: int32 = (cse_var_28 + 897)
        let cse_var_3: int32 = (cse_var_28 + 898)
        let cse_var_2: int32 = (cse_var_28 + 899)
        let cse_var_1: int32 = (cse_var_28 + 1120)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 7) {
          let cse_var_37: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 28)
          T_relu[ramp((((((cse_var_37*6272) + (ax1.inner*3136)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 28), 14)*1568)) + (ax2.inner*224)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused, 14)*16)), 1, 16)] = max((conv2d_NCHWc_1[((ax1.inner*7) + ax2.inner)] + placeholder_2[ramp(((cse_var_37*32) + (ax1.inner*16)), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 26: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2 (weight 1 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 1, 112, 112, 16], [6, 1, 1, 1, 16, 16], [1, 6, 1, 1, 16], [1, 6, 112, 112, 16]]) =====
placeholder = PLACEHOLDER [1, 1, 112, 112, 16]
placeholder = PLACEHOLDER [6, 1, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=2)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=28)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=1)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=2)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=2)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=2)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=28)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 64)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [200704], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [1536], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [96], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [1204224], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 1, 112, 112, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [6, 1, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 6, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 6, 112, 112, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused: int32, 0, 336) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [8]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 28) {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [8], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 16) {
        let cse_var_6: int32 = ((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 112)*512) + (ic.outer*16))
        let cse_var_5: int32 = (cse_var_6 + 256)
        let cse_var_4: int32 = ((((floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 112), 2)*3584) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 2)*896)) + (ax3.outer.inner*32)) + ic.outer)
        let cse_var_3: int32 = (cse_var_4 + 1808)
        let cse_var_2: int32 = (cse_var_4 + 1792)
        let cse_var_1: int32 = (cse_var_4 + 16)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax2.inner: int32, 0, 2) {
          for (ax3.inner: int32, 0, 2) {
            let cse_var_7: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 112)
            T_relu[ramp((((((((cse_var_7*401408) + (ax1.inner*200704)) + (floordiv(floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 112), 2)*3584)) + (ax2.inner*1792)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused, 2)*896)) + (ax3.outer.inner*32)) + (ax3.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[(((ax1.inner*4) + (ax2.inner*2)) + ax3.inner)] + placeholder_2[ramp(((cse_var_7*32) + (ax1.inner*16)), 1, 16)]), broadcast(0f32, 16))
          }
        }
      }
    }
  }
}


==== Task 27: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5 (weight 4 key: ["f6615ae9259e3b2add2908c0cd980cb6", [1, 4, 28, 28, 16], [24, 4, 1, 1, 16, 16], [1, 24, 1, 1, 16], [1, 24, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 4, 28, 28, 16]
placeholder = PLACEHOLDER [24, 4, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 24, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=4)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=2)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=2)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=14)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=16)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=4)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=2)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=2)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=14)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [50176], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [24576], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [384], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [301056], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 4, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [24, 4, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 24, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 24, 28, 28, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused: int32, 0, 84) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [16]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 14) {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [16], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      conv2d_NCHWc_1[14] = broadcast(0f32, 16)
      conv2d_NCHWc_1[15] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 4) {
        for (ic.inner: int32, 0, 16) {
          let cse_var_8: int32 = (((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 14)*4096) + (ic.outer*256)) + (ic.inner*16))
          let cse_var_7: int32 = ((((ic.outer*12544) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 14)*896)) + (ax3.outer.inner*32)) + ic.inner)
          let cse_var_6: int32 = (cse_var_8 + 3072)
          let cse_var_5: int32 = (cse_var_8 + 2048)
          let cse_var_4: int32 = (cse_var_8 + 1024)
          let cse_var_3: int32 = (cse_var_7 + 464)
          let cse_var_2: int32 = (cse_var_7 + 448)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[14] = (conv2d_NCHWc_1[14] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
            conv2d_NCHWc_1[15] = (conv2d_NCHWc_1[15] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 4) {
        for (ax2.inner: int32, 0, 2) {
          for (ax3.inner: int32, 0, 2) {
            let cse_var_9: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 14)
            T_relu[ramp(((((((cse_var_9*50176) + (ax1.inner*12544)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused, 14)*896)) + (ax2.inner*448)) + (ax3.outer.inner*32)) + (ax3.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[(((ax1.inner*4) + (ax2.inner*2)) + ax3.inner)] + placeholder_2[ramp(((cse_var_9*64) + (ax1.inner*16)), 1, 16)]), broadcast(0f32, 16))
          }
        }
      }
    }
  }
}


==== Task 28: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_1 (weight 1 key: ["4023d3d9ab0b50de255aceaa184a7c65", [1, 6, 112, 112, 16], [6, 1, 3, 3, 1, 16], [1, 6, 1, 1, 16], [1, 6, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 6, 112, 112, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 113)) && (i3 >= 1)) && (i3 < 113)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [6, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), ((oh*2) + kh), ((ow*2) + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 6, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=2)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=1)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=56)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=4)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=1)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=14)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=1)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=1)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=2)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=1)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=56)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=4)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=14)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o_i)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kw_o)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 512)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [1204224], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [864], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [96], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [301056], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 6, 112, 112, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [6, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 6, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 6, 56, 56, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 336) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [4]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [7]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 14) {
      let cse_var_32: bool = (1 <= ax3.outer.inner)
      let cse_var_31: int32 = (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56)*144)
      let cse_var_30: bool = (1 <= floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56))
      let cse_var_29: int32 = ((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused*3584) + (ax3.outer.inner*128))
      let cse_var_28: int32 = (cse_var_31 + 112)
      let cse_var_27: int32 = (cse_var_31 + 128)
      let cse_var_26: int32 = (cse_var_31 + 32)
      let cse_var_25: int32 = (cse_var_31 + 48)
      let cse_var_24: int32 = (cse_var_31 + 64)
      let cse_var_23: int32 = (cse_var_31 + 80)
      let cse_var_22: int32 = (cse_var_31 + 96)
      let cse_var_21: int32 = (cse_var_31 + 16)
      let cse_var_20: int32 = (cse_var_29 + 1856)
      let cse_var_19: int32 = (cse_var_29 + 64)
      let cse_var_18: int32 = (cse_var_29 + 32)
      let cse_var_17: int32 = (cse_var_29 + 1888)
      let cse_var_16: int32 = (cse_var_29 + 1872)
      let cse_var_15: int32 = (cse_var_29 + 1840)
      let cse_var_14: int32 = (cse_var_29 + 1824)
      let cse_var_13: int32 = (cse_var_29 + 1808)
      let cse_var_12: int32 = (cse_var_29 + 1792)
      let cse_var_11: int32 = (cse_var_29 + 48)
      let cse_var_10: int32 = (cse_var_29 + 80)
      let cse_var_9: int32 = (cse_var_29 + 96)
      let cse_var_8: int32 = (cse_var_29 - 1696)
      let cse_var_7: int32 = (cse_var_29 - 1712)
      let cse_var_6: int32 = (cse_var_29 - 1728)
      let cse_var_5: int32 = (cse_var_29 - 1744)
      let cse_var_4: int32 = (cse_var_29 - 1760)
      let cse_var_3: int32 = (cse_var_29 - 1776)
      let cse_var_2: int32 = (cse_var_29 - 1792)
      let cse_var_1: int32 = (cse_var_29 + 16)
       {
        DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [4], [])[0] = broadcast(0f32, 16)
        DepthwiseConv2d_1[1] = broadcast(0f32, 16)
        DepthwiseConv2d_1[2] = broadcast(0f32, 16)
        DepthwiseConv2d_1[3] = broadcast(0f32, 16)
        PaddedInput_1: Buffer(PaddedInput, float32x16, [7], [])[0] = @tir.if_then_else((cse_var_30 && cse_var_32), placeholder[ramp((cse_var_29 - 1808), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[3] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_4, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_5, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[5] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_6, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_7, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_31, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_31, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_31, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_31, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_4, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[3] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_5, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_6, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[5] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_7, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_8, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_21, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_4, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_5, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[3] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_6, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_7, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[5] = @tir.if_then_else(cse_var_30, placeholder[ramp(cse_var_8, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = @tir.if_then_else(cse_var_30, placeholder[ramp((cse_var_29 - 1680), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_26, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_26, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_26, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_26, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_32, placeholder[ramp((cse_var_29 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = placeholder[ramp(cse_var_29, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_18, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_11, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_19, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp(cse_var_10, 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_25, 1, 16)]))
        PaddedInput_1[0] = placeholder[ramp(cse_var_29, 1, 16)]
        PaddedInput_1[1] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_18, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_11, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_19, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_10, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp(cse_var_9, 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_24, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_24, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_24, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_24, 1, 16)]))
        PaddedInput_1[0] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[1] = placeholder[ramp(cse_var_18, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_11, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_19, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_10, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_9, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp((cse_var_29 + 112), 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_23, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_32, placeholder[ramp((cse_var_29 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = placeholder[ramp(cse_var_12, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_13, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_14, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_15, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_20, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp(cse_var_16, 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        PaddedInput_1[0] = placeholder[ramp(cse_var_12, 1, 16)]
        PaddedInput_1[1] = placeholder[ramp(cse_var_13, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_14, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_15, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_20, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_16, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp(cse_var_17, 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_28, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_28, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_28, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_28, 1, 16)]))
        PaddedInput_1[0] = placeholder[ramp(cse_var_13, 1, 16)]
        PaddedInput_1[1] = placeholder[ramp(cse_var_14, 1, 16)]
        PaddedInput_1[2] = placeholder[ramp(cse_var_15, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_20, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_16, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_17, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp((cse_var_29 + 1904), 1, 16)]
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_27, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_27, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_27, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_27, 1, 16)]))
        for (ax3.inner: int32, 0, 4) {
          T_relu[ramp((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused*896) + (ax3.outer.inner*64)) + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[ax3.inner] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 56)*16), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 29: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3 (weight 2 key: ["998acdd7c0e6666ce5ddc398c4ba0ff3", [1, 2, 56, 56, 12], [9, 2, 1, 1, 12, 16], [1, 9, 1, 1, 16], [1, 9, 56, 56, 16]]) =====
placeholder = PLACEHOLDER [1, 2, 56, 56, 12]
placeholder = PLACEHOLDER [9, 2, 1, 1, 12, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 12), (oh + kh), (ow + kw), floormod(ic, 12)]*placeholder[oc_chunk, floordiv(ic, 12), kh, kw, floormod(ic, 12), oc_block])
placeholder = PLACEHOLDER [1, 9, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=7)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=56)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=1)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_relu_ax0_o_i, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax0_o_o, T_relu_ax0_o_i = s[T_relu].split(T_relu_ax0_o_i, factor=1)
T_relu_ax1_o_i, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax1_o_o, T_relu_ax1_o_i = s[T_relu].split(T_relu_ax1_o_i, factor=1)
T_relu_ax2_o_i, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=7)
T_relu_ax2_o_o, T_relu_ax2_o_i = s[T_relu].split(T_relu_ax2_o_i, factor=1)
T_relu_ax3_o_i, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=1)
T_relu_ax3_o_o, T_relu_ax3_o_i = s[T_relu].split(T_relu_ax3_o_i, factor=56)
T_relu_ax4_o_i, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
T_relu_ax4_o_o, T_relu_ax4_o_i = s[T_relu].split(T_relu_ax4_o_i, factor=1)
s[T_relu].reorder(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i, T_relu_ax3_o_i, T_relu_ax4_o_i, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_relu], T_relu_ax4_o_i)
T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused = s[T_relu].fuse(T_relu_ax0_o_o, T_relu_ax1_o_o, T_relu_ax2_o_o, T_relu_ax3_o_o, T_relu_ax4_o_o, T_relu_ax0_o_i, T_relu_ax1_o_i, T_relu_ax2_o_i)
s[T_relu].parallel(T_relu_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [75264], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [3456], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [144], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [451584], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 2, 56, 56, 12], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [9, 2, 1, 1, 12, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 9, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 9, 56, 56, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused: int32, 0, 72) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [7]), storage_scope = global;
    for (ax3.outer.inner: int32, 0, 56) {
      let cse_var_25: int32 = (floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 8)*384)
      let cse_var_24: int32 = (cse_var_25 + 112)
      let cse_var_23: int32 = (cse_var_25 + 128)
      let cse_var_22: int32 = (cse_var_25 + 16)
      let cse_var_21: int32 = (cse_var_25 + 160)
      let cse_var_20: int32 = (cse_var_25 + 176)
      let cse_var_19: int32 = (cse_var_25 + 192)
      let cse_var_18: int32 = (cse_var_25 + 208)
      let cse_var_17: int32 = (cse_var_25 + 224)
      let cse_var_16: int32 = (cse_var_25 + 240)
      let cse_var_15: int32 = (cse_var_25 + 256)
      let cse_var_14: int32 = (cse_var_25 + 272)
      let cse_var_13: int32 = (cse_var_25 + 288)
      let cse_var_12: int32 = (cse_var_25 + 96)
      let cse_var_11: int32 = (cse_var_25 + 144)
      let cse_var_10: int32 = (cse_var_25 + 80)
      let cse_var_9: int32 = (cse_var_25 + 64)
      let cse_var_8: int32 = (cse_var_25 + 48)
      let cse_var_7: int32 = (cse_var_25 + 368)
      let cse_var_6: int32 = (cse_var_25 + 352)
      let cse_var_5: int32 = (cse_var_25 + 336)
      let cse_var_4: int32 = (cse_var_25 + 320)
      let cse_var_3: int32 = (cse_var_25 + 32)
      let cse_var_2: int32 = (cse_var_25 + 304)
      let cse_var_1: int32 = ((floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 8)*4704) + (ax3.outer.inner*12))
       {
        conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [7], [])[0] = broadcast(0f32, 16)
        conv2d_NCHWc_1[1] = broadcast(0f32, 16)
        conv2d_NCHWc_1[2] = broadcast(0f32, 16)
        conv2d_NCHWc_1[3] = broadcast(0f32, 16)
        conv2d_NCHWc_1[4] = broadcast(0f32, 16)
        conv2d_NCHWc_1[5] = broadcast(0f32, 16)
        conv2d_NCHWc_1[6] = broadcast(0f32, 16)
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 672)], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1344)], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2016)], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2688)], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3360)], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4032)], 16)*placeholder_1[ramp(cse_var_25, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 1)], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 673)], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1345)], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2017)], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2689)], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3361)], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4033)], 16)*placeholder_1[ramp(cse_var_22, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 2)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 674)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1346)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2018)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2690)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3362)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4034)], 16)*placeholder_1[ramp(cse_var_3, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 3)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 675)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1347)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2019)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2691)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3363)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4035)], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 4)], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 676)], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1348)], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2020)], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2692)], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3364)], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4036)], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 5)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 677)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1349)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2021)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2693)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3365)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4037)], 16)*placeholder_1[ramp(cse_var_10, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 6)], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 678)], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1350)], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2022)], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2694)], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3366)], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4038)], 16)*placeholder_1[ramp(cse_var_12, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 7)], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 679)], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1351)], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2023)], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2695)], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3367)], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4039)], 16)*placeholder_1[ramp(cse_var_24, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 8)], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 680)], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1352)], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2024)], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2696)], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3368)], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4040)], 16)*placeholder_1[ramp(cse_var_23, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 9)], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 681)], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1353)], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2025)], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2697)], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3369)], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4041)], 16)*placeholder_1[ramp(cse_var_11, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 10)], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 682)], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1354)], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2026)], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2698)], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3370)], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4042)], 16)*placeholder_1[ramp(cse_var_21, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 11)], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 683)], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 1355)], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 2027)], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 2699)], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 3371)], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 4043)], 16)*placeholder_1[ramp(cse_var_20, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37632)], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38304)], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38976)], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39648)], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40320)], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40992)], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41664)], 16)*placeholder_1[ramp(cse_var_19, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37633)], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38305)], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38977)], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39649)], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40321)], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40993)], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41665)], 16)*placeholder_1[ramp(cse_var_18, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37634)], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38306)], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38978)], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39650)], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40322)], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40994)], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41666)], 16)*placeholder_1[ramp(cse_var_17, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37635)], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38307)], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38979)], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39651)], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40323)], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40995)], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41667)], 16)*placeholder_1[ramp(cse_var_16, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37636)], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38308)], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38980)], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39652)], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40324)], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40996)], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41668)], 16)*placeholder_1[ramp(cse_var_15, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37637)], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38309)], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38981)], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39653)], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40325)], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40997)], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41669)], 16)*placeholder_1[ramp(cse_var_14, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37638)], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38310)], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38982)], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39654)], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40326)], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40998)], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41670)], 16)*placeholder_1[ramp(cse_var_13, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37639)], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38311)], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38983)], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39655)], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40327)], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 40999)], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41671)], 16)*placeholder_1[ramp(cse_var_2, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37640)], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38312)], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38984)], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39656)], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40328)], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 41000)], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41672)], 16)*placeholder_1[ramp(cse_var_4, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37641)], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38313)], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38985)], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39657)], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40329)], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 41001)], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41673)], 16)*placeholder_1[ramp(cse_var_5, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37642)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38314)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38986)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39658)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40330)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 41002)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41674)], 16)*placeholder_1[ramp(cse_var_6, 1, 16)]))
        conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[(cse_var_1 + 37643)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[(cse_var_1 + 38315)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[(cse_var_1 + 38987)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[(cse_var_1 + 39659)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[(cse_var_1 + 40331)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[(cse_var_1 + 41003)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[(cse_var_1 + 41675)], 16)*placeholder_1[ramp(cse_var_7, 1, 16)]))
        for (ax2.inner: int32, 0, 7) {
          T_relu[ramp((((ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused*6272) + (ax2.inner*896)) + (ax3.outer.inner*16)), 1, 16)] = max((conv2d_NCHWc_1[ax2.inner] + placeholder_2[ramp((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused, 8)*16), 1, 16)]), broadcast(0f32, 16))
        }
      }
    }
  }
}


==== Task 30: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_3 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 12, 28, 28, 16], [4, 12, 1, 1, 16, 16], [1, 4, 1, 1, 16], [1, 4, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 12, 28, 28, 16]
placeholder = PLACEHOLDER [4, 12, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 4, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=1)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=2)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=1)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=7)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=4)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 512)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [150528], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [12288], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [64], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [50176], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 12, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [4, 12, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 4, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 4, 28, 28, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 224) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 48) {
        let cse_var_36: int32 = ((floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 112)*6144) + (ic.outer*64))
        let cse_var_35: int32 = (cse_var_36 + 48)
        let cse_var_34: int32 = (cse_var_36 + 32)
        let cse_var_33: int32 = (cse_var_36 + 3120)
        let cse_var_32: int32 = (cse_var_36 + 3104)
        let cse_var_31: int32 = (cse_var_36 + 3088)
        let cse_var_30: int32 = (cse_var_36 + 3072)
        let cse_var_29: int32 = (cse_var_36 + 16)
        let cse_var_28: int32 = (((floordiv(ic.outer, 4)*12544) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 112)*112)) + (floormod(ic.outer, 4)*4))
        let cse_var_27: int32 = (cse_var_28 + 50)
        let cse_var_26: int32 = (cse_var_28 + 48)
        let cse_var_25: int32 = (cse_var_28 + 35)
        let cse_var_24: int32 = (cse_var_28 + 34)
        let cse_var_23: int32 = (cse_var_28 + 33)
        let cse_var_22: int32 = (cse_var_28 + 32)
        let cse_var_21: int32 = (cse_var_28 + 3)
        let cse_var_20: int32 = (cse_var_28 + 2)
        let cse_var_19: int32 = (cse_var_28 + 19)
        let cse_var_18: int32 = (cse_var_28 + 18)
        let cse_var_17: int32 = (cse_var_28 + 17)
        let cse_var_16: int32 = (cse_var_28 + 1)
        let cse_var_15: int32 = (cse_var_28 + 49)
        let cse_var_14: int32 = (cse_var_28 + 51)
        let cse_var_13: int32 = (cse_var_28 + 64)
        let cse_var_12: int32 = (cse_var_28 + 65)
        let cse_var_11: int32 = (cse_var_28 + 66)
        let cse_var_10: int32 = (cse_var_28 + 67)
        let cse_var_9: int32 = (cse_var_28 + 80)
        let cse_var_8: int32 = (cse_var_28 + 81)
        let cse_var_7: int32 = (cse_var_28 + 82)
        let cse_var_6: int32 = (cse_var_28 + 83)
        let cse_var_5: int32 = (cse_var_28 + 96)
        let cse_var_4: int32 = (cse_var_28 + 97)
        let cse_var_3: int32 = (cse_var_28 + 98)
        let cse_var_2: int32 = (cse_var_28 + 99)
        let cse_var_1: int32 = (cse_var_28 + 16)
         {
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_36, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_29, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_34, 1, 16)]))
          conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_35, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_28], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_16], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_20], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_21], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_17], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_18], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_19], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_22], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_23], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_24], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_25], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_26], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_15], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_27], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_14], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_13], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_12], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_11], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_10], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_9], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_8], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_30, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_31, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_32, 1, 16)]))
          conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_33, 1, 16)]))
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          let cse_var_37: int32 = floordiv(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 112)
          T_add[ramp(((((cse_var_37*25088) + (ax1.inner*12544)) + (floormod(ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused, 112)*112)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp(((cse_var_37*32) + (ax1.inner*16)), 1, 16)])
        }
      }
    }
  }
}


==== Task 31: vm_mod_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_5 (weight 3 key: ["193974b73c385510c28dcb191affa8cd", [1, 24, 28, 28, 16], [24, 1, 3, 3, 1, 16], [1, 24, 1, 1, 16], [1, 24, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 24, 28, 28, 16]
PaddedInput(i0, i1, i2, i3, i4) = tir.if_then_else(((((i2 >= 1) && (i2 < 29)) && (i3 >= 1)) && (i3 < 29)), placeholder[i0, i1, (i2 - 1), (i3 - 1), i4], 0f)
placeholder = PLACEHOLDER [24, 1, 3, 3, 1, 16]
DepthwiseConv2d(b, oco, oh, ow, oci) += (PaddedInput[b, floordiv(((oco*16) + oci), 16), (oh + kh), (ow + kw), floormod(((oco*16) + oci), 16)]*placeholder[oco, 0, kh, kw, 0, oci])
placeholder = PLACEHOLDER [1, 24, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (DepthwiseConv2d[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])
T_relu(ax0, ax1, ax2, ax3, ax4) = max(T_add[ax0, ax1, ax2, ax3, ax4], 0f)


Trace for this task is: 
PaddedInput_i0, PaddedInput_i1, PaddedInput_i2, PaddedInput_i3, PaddedInput_i4 = tuple(PaddedInput.op.axis) + tuple(PaddedInput.op.reduce_axis)
DepthwiseConv2d_b, DepthwiseConv2d_oco, DepthwiseConv2d_oh, DepthwiseConv2d_ow, DepthwiseConv2d_oci, DepthwiseConv2d_kh, DepthwiseConv2d_kw = tuple(DepthwiseConv2d.op.axis) + tuple(DepthwiseConv2d.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
T_relu_ax0, T_relu_ax1, T_relu_ax2, T_relu_ax3, T_relu_ax4 = tuple(T_relu.op.axis) + tuple(T_relu.op.reduce_axis)
s[T_add].compute_inline()
DepthwiseConv2d_b_o_i, DepthwiseConv2d_b_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b, factor=1)
DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_b_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_i, factor=1)
DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_b_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_b_o_o_i, factor=1)
DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oco_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco, factor=1)
DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oco_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_i, factor=1)
DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oco_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oco_o_o_i, factor=1)
DepthwiseConv2d_oh_o_i, DepthwiseConv2d_oh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh, factor=4)
DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_oh_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_i, factor=1)
DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_oh_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oh_o_o_i, factor=1)
DepthwiseConv2d_ow_o_i, DepthwiseConv2d_ow_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow, factor=2)
DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_ow_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_i, factor=1)
DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_ow_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_ow_o_o_i, factor=1)
DepthwiseConv2d_oci_o_i, DepthwiseConv2d_oci_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci, factor=16)
DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_oci_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_i, factor=1)
DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_oci_o_o_i = s[DepthwiseConv2d].split(DepthwiseConv2d_oci_o_o_i, factor=1)
DepthwiseConv2d_kh_o, DepthwiseConv2d_kh_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kh, factor=3)
DepthwiseConv2d_kw_o, DepthwiseConv2d_kw_i = s[DepthwiseConv2d].split(DepthwiseConv2d_kw, factor=1)
s[DepthwiseConv2d].reorder(DepthwiseConv2d_b_o_o_o, DepthwiseConv2d_oco_o_o_o, DepthwiseConv2d_oh_o_o_o, DepthwiseConv2d_ow_o_o_o, DepthwiseConv2d_oci_o_o_o, DepthwiseConv2d_b_o_o_i, DepthwiseConv2d_oco_o_o_i, DepthwiseConv2d_oh_o_o_i, DepthwiseConv2d_ow_o_o_i, DepthwiseConv2d_oci_o_o_i, DepthwiseConv2d_kh_o, DepthwiseConv2d_kw_o, DepthwiseConv2d_b_o_i, DepthwiseConv2d_oco_o_i, DepthwiseConv2d_oh_o_i, DepthwiseConv2d_ow_o_i, DepthwiseConv2d_oci_o_i, DepthwiseConv2d_kh_i, DepthwiseConv2d_kw_i, DepthwiseConv2d_b_i, DepthwiseConv2d_oco_i, DepthwiseConv2d_oh_i, DepthwiseConv2d_ow_i, DepthwiseConv2d_oci_i)
T_relu_ax0_o, T_relu_ax0_i = s[T_relu].split(T_relu_ax0, factor=1)
T_relu_ax1_o, T_relu_ax1_i = s[T_relu].split(T_relu_ax1, factor=1)
T_relu_ax2_o, T_relu_ax2_i = s[T_relu].split(T_relu_ax2, factor=4)
T_relu_ax3_o, T_relu_ax3_i = s[T_relu].split(T_relu_ax3, factor=2)
T_relu_ax4_o, T_relu_ax4_i = s[T_relu].split(T_relu_ax4, factor=16)
s[T_relu].reorder(T_relu_ax0_o, T_relu_ax1_o, T_relu_ax2_o, T_relu_ax3_o, T_relu_ax4_o, T_relu_ax0_i, T_relu_ax1_i, T_relu_ax2_i, T_relu_ax3_i, T_relu_ax4_i)
s[DepthwiseConv2d].compute_at(s[T_relu], T_relu_ax4_o)
s[PaddedInput].compute_at(s[DepthwiseConv2d], DepthwiseConv2d_kw_o)
T_relu_ax0_o_ax1_o_fused_ax2_o_fused = s[T_relu].fuse(T_relu_ax0_o, T_relu_ax1_o, T_relu_ax2_o)
s[T_relu].parallel(T_relu_ax0_o_ax1_o_fused_ax2_o_fused)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "auto_unroll_max_step", 512)
s[DepthwiseConv2d].pragma(DepthwiseConv2d_b_o_o_o, "unroll_explicit", True)
s[PaddedInput].vectorize(PaddedInput_i4)
s[DepthwiseConv2d].vectorize(DepthwiseConv2d_oci_i)
s[T_relu].vectorize(T_relu_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_relu_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [301056], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [3456], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [384], []),
             T_relu: Buffer(T_relu_2: Pointer(float32), float32, [301056], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_relu_1: T_relu}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 24, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [24, 1, 3, 3, 1, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 24, 1, 1, 16], []), T_relu_1: T_relu_3: Buffer(T_relu_2, float32, [1, 24, 28, 28, 16], [])} {
  for (ax0.outer.ax1.outer.fused.ax2.outer.fused: int32, 0, 168) "parallel" {
    allocate(DepthwiseConv2d: Pointer(global float32x16), float32x16, [8]), storage_scope = global;
    allocate(PaddedInput: Pointer(global float32x16), float32x16, [12]), storage_scope = global;
    for (ax3.outer: int32, 0, 14) {
      let cse_var_26: int32 = floormod(ax0.outer.ax1.outer.fused.ax2.outer.fused, 7)
      let cse_var_25: bool = (ax3.outer < 13)
      let cse_var_24: bool = (1 <= ax3.outer)
      let cse_var_23: bool = (cse_var_26 < 6)
      let cse_var_22: int32 = (floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused, 7)*144)
      let cse_var_21: bool = (1 <= cse_var_26)
      let cse_var_20: int32 = ((ax0.outer.ax1.outer.fused.ax2.outer.fused*1792) + (ax3.outer*32))
      let cse_var_19: int32 = (cse_var_22 + 112)
      let cse_var_18: int32 = (cse_var_22 + 16)
      let cse_var_17: int32 = (cse_var_22 + 32)
      let cse_var_16: int32 = (cse_var_22 + 48)
      let cse_var_15: int32 = (cse_var_22 + 64)
      let cse_var_14: int32 = (cse_var_22 + 80)
      let cse_var_13: int32 = (cse_var_22 + 96)
      let cse_var_12: int32 = (cse_var_22 + 128)
      let cse_var_11: int32 = (cse_var_20 + 448)
      let cse_var_10: int32 = (cse_var_20 + 1808)
      let cse_var_9: int32 = (cse_var_20 + 1792)
      let cse_var_8: int32 = (cse_var_20 + 16)
      let cse_var_7: int32 = (cse_var_20 + 1360)
      let cse_var_6: int32 = (cse_var_20 + 464)
      let cse_var_5: int32 = (cse_var_20 + 896)
      let cse_var_4: int32 = (cse_var_20 + 912)
      let cse_var_3: int32 = (cse_var_20 - 432)
      let cse_var_2: int32 = (cse_var_20 - 448)
      let cse_var_1: int32 = (cse_var_20 + 1344)
       {
        DepthwiseConv2d_1: Buffer(DepthwiseConv2d, float32x16, [8], [])[0] = broadcast(0f32, 16)
        DepthwiseConv2d_1[1] = broadcast(0f32, 16)
        DepthwiseConv2d_1[2] = broadcast(0f32, 16)
        DepthwiseConv2d_1[3] = broadcast(0f32, 16)
        DepthwiseConv2d_1[4] = broadcast(0f32, 16)
        DepthwiseConv2d_1[5] = broadcast(0f32, 16)
        DepthwiseConv2d_1[6] = broadcast(0f32, 16)
        DepthwiseConv2d_1[7] = broadcast(0f32, 16)
        PaddedInput_1: Buffer(PaddedInput, float32x16, [12], [])[0] = @tir.if_then_else((cse_var_21 && cse_var_24), placeholder[ramp((cse_var_20 - 464), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 - 16), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[3] = placeholder[ramp(cse_var_20, 1, 16)]
        PaddedInput_1[4] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 + 432), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[5] = placeholder[ramp(cse_var_11, 1, 16)]
        PaddedInput_1[6] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 + 880), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[7] = placeholder[ramp(cse_var_5, 1, 16)]
        PaddedInput_1[8] = @tir.if_then_else(cse_var_24, placeholder[ramp((cse_var_20 + 1328), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[9] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[10] = @tir.if_then_else((cse_var_23 && cse_var_24), placeholder[ramp((cse_var_20 + 1776), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_9, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_22, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_16, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_13, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_2, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = placeholder[ramp(cse_var_20, 1, 16)]
        PaddedInput_1[3] = placeholder[ramp(cse_var_8, 1, 16)]
        PaddedInput_1[4] = placeholder[ramp(cse_var_11, 1, 16)]
        PaddedInput_1[5] = placeholder[ramp(cse_var_6, 1, 16)]
        PaddedInput_1[6] = placeholder[ramp(cse_var_5, 1, 16)]
        PaddedInput_1[7] = placeholder[ramp(cse_var_4, 1, 16)]
        PaddedInput_1[8] = placeholder[ramp(cse_var_1, 1, 16)]
        PaddedInput_1[9] = placeholder[ramp(cse_var_7, 1, 16)]
        PaddedInput_1[10] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_9, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_10, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_18, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_15, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_19, 1, 16)]))
        PaddedInput_1[0] = @tir.if_then_else(cse_var_21, placeholder[ramp(cse_var_3, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[1] = @tir.if_then_else((cse_var_21 && cse_var_25), placeholder[ramp((cse_var_20 - 416), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[2] = placeholder[ramp(cse_var_8, 1, 16)]
        PaddedInput_1[3] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 32), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[4] = placeholder[ramp(cse_var_6, 1, 16)]
        PaddedInput_1[5] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 480), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[6] = placeholder[ramp(cse_var_4, 1, 16)]
        PaddedInput_1[7] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 928), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[8] = placeholder[ramp(cse_var_7, 1, 16)]
        PaddedInput_1[9] = @tir.if_then_else(cse_var_25, placeholder[ramp((cse_var_20 + 1376), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[10] = @tir.if_then_else(cse_var_23, placeholder[ramp(cse_var_10, 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        PaddedInput_1[11] = @tir.if_then_else((cse_var_23 && cse_var_25), placeholder[ramp((cse_var_20 + 1824), 1, 16)], broadcast(0f32, 16), dtype=float32x16)
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[0]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[1]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_17, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[2]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[3]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_14, 1, 16)]))
        DepthwiseConv2d_1[0] = (DepthwiseConv2d_1[0] + (PaddedInput_1[4]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[1] = (DepthwiseConv2d_1[1] + (PaddedInput_1[5]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[2] = (DepthwiseConv2d_1[2] + (PaddedInput_1[6]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[3] = (DepthwiseConv2d_1[3] + (PaddedInput_1[7]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[4] = (DepthwiseConv2d_1[4] + (PaddedInput_1[8]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[5] = (DepthwiseConv2d_1[5] + (PaddedInput_1[9]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[6] = (DepthwiseConv2d_1[6] + (PaddedInput_1[10]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        DepthwiseConv2d_1[7] = (DepthwiseConv2d_1[7] + (PaddedInput_1[11]*placeholder_1[ramp(cse_var_12, 1, 16)]))
        for (ax2.inner: int32, 0, 4) {
          for (ax3.inner: int32, 0, 2) {
            T_relu[ramp(((((ax0.outer.ax1.outer.fused.ax2.outer.fused*1792) + (ax2.inner*448)) + (ax3.outer*32)) + (ax3.inner*16)), 1, 16)] = max((DepthwiseConv2d_1[((ax2.inner*2) + ax3.inner)] + placeholder_2[ramp((floordiv(ax0.outer.ax1.outer.fused.ax2.outer.fused, 7)*16), 1, 16)]), broadcast(0f32, 16))
          }
        }
      }
    }
  }
}


==== Task 32: vm_mod_fused_nn_contrib_conv2d_NCHWc_add_2 (weight 1 key: ["cf2511a3ec519e6155f096d38dbb03da", [1, 9, 28, 28, 16], [2, 9, 1, 1, 16, 16], [1, 2, 1, 1, 16], [1, 2, 28, 28, 16]]) =====
placeholder = PLACEHOLDER [1, 9, 28, 28, 16]
placeholder = PLACEHOLDER [2, 9, 1, 1, 16, 16]
conv2d_NCHWc(n, oc_chunk, oh, ow, oc_block) += (placeholder[n, floordiv(ic, 16), (oh + kh), (ow + kw), floormod(ic, 16)]*placeholder[oc_chunk, floordiv(ic, 16), kh, kw, floormod(ic, 16), oc_block])
placeholder = PLACEHOLDER [1, 2, 1, 1, 16]
T_add(ax0, ax1, ax2, ax3, ax4) = (conv2d_NCHWc[ax0, ax1, ax2, ax3, ax4] + placeholder[ax0, ax1, 0, 0, ax4])


Trace for this task is: 
conv2d_NCHWc_n, conv2d_NCHWc_oc_chunk, conv2d_NCHWc_oh, conv2d_NCHWc_ow, conv2d_NCHWc_oc_block, conv2d_NCHWc_ic, conv2d_NCHWc_kh, conv2d_NCHWc_kw = tuple(conv2d_NCHWc.op.axis) + tuple(conv2d_NCHWc.op.reduce_axis)
T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3, T_add_ax4 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
conv2d_NCHWc_n_o_i, conv2d_NCHWc_n_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n, factor=1)
conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_n_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_i, factor=1)
conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_n_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_n_o_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oc_chunk_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk, factor=2)
conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oc_chunk_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_i, factor=1)
conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oc_chunk_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_chunk_o_o_i, factor=1)
conv2d_NCHWc_oh_o_i, conv2d_NCHWc_oh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh, factor=1)
conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_oh_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_i, factor=1)
conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_oh_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oh_o_o_i, factor=1)
conv2d_NCHWc_ow_o_i, conv2d_NCHWc_ow_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow, factor=7)
conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_ow_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_i, factor=1)
conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_ow_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ow_o_o_i, factor=1)
conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_oc_block_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block, factor=16)
conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_oc_block_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_i, factor=1)
conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_oc_block_o_o_i = s[conv2d_NCHWc].split(conv2d_NCHWc_oc_block_o_o_i, factor=1)
conv2d_NCHWc_ic_o, conv2d_NCHWc_ic_i = s[conv2d_NCHWc].split(conv2d_NCHWc_ic, factor=6)
conv2d_NCHWc_kh_o, conv2d_NCHWc_kh_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kh, factor=1)
conv2d_NCHWc_kw_o, conv2d_NCHWc_kw_i = s[conv2d_NCHWc].split(conv2d_NCHWc_kw, factor=1)
s[conv2d_NCHWc].reorder(conv2d_NCHWc_n_o_o_o, conv2d_NCHWc_oc_chunk_o_o_o, conv2d_NCHWc_oh_o_o_o, conv2d_NCHWc_ow_o_o_o, conv2d_NCHWc_oc_block_o_o_o, conv2d_NCHWc_n_o_o_i, conv2d_NCHWc_oc_chunk_o_o_i, conv2d_NCHWc_oh_o_o_i, conv2d_NCHWc_ow_o_o_i, conv2d_NCHWc_oc_block_o_o_i, conv2d_NCHWc_ic_o, conv2d_NCHWc_kh_o, conv2d_NCHWc_kw_o, conv2d_NCHWc_n_o_i, conv2d_NCHWc_oc_chunk_o_i, conv2d_NCHWc_oh_o_i, conv2d_NCHWc_ow_o_i, conv2d_NCHWc_oc_block_o_i, conv2d_NCHWc_ic_i, conv2d_NCHWc_kh_i, conv2d_NCHWc_kw_i, conv2d_NCHWc_n_i, conv2d_NCHWc_oc_chunk_i, conv2d_NCHWc_oh_i, conv2d_NCHWc_ow_i, conv2d_NCHWc_oc_block_i)
T_add_ax0_o_i, T_add_ax0_i = s[T_add].split(T_add_ax0, factor=1)
T_add_ax0_o_o, T_add_ax0_o_i = s[T_add].split(T_add_ax0_o_i, factor=1)
T_add_ax1_o_i, T_add_ax1_i = s[T_add].split(T_add_ax1, factor=2)
T_add_ax1_o_o, T_add_ax1_o_i = s[T_add].split(T_add_ax1_o_i, factor=1)
T_add_ax2_o_i, T_add_ax2_i = s[T_add].split(T_add_ax2, factor=1)
T_add_ax2_o_o, T_add_ax2_o_i = s[T_add].split(T_add_ax2_o_i, factor=1)
T_add_ax3_o_i, T_add_ax3_i = s[T_add].split(T_add_ax3, factor=7)
T_add_ax3_o_o, T_add_ax3_o_i = s[T_add].split(T_add_ax3_o_i, factor=1)
T_add_ax4_o_i, T_add_ax4_i = s[T_add].split(T_add_ax4, factor=16)
T_add_ax4_o_o, T_add_ax4_o_i = s[T_add].split(T_add_ax4_o_i, factor=1)
s[T_add].reorder(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i, T_add_ax4_o_i, T_add_ax0_i, T_add_ax1_i, T_add_ax2_i, T_add_ax3_i, T_add_ax4_i)
s[conv2d_NCHWc].compute_at(s[T_add], T_add_ax4_o_i)
T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused = s[T_add].fuse(T_add_ax0_o_o, T_add_ax1_o_o, T_add_ax2_o_o, T_add_ax3_o_o, T_add_ax4_o_o, T_add_ax0_o_i, T_add_ax1_o_i, T_add_ax2_o_i, T_add_ax3_o_i)
s[T_add].parallel(T_add_ax0_o_o_ax1_o_o_fused_ax2_o_o_fused_ax3_o_o_fused_ax4_o_o_fused_ax0_o_i_fused_ax1_o_i_fused_ax2_o_i_fused_ax3_o_i_fused)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "auto_unroll_max_step", 16)
s[conv2d_NCHWc].pragma(conv2d_NCHWc_n_o_o_o, "unroll_explicit", True)
s[conv2d_NCHWc].vectorize(conv2d_NCHWc_oc_block_i)
s[T_add].vectorize(T_add_ax4_i)


The best replacement found is:
@main = primfn(placeholder_3: handle, placeholder_4: handle, placeholder_5: handle, T_add_1: handle) -> ()
  attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
  buffers = {placeholder: Buffer(placeholder_6: Pointer(float32), float32, [112896], []),
             placeholder_1: Buffer(placeholder_7: Pointer(float32), float32, [4608], []),
             placeholder_2: Buffer(placeholder_8: Pointer(float32), float32, [32], []),
             T_add: Buffer(T_add_2: Pointer(float32), float32, [25088], [])}
  buffer_map = {placeholder_3: placeholder, placeholder_4: placeholder_1, placeholder_5: placeholder_2, T_add_1: T_add}
  preflattened_buffer_map = {placeholder_3: placeholder_9: Buffer(placeholder_6, float32, [1, 9, 28, 28, 16], []), placeholder_4: placeholder_10: Buffer(placeholder_7, float32, [2, 9, 1, 1, 16, 16], []), placeholder_5: placeholder_11: Buffer(placeholder_8, float32, [1, 2, 1, 1, 16], []), T_add_1: T_add_3: Buffer(T_add_2, float32, [1, 2, 28, 28, 16], [])} {
  for (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused: int32, 0, 112) "parallel" {
    allocate(conv2d_NCHWc: Pointer(global float32x16), float32x16, [14]), storage_scope = global {
      conv2d_NCHWc_1: Buffer(conv2d_NCHWc, float32x16, [14], [])[0] = broadcast(0f32, 16)
      conv2d_NCHWc_1[1] = broadcast(0f32, 16)
      conv2d_NCHWc_1[2] = broadcast(0f32, 16)
      conv2d_NCHWc_1[3] = broadcast(0f32, 16)
      conv2d_NCHWc_1[4] = broadcast(0f32, 16)
      conv2d_NCHWc_1[5] = broadcast(0f32, 16)
      conv2d_NCHWc_1[6] = broadcast(0f32, 16)
      conv2d_NCHWc_1[7] = broadcast(0f32, 16)
      conv2d_NCHWc_1[8] = broadcast(0f32, 16)
      conv2d_NCHWc_1[9] = broadcast(0f32, 16)
      conv2d_NCHWc_1[10] = broadcast(0f32, 16)
      conv2d_NCHWc_1[11] = broadcast(0f32, 16)
      conv2d_NCHWc_1[12] = broadcast(0f32, 16)
      conv2d_NCHWc_1[13] = broadcast(0f32, 16)
      for (ic.outer: int32, 0, 24) {
        for (ic.inner: int32, 0, 6) {
          let cse_var_9: int32 = ((ic.outer*96) + (ic.inner*16))
          let cse_var_8: int32 = (cse_var_9 + 2304)
          let cse_var_7: int32 = (((floordiv(((ic.outer*3) + floordiv(ic.inner, 2)), 8)*12544) + (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused*112)) + floormod(((ic.outer*6) + ic.inner), 16))
          let cse_var_6: int32 = (cse_var_7 + 96)
          let cse_var_5: int32 = (cse_var_7 + 80)
          let cse_var_4: int32 = (cse_var_7 + 64)
          let cse_var_3: int32 = (cse_var_7 + 48)
          let cse_var_2: int32 = (cse_var_7 + 32)
          let cse_var_1: int32 = (cse_var_7 + 16)
           {
            conv2d_NCHWc_1[0] = (conv2d_NCHWc_1[0] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[1] = (conv2d_NCHWc_1[1] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[2] = (conv2d_NCHWc_1[2] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[3] = (conv2d_NCHWc_1[3] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[4] = (conv2d_NCHWc_1[4] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[5] = (conv2d_NCHWc_1[5] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[6] = (conv2d_NCHWc_1[6] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_9, 1, 16)]))
            conv2d_NCHWc_1[7] = (conv2d_NCHWc_1[7] + (broadcast(placeholder[cse_var_7], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[8] = (conv2d_NCHWc_1[8] + (broadcast(placeholder[cse_var_1], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[9] = (conv2d_NCHWc_1[9] + (broadcast(placeholder[cse_var_2], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[10] = (conv2d_NCHWc_1[10] + (broadcast(placeholder[cse_var_3], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[11] = (conv2d_NCHWc_1[11] + (broadcast(placeholder[cse_var_4], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[12] = (conv2d_NCHWc_1[12] + (broadcast(placeholder[cse_var_5], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
            conv2d_NCHWc_1[13] = (conv2d_NCHWc_1[13] + (broadcast(placeholder[cse_var_6], 16)*placeholder_1[ramp(cse_var_8, 1, 16)]))
          }
        }
      }
      for (ax1.inner: int32, 0, 2) {
        for (ax3.inner: int32, 0, 7) {
          T_add[ramp((((ax1.inner*12544) + (ax0.outer.outer.ax1.outer.outer.fused.ax2.outer.outer.fused.ax3.outer.outer.fused.ax4.outer.outer.fused.ax0.outer.inner.fused.ax1.outer.inner.fused.ax2.outer.inner.fused.ax3.outer.inner.fused*112)) + (ax3.inner*16)), 1, 16)] = (conv2d_NCHWc_1[((ax1.inner*7) + ax3.inner)] + placeholder_2[ramp((ax1.inner*16), 1, 16)])
        }
      }
    }
  }
}


Running time in time_evaluator:  [1.1861372411642412, 1.2257379812889813, 1.2277005904365907]
|graph_nodes| =  168
|graph_time| =  168
data : 0.000
tvmgen_default_fused_layout_transform : 0.000
p0 : 0.000
p1 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu : 0.000
p2 : 0.000
p3 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1 : 0.000
p4 : 0.000
p5 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu : 0.000
p6 : 0.000
p7 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add : 0.000
p8 : 0.000
p9 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_2 : 0.000
p10 : 0.000
p11 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_1 : 0.000
tvmgen_default_fused_layout_transform_1 : 0.000
p12 : 0.000
p13 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_1 : 0.000
p14 : 0.000
p15 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3 : 0.000
p16 : 0.000
p17 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_2 : 0.000
tvmgen_default_fused_layout_transform_2 : 0.000
p18 : 0.000
p19 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add : 0.000
p20 : 0.000
p21 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31 : 0.000
p22 : 0.000
p23 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_3 : 0.000
p24 : 0.000
p25 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_2 : 0.000
p26 : 0.000
p27 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4 : 0.000
p28 : 0.000
p29 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_4 : 0.000
p30 : 0.000
p31 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_1 : 0.000
p32 : 0.000
p33 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41 : 0.000
p34 : 0.000
p35 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_41 : 0.000
p36 : 0.000
p37 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_11 : 0.000
p38 : 0.000
p39 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42 : 0.000
p40 : 0.000
p41 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_42 : 0.000
p42 : 0.000
p43 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_3 : 0.000
p44 : 0.000
p45 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5 : 0.000
p46 : 0.000
p47 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_5 : 0.000
p48 : 0.000
p49 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_2 : 0.000
p50 : 0.000
p51 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_51 : 0.000
p52 : 0.000
p53 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_51 : 0.000
p54 : 0.000
p55 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_21 : 0.000
p56 : 0.000
p57 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_52 : 0.000
p58 : 0.000
p59 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_52 : 0.000
p60 : 0.000
p61 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_22 : 0.000
p62 : 0.000
p63 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_53 : 0.000
p64 : 0.000
p65 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_6 : 0.000
p66 : 0.000
p67 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_4 : 0.000
p68 : 0.000
p69 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6 : 0.000
p70 : 0.000
p71 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_7 : 0.000
p72 : 0.000
p73 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_3 : 0.000
p74 : 0.000
p75 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_61 : 0.000
p76 : 0.000
p77 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_71 : 0.000
p78 : 0.000
p79 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_31 : 0.000
p80 : 0.000
p81 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_62 : 0.000
p82 : 0.000
p83 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_8 : 0.000
p84 : 0.000
p85 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_5 : 0.000
p86 : 0.000
p87 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_7 : 0.000
p88 : 0.000
p89 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_9 : 0.000
p90 : 0.000
p91 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_4 : 0.000
p92 : 0.000
p93 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_71 : 0.000
p94 : 0.000
p95 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_91 : 0.000
p96 : 0.000
p97 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_add_41 : 0.000
p98 : 0.000
p99 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_72 : 0.000
p100 : 0.000
p101 : 0.000
tvmgen_default_fused_nn_contrib_depthwise_conv2d_NCHWc_add_nn_relu_92 : 0.000
p102 : 0.000
p103 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_6 : 0.000
p104 : 0.000
p105 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8 : 0.000
tvmgen_default_fused_nn_global_avg_pool2d : 0.000
tvmgen_default_fused_layout_transform_3 : 0.000
p106 : 0.000
tvmgen_default_fused_nn_contrib_conv2d_NCHWc : 0.000
tvmgen_default_fused_layout_transform_reshape : 0.000
